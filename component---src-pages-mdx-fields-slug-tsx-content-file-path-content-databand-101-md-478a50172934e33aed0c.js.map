{"version":3,"file":"component---src-pages-mdx-fields-slug-tsx-content-file-path-content-databand-101-md-478a50172934e33aed0c.js","mappings":"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","sources":["webpack://vad-var-site/./content/Databand/101.md","webpack://vad-var-site/./src/pages/{mdx.fields__slug}.tsx","webpack://vad-var-site/./src/components/MDXWrapper/MDXWrapper.tsx","webpack://vad-var-site/./src/components/MDXWrapper/index.ts","webpack://vad-var-site/./src/components/SEO.tsx","webpack://vad-var-site/./src/components/TableOfContents/TableOfContents.tsx","webpack://vad-var-site/./src/components/TableOfContents/index.ts","webpack://vad-var-site/./src/components/TableOfContents/TableOfContents.module.scss","webpack://vad-var-site/./src/styles/pages/{mdx.fields__slug}.module.scss","webpack://vad-var-site/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    section: \"section\",\n    h1: \"h1\",\n    h2: \"h2\",\n    a: \"a\",\n    h3: \"h3\",\n    p: \"p\",\n    strong: \"strong\",\n    ol: \"ol\",\n    li: \"li\",\n    img: \"img\",\n    code: \"code\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"1\",\n    \"aria-labelledby\": \"101-demonstration-of-dataflow\"\n  }, React.createElement(_components.h1, {\n    id: \"101-demonstration-of-dataflow\"\n  }, \"101: Demonstration of Dataflow\"), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"initial-set-up\"\n  }, React.createElement(_components.h2, {\n    id: \"initial-set-up\"\n  }, React.createElement(_components.a, {\n    href: \"#initial-set-up\"\n  }, \"Initial set-up\")), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"3\",\n    \"aria-labelledby\": \"register-for-the-business-partner-databand-demo-environment\"\n  }, React.createElement(_components.h3, {\n    id: \"register-for-the-business-partner-databand-demo-environment\"\n  }, React.createElement(_components.a, {\n    href: \"#register-for-the-business-partner-databand-demo-environment\"\n  }, \"Register for the Business Partner Databand demo environment\")), \"\\n\", React.createElement(_components.p, null, \"Open a session in your preferred web browser at \", React.createElement(_components.a, {\n    href: \"https://ibm-bp-demo.databand.ai/\"\n  }, \"https://ibm-bp-demo.databand.ai/\"), \" and click on \", React.createElement(_components.strong, null, \"Registration\"), \". Complete the form and click on \", React.createElement(_components.strong, null, \"Register\"), \". Provide the e-mail address you used to register in the workshop slack so the workshop team can activate your registration.\"), \"\\n\")), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"databand-overview\"\n  }, React.createElement(_components.h2, {\n    id: \"databand-overview\"\n  }, React.createElement(_components.a, {\n    href: \"#databand-overview\"\n  }, \"Databand Overview\")), \"\\n\", React.createElement(_components.p, null, \"Databand provides an overview of an organization's data pipelines that are running in multiple workflow environments. To help you understand the key features of Databand, this lab will walk through several parts of the user interface. Starting from the main dashboard, you will see how to view the overall health of the pipelines and see the top errors and failing pipelines. Then the lab continues through analyzing alerts, looking at pipeline and data quality issues. Then the tour continues over the Pipeline and Datasets panels showing how to use these to investigate issues and understand impacts of failures. The run metadata shown in the demonstration environment comes from pipeline runs in an Airflow cluster. Several of the examples you will observe are based on a hypothetical processing pipeline of live 311 (city customer service requests) data for New York City. The code for the pipelines is intentinoally configured to throw various types of errors at specific times to provide examples of typical failures in a production environment.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"If you have not already done so, \", React.createElement(_components.a, {\n    href: \"https://ibm-bp-demo.databand.ai/\"\n  }, \"Log in to the Business Partner Databand demo environment\"), \". This will bring you to the main Databand dashboard\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793603.49761105042/dbnd-dashboard.png\",\n    alt: \"dbnd dashboard\"\n  }), \"\\n\", React.createElement(_components.p, null, \"The dashboard shows an overview of pipeline runs that have been observed during a time window specified by the filter in the upper right. Other dashboard filters allow selection of specific sources (for example an Airflow cluster or DataStage instance) and the projects or specific pipelines of interest. Scroll down on the dashboard view to show the top errors and pipeline statistics. The pipeline statisitics include failures and errors, a count of runs, their average runtime and total pipeline runtime.\"), \"\\n\"), \"\\n\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"alerts\"\n  }, React.createElement(_components.h2, {\n    id: \"alerts\"\n  }, React.createElement(_components.a, {\n    href: \"#alerts\"\n  }, \"Alerts\")), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Alerts are one of the main features that data engineers will find valuable in Databand. Click on the left hand \", React.createElement(_components.strong, null, \"Alerts\"), \" item to bring up the alerts display\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793599.49731105041/dbnd-alerts.png\",\n    alt: \"dbnd alerts\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Investigate a specific critical alert by setting up a filter. Click on the \", React.createElement(_components.strong, null, \"Filter\"), \" button to bring up a list of filtering criteria.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793595.49731105040/dbnd-alert-panel.png\",\n    alt: \"dbnd alert panel\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Select a \", React.createElement(_components.strong, null, \"Severity\"), \" type of \", React.createElement(_components.strong, null, \"Critical\"), \", then expand \", React.createElement(_components.strong, null, \"Assets\"), \", followed by \", React.createElement(_components.strong, null, \"Project\"), \" and search for and select the \", React.createElement(_components.strong, null, \"Global Sales\"), \" project.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793591.4971105037/dbnd-alert-filter.png\",\n    alt: \"dbnd alert filter\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Click on the \", React.createElement(_components.strong, null, \"Save\"), \" button to apply the filter.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793651.49981105060/dbnd-filter-save.png\",\n    alt: \"dbnd filter save\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Click on the first critical alert \", React.createElement(_components.strong, null, \"Run failed: Global Sales DAG\")), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793639.49931105056/dbnd-fail-alert-select.png\",\n    alt: \"dbnd fail alert select\"\n  }), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793643.49931105057/dbnd-fail-alert.png\",\n    alt: \"dbnd fail alert\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Look at the \", React.createElement(_components.strong, null, \"Failed task\"), \" panel on the right. This panel zooms right in to the specific error message from the logs of the failing task of the pipeline. This accelerates detection of the root cause, an expired AWS token being used by the task in the pipeline.\"), \"\\n\", React.createElement(_components.p, null, \"When an engineer is going to work on correcting this issue they can first \", React.createElement(_components.strong, null, \"Acknowledge\"), \" the issue, then perform activities to address the root cause in the error. Then after resolving the problem, they mark the alert notification handled by clicking on the \", React.createElement(_components.strong, null, \"Resolve\"), \" button.\"), \"\\n\", React.createElement(_components.p, null, \"The Impact Analysis shows the affected datasets, affected pipelines and missing operations as a result of the issue from the alert. Select each tab to see a list of what is affected.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Click on the \", React.createElement(_components.strong, null, \"Lineage\"), \" tab in the Alert view to open a flow-like view showing the failure in the pipeline and the affected datasets\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793591.4971105038/dbnd-alert-lineage-select.png\",\n    alt: \"dbnd alert lineage select\"\n  }), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793591.4971105039/dbnd-alert-lineage.png\",\n    alt: \"dbnd alert lineage\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"A more detailed view of downstream pipelines, their tasks and datasets can be shown by clicking on the \", React.createElement(_components.strong, null, \"Downstream pipelines\"), \" button. After switching to this view, may need to scale and drag the view to see the pipeline causing the alert, and then see all of the related pipelines that process the output from the alerting pipeline.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793655.51105062/dbnd-lineage-downstream.png\",\n    alt: \"dbnd lineage downstream\"\n  }), \"\\n\", React.createElement(_components.p, null, \"This view shows that each of the downstream pipelines: \", React.createElement(_components.code, null, \"na_sales_processing\"), \", \", React.createElement(_components.code, null, \"eu_sales_processing\"), \", and \", React.createElement(_components.code, null, \"as_sales_processing\"), \" will not be able to correctly process the latest data due to the failed task. Also in this \", React.createElement(_components.strong, null, \"Lineage\"), \" view you can click on tasks and datasets and see how they are related to each other.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Switch to another alert by going back to the \", React.createElement(_components.strong, null, \"Alerts\"), \" panel and setting a filter for \", React.createElement(_components.strong, null, \"Severity\"), \" of \", React.createElement(_components.strong, null, \"Medium\"), \" then expand \", React.createElement(_components.strong, null, \"Assets\"), \", followed by \", React.createElement(_components.strong, null, \"Project\"), \" and search for and select the \", React.createElement(_components.strong, null, \"Service 311\"), \" project.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793587.49681105036/dbnd-alert-filter-medium.png\",\n    alt: \"dbnd alert filter medium\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Click on the \", React.createElement(_components.strong, null, \"Save\"), \" button to apply the filter.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793651.49981105061/dbnd-filter-save2.png\",\n    alt: \"dbnd filter save2\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Click on one of the items that has a trigger time close to 11:00 PM UTC (tip: hover over the trigger time to see the entry in UTC)\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793667.50051105067/dbnd-schema-alert-select.png\",\n    alt: \"dbnd schema alert select\"\n  }), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793671.50071105068/dbnd-schema-alert.png\",\n    alt: \"dbnd schema alert\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Observe that this pipeline does not have any failed tasks. Databand has detected a change in the schema being handled in the pipeline and the specifics are displayed in the \", React.createElement(_components.strong, null, \"Impact Analysis\"), \". The analysis has different information than the previous alert which now includes the schema changes and the affected datasets and pipelines.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Click on \", React.createElement(_components.strong, null, \"Show details\"), \" over one of the schema change messages to see the actual change. In this case, the \", React.createElement(_components.code, null, \"incident_address\"), \" data is no longer appearing in the \", React.createElement(_components.code, null, \"NYC 311 API\"), \" dataset as read by the pipeline in the \", React.createElement(_components.code, null, \"get_hourly_data\"), \" task. This is an alteration of the schema from the previous pipeline run.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793663.50021105065/dbnd-schema-alert-detail.png\",\n    alt: \"dbnd schema alert detail\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Click on \", React.createElement(_components.strong, null, \"Lineage\"), \" to investigate this issue. This view shows the flow of data from the source dataset \", React.createElement(_components.code, null, \"NYC 311 API\"), \" to downstream datasets and tasks in the pipeline. Note again that technically there are no failures or errors thrown by the tasks in the pipeline.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793663.50021105066/dbnd-schema-alert-lineage.png\",\n    alt: \"dbnd schema alert lineage\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"The \", React.createElement(_components.strong, null, \"Downstream pipelines\"), \" view is a little less complicated than the previous example - making it straightforward to follow:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793675.50071105069/dbnd-schema-lineage-downstream.png\",\n    alt: \"dbnd schema lineage downstream\"\n  }), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"The NYC 311 API dataset read by \", React.createElement(_components.code, null, \"get_hourly_data\"), \" now has a column removed\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"When processed by the \", React.createElement(_components.code, null, \"service_311_get_data\"), \" pipeline, this results in the column also being removed from the downstream datasets.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"One of these datasets, \", React.createElement(_components.code, null, \"data-snowflake.ibm-bp-demo-af.raw_hourly_data\"), \" is read by a task in another pipeline, \", React.createElement(_components.code, null, \"service_311_closed_requests\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Unexpected schema changes can cause problems for downstream tasks like performing automatic updates to machine learning models. Data engineers being able to identify changes going on in the processing pipeline is very important to providing reliable data for use as inputs to ML and AI tasks.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"To see an example for how to add an alert for data in a column where the values do not match what is expected, start by clicking on \", React.createElement(_components.strong, null, \"Alerts\"), \" and the \", React.createElement(_components.strong, null, \"Add Alert\"), \" button\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793579.49661105033/dbnd-add-alert.png\",\n    alt: \"dbnd add alert\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Locate the \", React.createElement(_components.strong, null, \"Data Quality - Pipelines\"), \" tile and click \", React.createElement(_components.strong, null, \"Set up\")), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793583.49661105034/dbnd-alert-dataquality.png\",\n    alt: \"dbnd alert dataquality\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Choose by typing in the search options the \", React.createElement(_components.code, null, \"NYC 311 API\"), \" dataset. Then, select from the validation column pull-down list the \", React.createElement(_components.code, null, \"borough\"), \" column and click \", React.createElement(_components.strong, null, \"Apply\"), \". In New York City, there are 5 boroughs so to identify cases where there are unexpected values, we would set a validation condition where the \", React.createElement(_components.code, null, \"Unique count\"), \" is greater than \", React.createElement(_components.code, null, \"5\"), \".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793583.49661105035/dbnd-alert-defined.png\",\n    alt: \"dbnd alert defined\"\n  }), \"\\n\", React.createElement(_components.p, null, \"The alert defaults to a medium severity, but this can be changed to higher or lower levels and the name and description can be customized for the alert. In a later lab you will define some alerts so please cancel by clicking on the \", React.createElement(_components.strong, null, \"X\"), \" in the upper right corner to return to the Alerts panel.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"As a side note, inspection of the dataset will show cases where the \", React.createElement(_components.code, null, \"borough\"), \" value in a row is \", React.createElement(_components.code, null, \"UNSPECIFIED\"), \", but it is a very rare occurrance compared to all of the other records sent to the 311 service.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"pipelines\"\n  }, React.createElement(_components.h2, {\n    id: \"pipelines\"\n  }, React.createElement(_components.a, {\n    href: \"#pipelines\"\n  }, \"Pipelines\")), \"\\n\", React.createElement(_components.p, null, \"Data engineers can use the pipelines view to see more information about pipeline execution for both successful and unsuccessful runs\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Click on \", React.createElement(_components.strong, null, \"Pipelines\"), \" label on the left side to open the pipelines view.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793659.51105064/dbnd-pipelines.png\",\n    alt: \"dbnd pipelines\"\n  }), \"\\n\", React.createElement(_components.p, null, \"This view shows the name of each pipeline, the associated project, run statistics, when the last run was completed and the source workflow engine for the pipeline. In the demonstration Databand instance, the majority of the pipeline runs are from the \", React.createElement(_components.code, null, \"ibm-bp-demo-af\"), \" Airflow cluster.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Select the \", React.createElement(_components.code, null, \"service_311_get_data\"), \" row from the pipelines view. This will show all runs which are scheduled at every hour to extract 311 data from the dataset corresponding to all entries in the previous hour.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793655.51105063/dbnd-pipeline-select.png\",\n    alt: \"dbnd pipeline select\"\n  }), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793679.5011105071/dbnd-service311-pipeline.png\",\n    alt: \"dbnd service311 pipeline\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"From this view, select the run (by clicking near the timestamp) of the critical alert with the \", React.createElement(_components.strong, null, \"Error Type\"), \" that contains \", React.createElement(_components.code, null, \"<class 'requests.exceptions.HTTPError'>\"), \". This will open a side-by-side view of pipeline run details and a flow-based view of the DAG for the tasks in the pipeline.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793675.50071105070/dbnd-select-failed.png\",\n    alt: \"dbnd select failed\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Click on the failed \", React.createElement(_components.code, null, \"get_hourly_data\"), \" task in either the details or flow view to open up more details on this failed task.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793647.49951105059/dbnd-failed-task-select.png\",\n    alt: \"dbnd failed task select\"\n  }), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793647.49951105058/dbnd-failed-task-error.png\",\n    alt: \"dbnd failed task error\"\n  }), \"\\n\", React.createElement(_components.p, null, \"The most relevant error information from the overall task logs is extracted and shown. This makes easy to determine that the task failure is related to the request to the source dataset. Other tabs next to \", React.createElement(_components.strong, null, \"Details\"), \" allow the inspection of metrics, full log data, the source code for the tasks and other details. (This is a case where an intentional typo in the url is created by the code of the pipeline to simulate a real error.)\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Click on the \", React.createElement(_components.strong, null, \"Data Interactions\"), \" tab to see a graph of the historical activity from runs as well as operations that failed as a result of the failure in the task. In the table below the history chart, issues with data operations are shown. Horizontally scrolling in this table will show the history trend of the operations from this task, including the current pipeline run gap from the failure.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793611.4981105046/dbnd-data-interactions.png\",\n    alt: \"dbnd data interactions\"\n  }), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793627.49881105052/dbnd-datainteraction-detail.png\",\n    alt: \"dbnd data interaction detail\"\n  }), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"For failing tasks in pipelines, similar information can be found by analysis starting from the \", React.createElement(_components.strong, null, \"Pipeline\"), \" view or the \", React.createElement(_components.strong, null, \"Alerts\"), \" view, but each view has different benefits as well. From the \", React.createElement(_components.strong, null, \"Pipelines\"), \" view it is clearer to see the full range of data processing, both for successful and unsuccessful runs while the \", React.createElement(_components.strong, null, \"Alerts\"), \" view has a focus on failures and issues. In a later lab there will be more coverage of pipelines so to finish this demonstration/lab, let's turn to \", React.createElement(_components.strong, null, \"Datasets\")), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"datasets\"\n  }, React.createElement(_components.h2, {\n    id: \"datasets\"\n  }, React.createElement(_components.a, {\n    href: \"#datasets\"\n  }, \"Datasets\")), \"\\n\", React.createElement(_components.p, null, \"When workflows observed by Databand interact with datasets, they are automatically discovered and added to the UI. This allows data engineers to monitor datasets in motion. The \", React.createElement(_components.strong, null, \"Datasets\"), \" page can be used to view historical operations for known datasets.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Click on \", React.createElement(_components.strong, null, \"Datasets\"), \" label on the left side to open the datasets view.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793635.4991105055/dbnd-datasets.png\",\n    alt: \"dbnd datasets\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Select from the dataset list the \", React.createElement(_components.code, null, \"data-snowflake.ibm-bp-demo-af.raw_hourly_data\"), \" entry.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793579.49661105032/dbnd-311hourly-data.png\",\n    alt: \"dbnd 311hourly data\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"This will open a view with the number of rows read and written as well as the total data operations on a daily basis. On the right, any issues or failures from the pipelines interacting with the dataset are shown. Review the information displayed on this view. Then, click on a number next to the \", React.createElement(_components.code, null, \"service_311_get_data\"), \" pipeline listed in the \", React.createElement(_components.strong, null, \"Issue Summary\"), \" to open a view of just the pipeline runs with issues.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793635.4991105054/dbnd-dataset-issue-select.png\",\n    alt: \"dbnd dataset issue select\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"In the \", React.createElement(_components.strong, null, \"History\"), \" tab that is opened with the pipeline runs, you can narrow the list to read or writes and view details on the issues. Click on the record count in one of the rows to bring up a data preview (data preview is an optional feature that can be enabled in the Databand configuration).\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793631.49881105053/dbnd-dataset-issue-details.png\",\n    alt: \"dbnd dataset issue details\"\n  }), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793623.49851105050/dbnd-data-preview.png\",\n    alt: \"dbnd data preview\"\n  }), \"\\n\", React.createElement(_components.p, null, \"click on the \", React.createElement(_components.strong, null, \"X\"), \" in the upper right corner to dismiss the preview.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Clicking on the number of columns in the \", React.createElement(_components.strong, null, \"Schema\"), \" column brings up a display of the actual columns at the time of the run.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793607.49781105045/dbnd-data-columns.png\",\n    alt: \"dbnd data columns\"\n  }), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793607.49781105044/dbnd-data-column-detail.png\",\n    alt: \"dbnd data column detail\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Compare the column list between one of the runs with a column removed vs. a column added to see that the \", React.createElement(_components.code, null, \"incident_address\"), \" column is being removed from the data in the pipeline (it appears right after the \", React.createElement(_components.code, null, \"incident_zip\"), \" column when present.)\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Click on the \", React.createElement(_components.strong, null, \"Operations\"), \" tab to go to the operations view.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793619.49831105049/dbnd-data-operations.png\",\n    alt: \"dbnd data operations\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"In the Operations view choose the \", React.createElement(_components.code, null, \"get_hourly_data\"), \" task and the \", React.createElement(_components.code, null, \"Write\"), \" operation item to see statistics by that task and operation to the Dataset.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793615.4981105048/dbnd-data-operation-select.png\",\n    alt: \"dbnd data operation select\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"From the view of current and prior runs of the pipeline, hover the pointer over one of the metric points to see the details of the metric as well as the range used for potential anomaly detection.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793611.4981105047/dbnd-data-operation-count.png\",\n    alt: \"dbnd data operation count\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Select another column name, for example \", React.createElement(_components.code, null, \"borough\"), \" to see the metrics for that column.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793623.49851105051/dbnd-data-select-borough.png\",\n    alt: \"dbnd data select borough\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Hover the pointer over the latest point in the \", React.createElement(_components.strong, null, \"Distinct count\"), \" metric to see that in the dataset, the recent and prior run history shows that the data has entries from 5 (and only 5) boroughs.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1686079793603.49761105043/dbnd-data-borough-count.png\",\n    alt: \"dbnd data borough count\"\n  }), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"This completes the overview and tour of Databand. If you are giving a customer demo, at this point you can start a discussion about how Databand's acceleration of understanding issues in pipeline execution and visibility to potential data quality issues can help data engineers to identify and fix problems in data processiong pipelines before they have a significant negative impact to the business.\"), \"\\n\", React.createElement(_components.p, null, \"You may have noticed in the overview that there was not a lot time spent on the \", React.createElement(_components.strong, null, \"Integration\"), \" panel - in the \", React.createElement(_components.a, {\n    href: \"/databand/101\"\n  }, \"next lab\"), \" you will get hands on and set up your own integration between an IBM DataStage flow and Databand.\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/VAD-VAR-Workshop/VAD-VAR-Workshop/content/Databand/101.md\";\nimport React, {useRef, useState} from 'react';\nimport cx from 'classnames';\nimport SEO from '@components/SEO';\nimport PageHeader from '@components/PageHeader';\nimport MDXWrapper from '@components/MDXWrapper';\nimport ContentWrapper from '@components/ContentWrapper';\nimport TableOfContents from '@components/TableOfContents';\nimport * as styles from '@styles/pages/{mdx.fields__slug}.module.scss';\nconst Content = props => {\n  const {data: {mdx: {tableOfContents: {items: tocItems}, frontmatter: {toc = true, title, timeToComplete, updated}}}, children} = props;\n  const articleRef = useRef(null);\n  const {0: currSection} = useState('');\n  const showToc = (toc === null ? true : toc) && tocItems;\n  return React.createElement(React.Fragment, null, React.createElement(PageHeader, {\n    timeToComplete,\n    updated\n  }, tocItems[0].title || title || ''), React.createElement(ContentWrapper, {\n    className: styles.wrapper\n  }, React.createElement(\"article\", {\n    className: cx(styles.article, !showToc && styles.noToc),\n    ref: articleRef\n  }, React.createElement(MDXWrapper, {\n    components: {\n      h1: () => null\n    }\n  }, children)), showToc && React.createElement(TableOfContents, {\n    itemsList: tocItems,\n    maxDepth: 2,\n    currSection: currSection\n  })));\n};\nconst pageQuery = \"3587680389\";\nexport const Head = props => {\n  const {location: {pathname}, data: {mdx: {frontmatter: {title}, tableOfContents: {items}}}} = props;\n  return React.createElement(SEO, {\n    pathname,\n    title: title || items[0].title || undefined\n  });\n};\nContent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Content, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React, { memo } from 'react';\nimport { MDXProvider } from '@mdx-js/react';\nimport { Props } from '@mdx-js/react/lib';\nimport {\n  BlockQuote,\n  CodeBlock,\n  ImageWrapper,\n  QuizAlert,\n  SmartLink,\n  SubHeader,\n  TableWrapper,\n  CopyText\n} from '../replacements';\n\ninterface MDXWrapperProps {\n  children: React.ReactNode;\n  components?: Props['components'];\n}\n\nconst standardComponents: Props['components'] = {\n  table: TableWrapper,\n  a: SmartLink,\n  blockquote: BlockQuote,\n  SubHeader: SubHeader,\n  img: ImageWrapper,\n  code: CodeBlock,\n  QuizAlert: QuizAlert,\n  CopyText: CopyText\n};\n\nconst MDXWrapper = memo(function MDXWrapper({ children, components = {} }: MDXWrapperProps) {\n  return (\n    <MDXProvider\n      components={{\n        ...standardComponents,\n        ...components\n      }}>\n      {children}\n    </MDXProvider>\n  );\n});\n\nexport default MDXWrapper;\n","import MDXWrapper from './MDXWrapper';\n\nexport default MDXWrapper;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useSiteMetadata from '@hooks/useSiteMetaData';\n\ninterface SEOProps {\n  title?: string;\n  description?: string;\n  pathname?: string;\n  children?: React.ReactNode;\n}\n\nconst SEO = (props: SEOProps) => {\n  const { title, description, pathname, children } = props;\n  const { description: defDescription, title: defTitle, origin } = useSiteMetadata();\n  const {\n    i18n: { language }\n  } = useTranslation();\n\n  const seo = {\n    title: title || defTitle,\n    description: description || defDescription,\n    url: `${origin}${pathname || ''}`\n  };\n\n  return (\n    <>\n      <html lang={language} />\n      <link\n        rel='icon'\n        href=\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='0.9em' font-size='90'>🦺</text></svg>\"\n      />\n      <title>{seo.title}</title>\n      <link rel='canonical' href={seo.url} />\n      <meta name='description' content={seo.description} />\n\n      <meta property='og:title' content={seo.title} />\n      <meta property='og:url' content={seo.url} />\n      <meta property='og:type' content='website' />\n      <meta property='og:description' content={seo.description} />\n\n      <meta name='twitter:card' content='summary' />\n      <meta name='twitter:title' content={seo.title} />\n      <meta name='twitter:url' content={seo.url} />\n      <meta name='twitter:description' content={seo.description} />\n      <meta name='twitter:site' content={'https://www.ibm.com'} />\n      <meta name='twitter:creator' content={'@IBM'} />\n      {children}\n    </>\n  );\n};\n\nexport default SEO;\n","import React, { useMemo } from 'react';\nimport { Link as GatsbyLink } from 'gatsby';\nimport cx from 'classnames';\nimport useCurrentHeading from '@hooks/useCurrentHeading';\nimport * as styles from './TableOfContents.module.scss';\n\ninterface TableOfContentsProps {\n  itemsList: TOCItem[];\n  currSection: string | undefined;\n  maxDepth?: number;\n}\n\ninterface TOCItem {\n  title: string;\n  url: string;\n  items?: TOCItem[];\n}\n\ninterface FlatTOCItem extends Omit<TOCItem, 'items'> {\n  depth: number;\n}\n\nconst flattenTOC = (toc: TOCItem[], flatList: FlatTOCItem[] = [], depth = 0): FlatTOCItem[] => {\n  toc.forEach((item) => {\n    const { title, url, items } = item;\n    flatList.splice(flatList.length, 0, {\n      depth,\n      title,\n      url\n    });\n\n    if (items && items.length > 0) flattenTOC(items, flatList, depth + 1);\n  });\n\n  return flatList;\n};\n\nconst TableOfContents = (props: TableOfContentsProps) => {\n  const { itemsList } = props;\n\n  const flatTOC = useMemo(() => flattenTOC(itemsList[0].items || []), [itemsList]);\n\n  const currentSection = useCurrentHeading('h1[id],h2[id]', {\n    threshold: [0, 1],\n    rootMargin: `-${styles.headerHeight} 0px -90% 0px`\n  });\n\n  if (flatTOC.length < 1) return null;\n\n  return (\n    <nav className={styles.toc}>\n      <div className={styles.tocStack}>\n        <h6 className={styles.tocHeader}>\n          <GatsbyLink to='#' replace>\n            On this page\n          </GatsbyLink>\n        </h6>\n\n        {flatTOC.map(({ title, url }, index) => {\n          return (\n            <a\n              className={cx(styles.link, currentSection === url.substring(1) && styles.activeItem)}\n              key={index}\n              href={url}>\n              {title}\n            </a>\n          );\n        })}\n      </div>\n    </nav>\n  );\n};\n\nexport default TableOfContents;\n","import TableOfContents from './TableOfContents';\n\nexport default TableOfContents;\n","// extracted by mini-css-extract-plugin\nexport var activeItem = \"TableOfContents-module--activeItem--3869f\";\nexport var headerHeight = \"48px\";\nexport var link = \"TableOfContents-module--link--b292b\";\nexport var toc = \"TableOfContents-module--toc--54d35\";\nexport var tocHeader = \"TableOfContents-module--tocHeader--05956\";\nexport var tocStack = \"TableOfContents-module--tocStack--90609\";","// extracted by mini-css-extract-plugin\nexport var article = \"{mdx-fields__slug}-module--article--e3d5a\";\nexport var noToc = \"{mdx-fields__slug}-module--noToc--82387\";\nexport var wrapper = \"{mdx-fields__slug}-module--wrapper--58e72\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","section","h1","h2","a","h3","p","strong","ol","li","img","code","blockquote","_provideComponents","components","React","className","id","href","src","alt","wrapper","MDXLayout","Content","data","mdx","tableOfContents","items","tocItems","frontmatter","toc","title","timeToComplete","updated","children","articleRef","useRef","currSection","useState","showToc","PageHeader","ContentWrapper","styles","cx","ref","MDXWrapper","TableOfContents","itemsList","maxDepth","Head","location","pathname","SEO","undefined","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","standardComponents","table","TableWrapper","SmartLink","BlockQuote","SubHeader","ImageWrapper","CodeBlock","QuizAlert","CopyText","memo","_ref","MDXProvider","description","defDescription","defTitle","origin","useSiteMetadata","i18n","language","useTranslation","seo","url","lang","rel","name","content","property","flattenTOC","flatList","depth","forEach","item","splice","length","flatTOC","useMemo","currentSection","useCurrentHeading","threshold","rootMargin","GatsbyLink","to","replace","map","index","substring","key","article","noToc","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}