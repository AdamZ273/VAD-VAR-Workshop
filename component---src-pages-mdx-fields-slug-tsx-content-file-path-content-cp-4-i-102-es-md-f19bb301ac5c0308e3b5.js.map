{"version":3,"file":"component---src-pages-mdx-fields-slug-tsx-content-file-path-content-cp-4-i-102-es-md-f19bb301ac5c0308e3b5.js","mappings":"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","sources":["webpack://vad-var-site/./content/CP4I/102.es.md","webpack://vad-var-site/./src/pages/{mdx.fields__slug}.tsx","webpack://vad-var-site/./src/components/MDXWrapper/MDXWrapper.tsx","webpack://vad-var-site/./src/components/MDXWrapper/index.ts","webpack://vad-var-site/./src/components/SEO.tsx","webpack://vad-var-site/./src/components/TableOfContents/TableOfContents.tsx","webpack://vad-var-site/./src/components/TableOfContents/index.ts","webpack://vad-var-site/./src/components/TableOfContents/TableOfContents.module.scss","webpack://vad-var-site/./src/styles/pages/{mdx.fields__slug}.module.scss","webpack://vad-var-site/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    section: \"section\",\n    h1: \"h1\",\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    strong: \"strong\",\n    tbody: \"tbody\",\n    td: \"td\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"1\",\n    \"aria-labelledby\": \"102-integración-de-bajo-código-mediante-ia\"\n  }, React.createElement(_components.h1, {\n    id: \"102-integración-de-bajo-código-mediante-ia\"\n  }, \"102: Integración de bajo código mediante IA\"), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"introducción\"\n  }, React.createElement(_components.h2, {\n    id: \"introducción\"\n  }, React.createElement(_components.a, {\n    href: \"#introducción\"\n  }, \"Introducción\")), \"\\n\", React.createElement(_components.p, null, \"La asignación de datos es uno de los pasos más importantes del diseño de un flujo de integración. Esta tarea de diseño suele ser la más tediosa, lenta, compleja y propensa a errores, ya que requiere un profundo conocimiento de todos los campos de datos de los sistemas de origen y destino. Construir un mapeo de datos exitoso también requiere análisis de negocio, experiencia en el dominio y conocimientos técnicos sobre los sistemas de origen y destino.\"), \"\\n\", React.createElement(_components.p, null, \"Nuestro objetivo al crear Mapping Assist era simplificar y automatizar la asignación de datos. Y cuando se combina con la amplia lista de conectores preconstruidos y ricos en seguridad, puede acelerar la entrega de valor a la empresa a través de la integración.\"), \"\\n\", React.createElement(_components.p, null, \"ACME Retail ha adquirido otro negocio y necesita sincronizar los contactos entre dos aplicaciones CRM. En esta demo, asistimos a ACME utilizando IA e integración low-code, sincronizando la información de contactos entre los sistemas Salesforce e Insightly CRM. Reconoceremos y haremos coincidir automáticamente los campos con altos niveles de confianza. También recomendaremos y ayudaremos con otros campos en los que la confianza sea menor. Y generaremos una transformación entre los campos cuando los formatos de campo no sean iguales. A medida que continúe utilizando la función Mapping Assist, ésta aprenderá de las coincidencias previamente aceptadas para aumentar los niveles de confianza en futuros esfuerzos de mapeo.\"), \"\\n\", React.createElement(_components.p, null, \"Gracias a la cartografía basada en IA, podemos reducir los errores y acelerar el desarrollo de la integración.\"), \"\\n\", React.createElement(_components.p, null, \"En la demostración, ejecutaremos los siguientes pasos:\"), \"\\n\", React.createElement(_components.p, null, \"- Acceda al entorno de Cloud Pak for Integration - Cree e implemente un flujo habilitado para API para asignar los campos de \\\"contacto\\\" entre Salesforce e Insightly CRM - Asigne automáticamente todos los campos siempre que la confianza de coincidencia sea al menos del 80% - Procese sugerencias relevantes y detalladas a nivel de campo que se proporcionan cuando la confianza está entre el 30% y el 80% - Genere una transformación de datos cuando los formatos de campo no coincidan - Ejecute el flujo para ver los resultados\"), \"\\n\", React.createElement(_components.p, null, \"Empecemos.\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"1---acceder-al-entorno\"\n  }, React.createElement(_components.h2, {\n    id: \"1---acceder-al-entorno\"\n  }, React.createElement(_components.a, {\n    href: \"#1---acceder-al-entorno\"\n  }, \"1 - Acceder al entorno\")), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"1.1\")), React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Inicie sesión en Cloud Pak para la integración\")))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Narración\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Se requiere un nuevo enfoque con automatización y mejora continua alimentado por algoritmos de IA. IBM Cloud Pak for Integration es una solución de integración híbrida que proporciona un ciclo de vida automatizado a través de múltiples estilos de integración empresarial. Con IBM Cloud Pak for Integration, las empresas pueden acelerar el desarrollo de la integración, reducir costes y mantener una seguridad, gobernanza y disponibilidad mejoradas. Veamos IBM Cloud Pak for Integration en acción. Para la demostración de hoy, estamos utilizando IBM Cloud Pak for Integration instalado en la nube de IBM. Permítanme iniciar sesión.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 1.1.1\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Abra Cloud Pak for Integration y haga clic en las \", React.createElement(_components.strong, null, \"credenciales proporcionadas por IBM (sólo administrador)\"), \".\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/mapping-assist-1-1-1.png\",\n    alt: \"\"\n  }))), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 1.1.2\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Inicie sesión con el \", React.createElement(_components.strong, null, \"nombre de usuario 'admin'\"), \" y la \", React.createElement(_components.strong, null, \"contraseña\"), \" creada en el paso 2.5 de preparación de la demostración.\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/mapping-assist-1-1-2.png\",\n    alt: \"\"\n  }))))), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"1.2\")), React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Ver la pantalla de inicio de Cloud Pak for Integration\")))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Narración\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"¡Bienvenido a IBM Cloud Pak for Integration! Ya estamos en la pantalla de inicio que muestra todas las capacidades de Cloud Pak reunidas en un único lugar. Las capacidades de integración especializadas - para la gestión de API, integración de aplicaciones, mensajería y más - se construyen sobre potentes servicios de automatización. Veamos las capacidades de integración disponibles en este Cloud Pak.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 1.2.1\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Muestre la página de inicio y haga clic en \", React.createElement(_components.strong, null, \"Instancias de integración\"), \".\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/mapping-assist-1-2-1.png\",\n    alt: \"\"\n  }))))), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"1.3\")), React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Abrir el Diseñador\")))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Narración\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Como puede ver, a través de una única interfaz puede acceder a todas las capacidades de integración que su equipo necesita, incluida la gestión de API, la integración de aplicaciones, la mensajería empresarial, los eventos y la transferencia de alta velocidad.En esta demostración, utilizaremos la función Mapping Assist de App Connect Designer para acelerar la transformación de formatos de datos complejos utilizados por aplicaciones en la nube, como Salesforce e Insightly. Abramos nuestro App Connect Designer.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 1.3.1\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Muestre la página \", React.createElement(_components.strong, null, \"Instancias de integración\"), \". Haga clic en \", React.createElement(_components.strong, null, \"ace-designer-demo\"), \".\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/mapping-assist-1-3-1.png\",\n    alt: \"\"\n  }))))), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"2---crear-el-flujo\"\n  }, React.createElement(_components.h2, {\n    id: \"2---crear-el-flujo\"\n  }, React.createElement(_components.a, {\n    href: \"#2---crear-el-flujo\"\n  }, \"2 - Crear el flujo\")), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"2.1\")), React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Crear flujos para una API\")))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Narración\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Aquí estamos en la herramienta de diseño. Aquí es donde podemos crear todos nuestros flujos de integración API y gestionar nuestra conectividad a nuestros servicios y puntos finales. Como empezamos, no hay nada aquí todavía, así que vamos a construir un poco de lógica de integración. Veamos lo sencillo que es crear nuestro flujo para una API. En primer lugar, tenemos que crear un modelo para nuestro contacto.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 2.1.1\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Haga clic en \", React.createElement(_components.strong, null, \"Crear flujos para una API\"), \".\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/mapping-assist-2-1-1.png\",\n    alt: \"\"\n  }))), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 2.1.2\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Cambie el nombre de la \", React.createElement(_components.strong, null, \"API Contacto\"), \" (1), nombre el modelo \", React.createElement(_components.strong, null, \"Contacto\"), \" (2) y haga clic en \", React.createElement(_components.strong, null, \"Crear modelo\"), \" (3).\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/Script2.1.2.png\",\n    alt: \"\"\n  }))))), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"2.2\")), React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Crear propiedades\")))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Narración\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Empecemos por definir nuestras propiedades. Habrá un ID, FirstName, LastName, Email, Address, Phone, y Mobile. Como puedes ver, estamos desarrollando nuestra API basada en un modelo. Es completamente model-driven, y acabamos de modelar nuestro objeto 'Contacto'. A continuación, diseñaremos e implementaremos la operación relacionada con este modelo \\\"Contacto\\\".\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 2.2.1\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"En el nombre de la propiedad, introduzca \", React.createElement(_components.strong, null, \"ID\"), \" y haga clic en \", React.createElement(_components.strong, null, \"Añadir propiedad\"), \". Repita los mismos pasos para incluir \", React.createElement(_components.strong, null, \"FirstName\"), \", \", React.createElement(_components.strong, null, \"LastName\"), \", \", React.createElement(_components.strong, null, \"Email\"), \", \", React.createElement(_components.strong, null, \"Address\"), \", \", React.createElement(_components.strong, null, \"Phone\"), \", y \", React.createElement(_components.strong, null, \"Mobile\"), \" (1). Haga clic en \", React.createElement(_components.strong, null, \"Operaciones\"), \" (2).\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/mapping-assist-2-2-1.png\",\n    alt: \"\"\n  }))))), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"2.3\")), React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Crear operación\")))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Narración\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"En primer lugar, seleccionemos la operación \\\"Crear contacto\\\". Esta operación sincroniza los datos de Salesforce a Insightly CRM. Implementemos nuestro flujo API.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 2.3.1\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Haga clic en el desplegable \", React.createElement(_components.strong, null, \"Seleccione una operación para añadir\"), \". seleccione \", React.createElement(_components.strong, null, \"Crear contacto\"), \" (2).\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/Script2.3.1.png\",\n    alt: \"\"\n  }))), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 2.3.2\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Haga clic en \", React.createElement(_components.strong, null, \"Implementar flujo\"), \".\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/Script2.3.2.png\",\n    alt: \"\"\n  }))))), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"3---aplicación-del-flujo\"\n  }, React.createElement(_components.h2, {\n    id: \"3---aplicación-del-flujo\"\n  }, React.createElement(_components.a, {\n    href: \"#3---aplicación-del-flujo\"\n  }, \"3 - Aplicación del flujo\")), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"3.1\")), React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Ajustar la respuesta del caudal\")))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Narración\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Aquí vemos nuestro flujo de demostración inicial, que inicialmente sólo tiene un nodo 'Request' y un nodo 'Response'. Utilizaremos el editor de flujo del diseñador para editar y cambiar nuestro flujo para añadir los pasos adicionales necesarios.Antes de añadir a nuestro flujo, vamos a ajustar la respuesta que se devuelve cuando se llama al flujo. Esta respuesta sirve para cerrar el flujo API y es una construcción requerida. Debido a que no hay datos necesarios para la persona que llama al flujo de la API (pero se requiere una respuesta), podemos tener una respuesta muy simple. Añadiremos el ID de objeto a la respuesta.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 3.1.1\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Haga clic en el nodo \", React.createElement(_components.strong, null, \"Respuesta\"), \".\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/mapping-assist-3-0-1.png\",\n    alt: \"\"\n  }))), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 3.1.2\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Introduzca \", React.createElement(_components.strong, null, \"ID\"), \" en el campo \", React.createElement(_components.strong, null, \"ID\"), \" (1) y seleccione el objeto \", React.createElement(_components.strong, null, \"Solicitar ID\"), \" (2).\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/mapping-assist-3-0-2.png\",\n    alt: \"\"\n  }))))), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"3.2\")), React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Recuperar contactos\")))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Narración\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Nuestra API será fácil de crear. La API recuperará los contactos de Salesforce. Para cada contacto recuperado, sincronizaremos los datos con Insightly CRM. Incluyamos nuestro conector preconfigurado de Salesforce y seleccionemos la operación \\\"Recuperar contactos\\\".\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 3.2.1\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Haga clic en el icono \", React.createElement(_components.strong, null, \"Más\"), \" (1). Busque el conector \", React.createElement(_components.strong, null, \"de Salesforce\"), \" (2).\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/mapping-assist-3-1-1.png\",\n    alt: \"\"\n  }))), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 3.2.2\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"En el conector preconfigurado de Salesforce, seleccione \", React.createElement(_components.strong, null, \"Recuperar contactos\"), \".\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/mapping-assist-3-1-2.png\",\n    alt: \"\"\n  }))), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 3.2.3\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Seleccione \", React.createElement(_components.strong, null, \"Procesar 10 elementos de la colección\"), \".\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/mapping-assist-3-1-3.png\",\n    alt: \"\"\n  }))))), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"3.3\")), React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Declaración \\\"Para cada uno\")))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Narración\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Ahora, necesitamos añadir una sentencia 'for each' porque necesitamos recuperar todos los contactos de Salesforce. Para cada contacto, necesitamos crear un contacto en Insightly CRM. Seleccionaremos el objeto \\\"Contactos de Salesforce\\\" como el objeto a procesar.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 3.3.1\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Haz clic en el icono \", React.createElement(_components.strong, null, \"Más\"), \".\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/mapping-assist-3-2-1.png\",\n    alt: \"\"\n  }))), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 3.3.2\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"A continuación, abra la pestaña \", React.createElement(_components.strong, null, \"Caja de herramientas\"), \" (1) y seleccione la sentencia \", React.createElement(_components.strong, null, \"Para cada\"), \" (2).\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/mapping-assist-3-2-2.png\",\n    alt: \"\"\n  }))), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 3.3.3\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Introduzca \", React.createElement(_components.strong, null, \"Contactos\"), \" en el campo \", React.createElement(_components.strong, null, \"Seleccione la colección de elementos a procesar\"), \" (1) y seleccione el objeto \", React.createElement(_components.strong, null, \"Contactos de Salesforce\"), \" (2).\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/mapping-assist-3-2-3.png\",\n    alt: \"\"\n  }))))), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"3.4\")), React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Crear contactos\")))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Narración\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Ahora estamos configurando nuestro flujo para conectar con el CRM Insightly. Nuestra cuenta Insightly está preconfigurada, así que seleccionamos la operación \\\"Crear contacto\\\". La función Mapping Assist comienza a trabajar en segundo plano, generando sugerencias para que rellenemos los campos de destino en Insightly.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 3.4.1\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"En el cuadro \", React.createElement(_components.strong, null, \"Para cada b\"), \" ucle, haga clic en el icono \", React.createElement(_components.strong, null, \"Más\"), \".\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/mapping-assist-3-3-1.png\",\n    alt: \"\"\n  }))), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 3.4.2\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"En la pestaña \", React.createElement(_components.strong, null, \"Aplicaciones\"), \", busque el conector \", React.createElement(_components.strong, null, \"Insightly\"), \".\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/mapping-assist-3-3-2.png\",\n    alt: \"\"\n  }))), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 3.4.3\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Seleccione la operación \", React.createElement(_components.strong, null, \"Crear contacto\"), \".\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/mapping-assist-3-3-3.png\",\n    alt: \"\"\n  }))))), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"4---uso-de-la-función-mapping-assist\"\n  }, React.createElement(_components.h2, {\n    id: \"4---uso-de-la-función-mapping-assist\"\n  }, React.createElement(_components.a, {\n    href: \"#4---uso-de-la-función-mapping-assist\"\n  }, \"4 - Uso de la función Mapping Assist\")), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"4.1\")), React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Ver sugerencias\")))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Narración\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"En el nodo, puede definir manualmente el mapa entre los campos de Salesforce e Insightly. Sin embargo, esto es difícil porque hay muchos campos, y los productos probablemente tendrán diferentes nombres de campo para los mismos objetos.Con Mapping Assist, no tendrá que escribir todas estas asignaciones. Utilizaremos la IA para simplificar nuestro trabajo. Una vez añadido el nodo \\\"Crear contacto\\\" de Insightly, se generan automáticamente sugerencias de mapeo. Se presentan las mejores coincidencias posibles (sugerencias principales), que pueden insertarse automáticamente en los campos con un solo clic. Estas sugerencias principales tienen una puntuación de confianza del 80% (o superior), y el recuento (20+ sugerencias) identifica el número total de campos que se rellenarán con correspondencias.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 4.1.1\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Señale las \", React.createElement(_components.strong, null, \"[20+] sugerencias\"), \" de Mapping Assist (1) y haga clic en \", React.createElement(_components.strong, null, \"Ver sugerencias\"), \" (2).icono de informaciónEl número exacto de sugerencias puede variar.\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/mapping-assist-4-1-1.png\",\n    alt: \"\"\n  }))))), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"4.2\")), React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Aplicar sugerencias\")))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Narración\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Al hacer clic en \\\"Ver sugerencias\\\", todas las sugerencias con una puntuación de confianza de al menos el 80% se muestran automáticamente en el nodo \\\"Crear contacto\\\" de Insightly. Tenga en cuenta que hay sugerencias tanto para campos sencillos como para campos anidados más complejos. Mapping Assist utiliza un algoritmo de IA preentrenado para proporcionar sugerencias de mapas de datos inteligentes y personalizados. Desde esta interfaz, podemos borrar las sugerencias, o podemos aceptarlas y aplicarlas.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 4.2.1\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Muestre la lista de sugerencias (1) y haga clic en \", React.createElement(_components.strong, null, \"Aplicar [20+] sugerencias\"), \" (2).\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/mapping-assist-4-2-1.png\",\n    alt: \"\"\n  }))))), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"4.3\")), React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Resolver las advertencias\")))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Narración\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"El algoritmo de IA de Mapping Assist a veces encuentra múltiples posibilidades de mapeo de alta confianza. Cuando esto ocurre, tenemos que decidir qué asignación queremos aceptar.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 4.3.1\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Esta situación puede darse o no. Cuando esto ocurre, se muestra un mensaje de \", React.createElement(_components.strong, null, \"advertencia\"), \". Debe resolver todos los campos en los que se produzca esta situación. Elimine el nombre del campo que está actualmente asignado al campo con la advertencia.\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/Error_screen.png\",\n    alt: \"\"\n  }))), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 4.3.2\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Haga clic en el icono de lista de selección situado junto al campo (1) y seleccione la opción de asignación que aparece con la opción \\\"Para cada uno\\\" en la lista que se muestra (2). Repita estos pasos para cada campo que tenga una advertencia.\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/Selection_list.png\",\n    alt: \"\"\n  }))))), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"4.4\")), React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Ajustar otras sugerencias\")))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Narración\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Estas más de 20 sugerencias son los campos en los que la confianza de coincidencia es de al menos el 80%, por lo que, en segundo plano, Mapping Assist evalúa este nivel de confianza y sólo rellena los campos que tienen al menos el 80%. Pero también hay otras sugerencias para los demás campos, y también podemos verlas. Por ejemplo, veamos el campo \\\"Otro código postal de dirección\\\". Cuando hacemos clic en el campo, podemos ver una sugerencia de asignación a 'Otro código postal' del objeto Contacto de Salesforce con una confianza del 72%, que es inferior al 80%. Aceptemos esta asignación.En nuestra próxima ejecución, Mapping Assist lo recordará y lo mostrará como una de las sugerencias principales. Para mejorar la precisión en futuras asignaciones, Mapping Assist aprende recopilando y almacenando los datos de asignación en una base de datos interna mediante el seguimiento del historial de asignación de los flujos iniciados. Por ejemplo, si asigna \\\"Otro código postal de dirección\\\" a \\\"Otro código postal\\\", esta asignación se recordará. Mapping Assist sugiere la misma coincidencia en futuras asignaciones, con un índice de confianza del 100%.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 4.4.1\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Haga clic en el campo Otro código postal de \", React.createElement(_components.strong, null, \"dirección\"), \" (1). Seleccione la sugerencia de asignación \", React.createElement(_components.strong, null, \"Otro\"), \" código postal (2).icono de informaciónSi tiene algún otro campo (por ejemplo, fecha de nacimiento) que no esté asignado al elemento \", React.createElement(_components.strong, null, \"Para cada\"), \" (icono naranja), sustitúyalo para utilizar el elemento \", React.createElement(_components.strong, null, \"Para cada\"), \".\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/mapping-assist-4-3-1.png\",\n    alt: \"\"\n  }))))), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"4.5\")), React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Generar una transformación\")))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Narración\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Si un campo de texto se rellena con un único mapeo de una sugerencia superior o de la lista de mapeos sugeridos, pero el formato de datos del mapeo \\\"origen\\\" no coincide con el formato de datos del campo \\\"destino\\\" que se rellena, puede generar una expresión JSONata para definir cómo deben presentarse los datos de origen en la aplicación de destino. JSONata es un lenguaje declarativo de consulta y transformación de código abierto para datos JSON.Explorémoslo con el campo \\\"Nombre del Asistente\\\". Seleccionemos \\\"Generar transformación\\\". El panel \\\"Generar transformación\\\" se abre con cinco fuentes en blanco y sus correspondientes campos de destino que podemos utilizar para mapear formatos de datos. Tendremos que proporcionar al menos cinco ejemplos de formatos de origen y destino para que Cloud Pak for Integration genere la fórmula de transformación.Utilizando Cloud Pak for Integration y la función Mapping Assist, hemos podido crear fácilmente una sincronización de datos entre dos soluciones CRM sin necesidad de escribir código.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 4.5.1\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"En el campo \", React.createElement(_components.strong, null, \"Nombre\"), \" del asistente, haga clic en la asignación \", React.createElement(_components.strong, null, \"Nombre del asistente\"), \" (1) y seleccione \", React.createElement(_components.strong, null, \"Transformar formato de datos\"), \" (2).\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/mapping-assist-4_4_1.png\",\n    alt: \"\"\n  }))), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 4.5.2\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"En el cuadro de diálogo \", React.createElement(_components.strong, null, \"Generar transformación\"), \", introduzca \", React.createElement(_components.strong, null, \"John Lennon\"), \" como primer nombre de origen e introduzca \", React.createElement(_components.strong, null, \"J. Lennon\"), \" en \", React.createElement(_components.strong, null, \"ejemplos de 'Nombre de asistente' (destino)\"), \". Repita los mismos pasos para incluir otros cuatro nombres de asistentes utilizando el mismo formato de transformación (por ejemplo, Paul McCartney, P. McCartney; George Harrison, G. Harrison; Ringo Starr, R. Starr; Pete Best, P. Best) (1). Haga clic en \", React.createElement(_components.strong, null, \"Generar transformación\"), \" (2) y luego en \", React.createElement(_components.strong, null, \"Insertar transformación\"), \" (3).\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/mapping-assist-4_4_2.png\",\n    alt: \"\"\n  }))), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 4.5.3\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Haga clic en \", React.createElement(_components.strong, null, \"Listo\"), \".\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/mapping-assist-4_4_3.png\",\n    alt: \"\"\n  }))))), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"5---prueba-de-la-sincronización-de-datos\"\n  }, React.createElement(_components.h2, {\n    id: \"5---prueba-de-la-sincronización-de-datos\"\n  }, React.createElement(_components.a, {\n    href: \"#5---prueba-de-la-sincronización-de-datos\"\n  }, \"5 - Prueba de la sincronización de datos\")), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"5.1\")), React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Comprobar los contactos de destino\")))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Narración\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Antes de probar nuestro flujo de sincronización de datos, vamos a comprobar los contactos que tenemos disponibles en nuestros contactos de destino. Abramos nuestra cuenta precreada de Insightly CRM y veamos los contactos disponibles antes de ejecutar el flujo. Como puede ver, tenemos aproximadamente 20 contactos pre-creados, cada uno con fotos. Después de la prueba de nuestro flujo, deberíamos tener dos o tres nuevos contactos sin fotos.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 5.1.1\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Abra su página de inicio \", React.createElement(_components.strong, null, \"de Insightly\"), \" (1).Abra la vista \", React.createElement(_components.strong, null, \"Contactos\"), \" (2).\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/mapping-assist-5_1_1.png\",\n    alt: \"\"\n  }))), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 5.1.2\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Observa que hay aproximadamente 20 contactos precreados, cada uno con fotos.\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/Script5.1.2.png\",\n    alt: \"\"\n  }))))), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"5.2\")), React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Probar la API\")))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Narración\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Es hora de probar nuestra sincronización de datos. En primer lugar, tenemos que iniciar nuestro flujo. Una vez que el flujo se ha iniciado, vamos a probarlo.Genial, nuestra sincronización de datos se ha ejecutado.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 5.2.1\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Vuelve a la página \", React.createElement(_components.strong, null, \"App Connect Designer\"), \" de Cloud Pak for Integration. Inicie su flujo.\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/mapping-assist-5_2_1.png\",\n    alt: \"\"\n  }))), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 5.2.2\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Abra la pestaña \", React.createElement(_components.strong, null, \"Probar\"), \" (1). Haz clic en \", React.createElement(_components.strong, null, \"POST /Contacto\"), \" (2) y abre la pestaña \", React.createElement(_components.strong, null, \"Probar\"), \" (3).\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/mapping-assist-5_2_2.png\",\n    alt: \"\"\n  }))), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 5.2.3\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Desplácese hacia abajo para ver el campo del cuerpo y haga clic en \", React.createElement(_components.strong, null, \"Generar\"), \" (1) para crear un contenido de cuerpo ficticio. Haz clic en \", React.createElement(_components.strong, null, \"Enviar\"), \" (2), y deberías ver una respuesta \", React.createElement(_components.strong, null, \"201 Creado\"), \" (3).\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/mapping-assist-5_2_3.png\",\n    alt: \"\"\n  }))))), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"5.3\")), React.createElement(_components.th, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Comprobar la sincronización de datos\")))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Narración\")), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Ahora vamos a comprobar nuestros nuevos contactos. Deberíamos tener al menos dos contactos nuevos. Actualicemos la página de \\\"Contactos\\\", y voilá, aquí están nuestros nuevos contactos. Comprobemos el contacto para ver el nuevo formato \\\"Nombre del asistente\\\".Muy bien. Todo funciona como esperábamos.\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 5.3.1\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Vuelve a la página de \", React.createElement(_components.strong, null, \"contactos\"), \" de Insightly y actualiza la página.\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/mapping-assist-5_3_1.png\",\n    alt: \"\"\n  }))), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 5.3.2\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Explora los nuevos contactos (sin las etiquetas sample_data).\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/mapping-assist-5_3_2.png\",\n    alt: \"\"\n  }))), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, React.createElement(_components.strong, null, \"Acción\"), \" 5.3.3\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"Haga clic en uno de los contactos sin imagen (1), y muestre el nuevo formato de \", React.createElement(_components.strong, null, \"Nombre de Asistente\"), \" basado en la función que definimos en el flujo (2).\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-low-code-integration-using-ai/images/mapping-assist-5_3_3.png\",\n    alt: \"\"\n  }))))), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"resumen\"\n  }, React.createElement(_components.h2, {\n    id: \"resumen\"\n  }, React.createElement(_components.a, {\n    href: \"#resumen\"\n  }, \"Resumen\")), \"\\n\", React.createElement(_components.p, null, \"Como mencionamos al principio, el mapeo de datos es difícil, lento y propenso a errores. En esta demo, mostramos cómo Mapping Assist, impulsado por IA, puede aliviar estos problemas.\"), \"\\n\", React.createElement(_components.p, null, \"Hemos mapeado automáticamente todos los campos en los que la confianza de coincidencia era de al menos el 80%, y hemos proporcionado sugerencias relevantes y precisas a nivel de campo cuando la confianza estaba entre el 30% y el 80%. Mapping Assist aprende de sus decisiones sobre los mapeos seleccionados y los muestra como sugerencias principales cuando se intenta un mapeo similar de origen y destino en el futuro, lo que reduce aún más sus esfuerzos de mapeo.\"), \"\\n\", React.createElement(_components.p, null, \"También generamos una transformación de datos proporcionando ejemplos de datos de origen y destino cuando los campos no tienen el mismo formato. Se utilizó IA para determinar el patrón y generar la transformación.\"), \"\\n\", React.createElement(_components.p, null, \"El uso de Mapping Assist basado en IA redujo el tiempo de desarrollo y eliminó errores, ya que ACME Retail integró con éxito los nuevos contactos de clientes procedentes de la adquisición de su empresa.\"), \"\\n\", React.createElement(_components.p, null, \"Gracias por asistir a esta presentación.\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/VAD-VAR-Workshop/VAD-VAR-Workshop/content/CP4I/102.es.md\";\nimport React, {useRef, useState} from 'react';\nimport cx from 'classnames';\nimport SEO from '@components/SEO';\nimport PageHeader from '@components/PageHeader';\nimport MDXWrapper from '@components/MDXWrapper';\nimport ContentWrapper from '@components/ContentWrapper';\nimport TableOfContents from '@components/TableOfContents';\nimport * as styles from '@styles/pages/{mdx.fields__slug}.module.scss';\nconst Content = props => {\n  const {data: {mdx: {tableOfContents: {items: tocItems}, frontmatter: {toc = true, title, timeToComplete, updated}}}, children} = props;\n  const articleRef = useRef(null);\n  const {0: currSection} = useState('');\n  const showToc = (toc === null ? true : toc) && tocItems;\n  return React.createElement(React.Fragment, null, React.createElement(PageHeader, {\n    timeToComplete,\n    updated\n  }, tocItems[0].title || title || ''), React.createElement(ContentWrapper, {\n    className: styles.wrapper\n  }, React.createElement(\"article\", {\n    className: cx(styles.article, !showToc && styles.noToc),\n    ref: articleRef\n  }, React.createElement(MDXWrapper, {\n    components: {\n      h1: () => null\n    }\n  }, children)), showToc && React.createElement(TableOfContents, {\n    itemsList: tocItems,\n    maxDepth: 2,\n    currSection: currSection\n  })));\n};\nconst pageQuery = \"3587680389\";\nexport const Head = props => {\n  const {location: {pathname}, data: {mdx: {frontmatter: {title}, tableOfContents: {items}}}} = props;\n  return React.createElement(SEO, {\n    pathname,\n    title: title || items[0].title || undefined\n  });\n};\nContent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Content, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React, { memo } from 'react';\nimport { MDXProvider } from '@mdx-js/react';\nimport { Props } from '@mdx-js/react/lib';\nimport {\n  BlockQuote,\n  CodeBlock,\n  ImageWrapper,\n  QuizAlert,\n  SmartLink,\n  SubHeader,\n  TableWrapper\n} from '../replacements';\n\ninterface MDXWrapperProps {\n  children: React.ReactNode;\n  components?: Props['components'];\n}\n\nconst standardComponents: Props['components'] = {\n  table: TableWrapper,\n  a: SmartLink,\n  blockquote: BlockQuote,\n  SubHeader: SubHeader,\n  img: ImageWrapper,\n  code: CodeBlock,\n  QuizAlert: QuizAlert\n};\n\nconst MDXWrapper = memo(function MDXWrapper({ children, components = {} }: MDXWrapperProps) {\n  return (\n    <MDXProvider\n      components={{\n        ...standardComponents,\n        ...components\n      }}>\n      {children}\n    </MDXProvider>\n  );\n});\n\nexport default MDXWrapper;\n","import MDXWrapper from './MDXWrapper';\n\nexport default MDXWrapper;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useSiteMetadata from '@hooks/useSiteMetaData';\n\ninterface SEOProps {\n  title?: string;\n  description?: string;\n  pathname?: string;\n  children?: React.ReactNode;\n}\n\nconst SEO = (props: SEOProps) => {\n  const { title, description, pathname, children } = props;\n  const { description: defDescription, title: defTitle, origin } = useSiteMetadata();\n  const {\n    i18n: { language }\n  } = useTranslation();\n\n  const seo = {\n    title: title || defTitle,\n    description: description || defDescription,\n    url: `${origin}${pathname || ''}`\n  };\n\n  return (\n    <>\n      <html lang={language} />\n      <link\n        rel='icon'\n        href=\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='0.9em' font-size='90'>🦺</text></svg>\"\n      />\n      <title>{seo.title}</title>\n      <link rel='canonical' href={seo.url} />\n      <meta name='description' content={seo.description} />\n\n      <meta property='og:title' content={seo.title} />\n      <meta property='og:url' content={seo.url} />\n      <meta property='og:type' content='website' />\n      <meta property='og:description' content={seo.description} />\n\n      <meta name='twitter:card' content='summary' />\n      <meta name='twitter:title' content={seo.title} />\n      <meta name='twitter:url' content={seo.url} />\n      <meta name='twitter:description' content={seo.description} />\n      <meta name='twitter:site' content={'https://www.ibm.com'} />\n      <meta name='twitter:creator' content={'@IBM'} />\n      {children}\n    </>\n  );\n};\n\nexport default SEO;\n","import React, { useMemo } from 'react';\nimport { Link as GatsbyLink } from 'gatsby';\nimport cx from 'classnames';\nimport useCurrentHeading from '@hooks/useCurrentHeading';\nimport * as styles from './TableOfContents.module.scss';\n\ninterface TableOfContentsProps {\n  itemsList: TOCItem[];\n  currSection: string | undefined;\n  maxDepth?: number;\n}\n\ninterface TOCItem {\n  title: string;\n  url: string;\n  items?: TOCItem[];\n}\n\ninterface FlatTOCItem extends Omit<TOCItem, 'items'> {\n  depth: number;\n}\n\nconst flattenTOC = (toc: TOCItem[], flatList: FlatTOCItem[] = [], depth = 0): FlatTOCItem[] => {\n  toc.forEach((item) => {\n    const { title, url, items } = item;\n    flatList.splice(flatList.length, 0, {\n      depth,\n      title,\n      url\n    });\n\n    if (items && items.length > 0) flattenTOC(items, flatList, depth + 1);\n  });\n\n  return flatList;\n};\n\nconst TableOfContents = (props: TableOfContentsProps) => {\n  const { itemsList } = props;\n\n  const flatTOC = useMemo(() => flattenTOC(itemsList[0].items || []), [itemsList]);\n\n  const currentSection = useCurrentHeading('h1[id],h2[id]', {\n    threshold: [0, 1],\n    rootMargin: `-${styles.headerHeight} 0px -90% 0px`\n  });\n\n  if (flatTOC.length < 1) return null;\n\n  return (\n    <nav className={styles.toc}>\n      <div className={styles.tocStack}>\n        <h6 className={styles.tocHeader}>\n          <GatsbyLink to='#' replace>\n            On this page\n          </GatsbyLink>\n        </h6>\n\n        {flatTOC.map(({ title, url }, index) => {\n          return (\n            <a\n              className={cx(styles.link, currentSection === url.substring(1) && styles.activeItem)}\n              key={index}\n              href={url}>\n              {title}\n            </a>\n          );\n        })}\n      </div>\n    </nav>\n  );\n};\n\nexport default TableOfContents;\n","import TableOfContents from './TableOfContents';\n\nexport default TableOfContents;\n","// extracted by mini-css-extract-plugin\nexport var activeItem = \"TableOfContents-module--activeItem--3869f\";\nexport var headerHeight = \"48px\";\nexport var link = \"TableOfContents-module--link--b292b\";\nexport var toc = \"TableOfContents-module--toc--54d35\";\nexport var tocHeader = \"TableOfContents-module--tocHeader--05956\";\nexport var tocStack = \"TableOfContents-module--tocStack--90609\";","// extracted by mini-css-extract-plugin\nexport var article = \"{mdx-fields__slug}-module--article--e3d5a\";\nexport var noToc = \"{mdx-fields__slug}-module--noToc--82387\";\nexport var wrapper = \"{mdx-fields__slug}-module--wrapper--58e72\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","section","h1","h2","a","p","table","thead","tr","th","strong","tbody","td","img","_provideComponents","components","React","className","id","href","align","src","alt","wrapper","MDXLayout","Content","data","mdx","tableOfContents","items","tocItems","frontmatter","toc","title","timeToComplete","updated","children","articleRef","useRef","currSection","useState","showToc","PageHeader","ContentWrapper","styles","cx","ref","MDXWrapper","TableOfContents","itemsList","maxDepth","Head","location","pathname","SEO","undefined","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","standardComponents","TableWrapper","SmartLink","blockquote","BlockQuote","SubHeader","ImageWrapper","code","CodeBlock","QuizAlert","memo","_ref","MDXProvider","description","defDescription","defTitle","origin","useSiteMetadata","i18n","language","useTranslation","seo","url","lang","rel","name","content","property","flattenTOC","flatList","depth","forEach","item","splice","length","flatTOC","useMemo","currentSection","useCurrentHeading","threshold","rootMargin","GatsbyLink","to","replace","map","index","substring","key","article","noToc","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}