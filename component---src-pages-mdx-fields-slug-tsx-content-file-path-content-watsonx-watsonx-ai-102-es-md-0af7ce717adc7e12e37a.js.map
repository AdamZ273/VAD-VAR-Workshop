{"version":3,"file":"component---src-pages-mdx-fields-slug-tsx-content-file-path-content-watsonx-watsonx-ai-102-es-md-0af7ce717adc7e12e37a.js","mappings":"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","sources":["webpack://vad-var-site/./content/Watsonx/WatsonxAI/102.es.md","webpack://vad-var-site/./src/pages/{mdx.fields__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    section: \"section\",\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    ol: \"ol\",\n    li: \"li\",\n    strong: \"strong\",\n    img: \"img\",\n    ul: \"ul\",\n    h3: \"h3\",\n    blockquote: \"blockquote\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components), {QuizAlert} = _components;\n  if (!QuizAlert) _missingMdxReference(\"QuizAlert\", true);\n  return React.createElement(React.Fragment, null, React.createElement(QuizAlert, {\n    text: \"¡Atención! ¡El material del cuestionario se marcará así!\"\n  }), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"1\",\n    \"aria-labelledby\": \"watsonxai-l3-parte-2-parámetros-del-modelo-y-solicitud-de-formatos-de-salida\"\n  }, React.createElement(_components.h1, {\n    id: \"watsonxai-l3-parte-2-parámetros-del-modelo-y-solicitud-de-formatos-de-salida\"\n  }, \"watsonx.ai L3 parte 2: Parámetros del modelo y solicitud de formatos de salida\"), \"\\n\", React.createElement(_components.p, null, \"Esta parte 2 del laboratorio de insignias watsonx.ai L3. En el laboratorio anterior experimentamos con diferentes modelos básicos y vimos cómo los ajustes en un mensaje de disparo cero pueden marcar una gran diferencia en el resultado generado.\"), \"\\n\", React.createElement(_components.p, null, \"En esta práctica de laboratorio exploraremos otras técnicas para obtener los mejores resultados de un modelo de base.\"), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"modificando-parámetros\"\n  }, React.createElement(_components.h2, {\n    id: \"modificando-parámetros\"\n  }, React.createElement(_components.a, {\n    href: \"#modificando-parámetros\"\n  }, \"Modificando parámetros\")), \"\\n\", React.createElement(_components.p, null, \"En esta práctica de laboratorio continuaremos trabajando en Prompt Lab y experimentaremos con parámetros de modelo configurables. Si es necesario, \", React.createElement(_components.a, {\n    href: \"/watsonx/watsonxai/100#accessing-watsonxai-from-ibm-cloud\"\n  }, \"regrese a la pantalla de inicio de watsonx.ai\"), \" y acceda a la interfaz de usuario de Prompt Lab.\"), \"\\n\", React.createElement(_components.p, null, \"Si ya ha estado trabajando en Prompt Lab, \", React.createElement(_components.a, {\n    href: \"/watsonx/watsonxai/100#creating-a-new-prompt-lab-session\"\n  }, \"abra una nueva sesión de Prompt Lab\")), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"En la interfaz de usuario de Prompt Lab, seleccione el icono \", React.createElement(_components.strong, null, \"]⃞[\"), \" del panel izquierdo para que aparezca la lista de mensajes de muestra. Haga clic en el ejemplo \", React.createElement(_components.strong, null, \"Generación de correo electrónico de marketing\"), \" de la sección Generar. Utilice el modelo \", React.createElement(_components.strong, null, \"flan-ul2-20b\"), \" si aún no está especificado.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Comenzaremos nuevamente con indicaciones ligeramente modificadas. Edite los detalles de la sección \", React.createElement(_components.strong, null, \"Probar\"), \" y agregue \\\"No agregue ninguna información adicional\\\". como instrucción final. Haga clic en \", React.createElement(_components.strong, null, \"Generar\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Deberías ver el mismo resultado que antes, con la URL alucinada.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/101/flan-ul2-output.png\",\n    alt: \"flan-ul2_output\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"A continuación modificaremos algunos parámetros de inferencia para ver el impacto en el resultado generado. Primero una explicación de los parámetros configurables. Abra el panel de configuración haciendo clic en el icono \", React.createElement(_components.strong, null, \"Parámetros del modelo\"), \" que se muestra a continuación.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/click-model-parameters.png\",\n    alt: \"model_parameter_icon\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Esto abre una lista de parámetros que se pueden actualizar. Todos los modelos utilizan los mismos parámetros de inferencia. Expliquemos el propósito de cada uno.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/tour-model-parameters.png\",\n    alt: \"tour_paramters\"\n  }), \"\\n\", React.createElement(QuizAlert, {\n    text: \"¡Pregunta del cuestionario relacionada con los parámetros del modelo!\"\n  }), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"a. Codicioso\"), \" versus \", React.createElement(_components.strong, null, \"Decodificación de muestreo\"), \": así es como el modelo elige los tokens para la salida. Los primeros 4 parámetros siguientes (b a e) solo son visibles en el modo \", React.createElement(_components.strong, null, \"Muestreo\"), \".\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"En el modo \", React.createElement(_components.strong, null, \"Codicioso\"), \", el modelo selecciona los tokens de mayor probabilidad en cada paso de la decodificación, y un modelo es menos creativo en ese modo.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"En el modo \", React.createElement(_components.strong, null, \"Muestreo\"), \", el modelo elige el siguiente token de un grupo de los siguientes tokens más probables, por lo que hay más creatividad, pero también un mayor riesgo de que el resultado no tenga sentido.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"b. Temperatura\"), \": un número de coma flotante que oscila entre 0,0 (que hace que el modelo funcione de la misma manera que si se seleccionara la decodificación Greedy) y 2,00 (que es la máxima creatividad).\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Cuanto mayor sea el valor de \", React.createElement(_components.strong, null, \"Temperatura\"), \", más “creativo” será el modelo.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"El valor predeterminado suele ser 0,7, pero en este caso se establece en 0,8. Esto significa que al modelo se le permite cierta creatividad.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"C. Top P (muestreo de núcleos)\"), \": un número de coma flotante que oscila entre 0,0 y 1,0. En un nivel alto, al generar una finalización, un modelo calcula la probabilidad de la siguiente palabra en función de todas las palabras anteriores. \", React.createElement(_components.strong, null, \"Top P\"), \" decide si el modelo siempre elegirá el resultado más probable o permitirá más aleatoriedad para las siguientes palabras. El muestreo de \", React.createElement(_components.strong, null, \"Top P\"), \" elige entre el conjunto más pequeño posible de \\\"siguientes\\\" palabras cuya probabilidad acumulada excede el valor proporcionado para \", React.createElement(_components.strong, null, \"Top P\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"d. Top K\"), \": un número entero del 1 al 100. A diferencia de \", React.createElement(_components.strong, null, \"Top P, Top K\"), \" no analiza la probabilidad de los tokens. En cambio, el modelo elige la siguiente palabra de los \", React.createElement(_components.strong, null, \"Top K\"), \" tokens más probables para el siguiente resultado.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Top K\"), \" = 3, significa que el modelo elegirá aleatoriamente entre las 3 siguientes palabras más probables.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Cuanto mayor sea el valor de \", React.createElement(_components.strong, null, \"Top K\"), \", más aleatorio será el resultado.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"e. Semilla aleatoria\"), \": un número entero en el rango de 1 a 4.294.967.295. En el modo de muestreo, si todo lo demás permanece igual, la actualización de la semilla aleatoria producirá resultados diferentes.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Si la semilla aleatoria sigue siendo la misma, debería obtener los mismos resultados, por eso dejamos el valor igual para estos laboratorios.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"En resumen, la semilla aleatoria es útil para la replicabilidad de los experimentos.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"f. Penalización por repetición\"), \": un valor entre 1 y 2 (un valor de 1 permite la repetición y 2 la prohíbe). Esto se utiliza para contrarrestar la tendencia de un modelo a repetir el texto del mensaje palabra por palabra o quedarse atascado en un bucle al generar el mismo resultado.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"g. Secuencias de parada\"), \": secuencias de caracteres (texto, caracteres especiales, retorno de carro, etc.) utilizadas como indicador de parada por el modelo. La secuencia de parada en sí seguirá incluida en el resultado del modelo, pero esa será la última parte del resultado.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"h. Tokens mínimos\"), \": un número entero que especifica el número mínimo de tok\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"solicitar-diferentes-formatos-de-salida\"\n  }, React.createElement(_components.h2, {\n    id: \"solicitar-diferentes-formatos-de-salida\"\n  }, React.createElement(_components.a, {\n    href: \"#solicitar-diferentes-formatos-de-salida\"\n  }, \"Solicitar diferentes formatos de salida\")), \"\\n\", React.createElement(_components.p, null, \"Al solicitar un LLM, a menudo es beneficioso obtener el resultado en un formato específico. Para facilitar la lectura o para agilizar la integración con otra herramienta.\"), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"3\",\n    \"aria-labelledby\": \"solicitar-listas\"\n  }, React.createElement(_components.h3, {\n    id: \"solicitar-listas\"\n  }, React.createElement(_components.a, {\n    href: \"#solicitar-listas\"\n  }, \"Solicitar listas\")), \"\\n\", React.createElement(_components.p, null, \"Recuerde que un modelo básico no lee ni interpreta una indicación como un humano. Más bien, consume una serie de palabras tokenizadas y calcula el mejor token siguiente. El concepto de lista es fácil de entender para un humano. Aquí veremos cómo responden algunos LLM.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"/watsonx/watsonxai/100#creating-a-new-prompt-lab-session\"\n  }, \"Abra una nueva sesión de Prompt Lab\"), \" y seleccione la pestaña \", React.createElement(_components.strong, null, \"Forma libre\"), \" en lugar de la pestaña predeterminada \", React.createElement(_components.strong, null, \"Estructurada\"), \". Elija \\\"Cambiar modo\\\" cuando se le solicite Cambiar al modo de forma libre.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Nota: En el modo Forma libre, aún tiene acceso a todos los ejemplos, modelos y configuración, pero no hay una guía estructural para el mensaje.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Abra el panel \", React.createElement(_components.strong, null, \"Parámetros del modelo\"), \". En el modo \", React.createElement(_components.strong, null, \"Forma libre\"), \", los valores predeterminados de los parámetros se parecen a los siguientes si \", React.createElement(_components.strong, null, \"no ha seleccionado\"), \" una muestra rápida.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/greedy-parameters.png\",\n    alt: \"greedy_params\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Verifique que esté utilizando la decodificación \", React.createElement(_components.strong, null, \"Greedy\"), \" y cambie el valor de \", React.createElement(_components.strong, null, \"Tokens máximos\"), \" a 100.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Asegúrese de estar utilizando el modelo \", React.createElement(_components.strong, null, \"flan-ul2-20b\"), \". Copie y pegue el siguiente texto en el campo de entrada:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-txt\"\n  }, \"The following paragraph is a consumer complaint. \\n\\nRead the following paragraph and list all the issues.   I called your helpdesk multiple times and every time I waited 10-15 minutes before I gave up. The first time I got through, the line got cut suddenly and I had to call back. This is just ridiculous. When I finally got through like after 3 days (yes, 3 days) your agent kept going over a long checklist of trivial things and asking me to verify, after I repeatedly told the agent that I am an experienced user and I know what I am doing. It was a complete waste of time. After like an eternity of this pointless conversation, I was told that an SME will contact me. That – was 2 days ago. What is the problem with your support system?\\n\\nThe list of issues is as follows:\\n\")), \"\\n\", React.createElement(_components.p, null, \"Haga clic en \", React.createElement(_components.strong, null, \"Generar\"), \". Debería ver un resultado similar al siguiente:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/list-output.png\",\n    alt: \"list_output\"\n  }), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Tenga en cuenta lo siguiente:\"), \"\\n\", React.createElement(\"br\"), \"- El modelo no generó una lista.\\n\", React.createElement(\"br\"), \"- El modelo simplemente repitió el texto ingresado palabra por palabra.\\n\", React.createElement(\"br\"), \"- La salida finaliza debido al límite de 100 tokens.\\n\", React.createElement(\"br\"), React.createElement(\"br\"), \"Los modelos de flan (tanto el \", React.createElement(_components.strong, null, \"flan-ul2-20b\"), \" como el \", React.createElement(_components.strong, null, \"flan-t5-xxl-11b\"), \") parecen percibir \\\"lista\\\" como una instrucción para contar lo que fue dicho anteriormente.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Un método común para obtener resultados de listas es guiar el modelo iniciando la lista. Elimine el resultado anterior y agregue un \\\"1\\\". hasta la última línea del texto del mensaje. Las dos últimas líneas deberían verse así:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-txt\"\n  }, \"The list of issues is as follows:\\n1. \\n\")), \"\\n\", React.createElement(_components.p, null, \"Haga clic en \", React.createElement(_components.strong, null, \"Generar\"), \". Deberías ver un resultado como el siguiente:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/list-output2.png\",\n    alt: \"list_output2\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Esto es sólo una ligera mejora. Los modelos de flan no parecen adecuados para generar una lista con indicaciones de tiro cero.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Cambie el modelo al modelo \", React.createElement(_components.strong, null, \"mpt-7b-instruct2\"), \". Quita el \\\"1\\\". desde el mensaje y haga clic en \", React.createElement(_components.strong, null, \"Generar\"), \". Deberías ver lo siguiente:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/list-output3.png\",\n    alt: \"list_output3\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Esto se parece más a lo que esperaría un humano. Para este tipo de solicitudes, el modelo \", React.createElement(_components.strong, null, \"mpt-7b-instruct2\"), \" es mucho mejor que los modelos de flan. Además, el modelo interpretó correctamente que el cliente estaba frustrado con el sistema de soporte, aunque esto no se indicó explícitamente.\"), \"\\n\"), \"\\n\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"3\",\n    \"aria-labelledby\": \"solicitar-salida-json\"\n  }, React.createElement(_components.h3, {\n    id: \"solicitar-salida-json\"\n  }, React.createElement(_components.a, {\n    href: \"#solicitar-salida-json\"\n  }, \"Solicitar salida JSON\")), \"\\n\", React.createElement(_components.p, null, \"Cuando se utilizan LLM mediante programación, puede resultar ventajoso recuperar los datos generados en un formato que el lenguaje de programación pueda consumir fácilmente. Intentemos utilizar Prompt Lab para generar un archivo JSON simple.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"/watsonx/watsonxai/100#creating-a-new-prompt-lab-session\"\n  }, \"Abra una nueva sesión de Prompt Lab\"), \" en el modo predeterminado \", React.createElement(_components.strong, null, \"Estructurado\"), \" y asegúrese de que está utilizando el \", React.createElement(_components.strong, null, \"flan- Modelo ul2-20b\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Asegúrese de estar utilizando el modo \", React.createElement(_components.strong, null, \"Codicioso\"), \" y establezca \", React.createElement(_components.strong, null, \"Tokens máximos\"), \" en \", React.createElement(_components.strong, null, \"100\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Copie y pegue lo siguiente en el campo \", React.createElement(_components.strong, null, \"Entrada\"), \" en la sección \", React.createElement(_components.strong, null, \"Probar\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-txt\"\n  }, \"Create a JSON file output with the following information\\n\\nname: Joe\\nage: 25\\nPhone: 416-1234-567\\nPhone: 547-4034-240\\nAddress: City: Markham, Street: Warden Avenue, Postal Code: L6G 1C7\\n\")), \"\\n\", React.createElement(_components.p, null, \"Haga clic en \", React.createElement(_components.strong, null, \"Generar\"), \". El modelo \", React.createElement(_components.strong, null, \"flan-ul2-20b\"), \" devuelve lo siguiente:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/json-output.png\",\n    alt: \"json_ouput\"\n  }), \"\\n\", React.createElement(_components.p, null, \"El modelo de flan respondió con salida de lenguaje natural, que es el punto fuerte del modelo de flan. Pero claramente este no es el JSON solicitado.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Seleccione el modelo \", React.createElement(_components.strong, null, \"mpt-7b-instruct2\"), \" y haga clic en \", React.createElement(_components.strong, null, \"Generar\"), \". Debería ver el siguiente resultado.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/json-output2.png\",\n    alt: \"json_output2\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Este es el JSON válido que estamos buscando. Nuevamente, el modelo mpt-7b-instruct2 más pequeño parece mejor para el caso de uso.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Ahora probemos con el modelo \", React.createElement(_components.strong, null, \"starcoder-15.5b\"), \", que está entrenado para la generación de código. Seleccione este modelo y haga clic en \", React.createElement(_components.strong, null, \"Generar\"), \". Debería ver:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/json-output3.png\",\n    alt: \"json_output3\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Aquí tenemos un JSON válido, pero con 3 comillas dobles (\\\") en la parte inferior. Esto puede deberse a que el código Python usa comillas triples para delinear cadenas de varias líneas.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Si aún queremos usar \", React.createElement(_components.strong, null, \"starcoder-15.5b\"), \", podemos usar \", React.createElement(_components.strong, null, \"Detener secuencias\"), \" para eliminar las comillas dobles triples. Abra el panel \", React.createElement(_components.strong, null, \"Parámetros del modelo\"), \" e ingrese \", React.createElement(_components.code, null, \"}<retorno de carro>}\"), \" en el cuadro de texto Detener secuencias.\"), \"\\n\", React.createElement(QuizAlert, {\n    text: \"¡Pregunta del cuestionario sobre secuencias de parada!\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Debería ver lo siguiente, luego haga clic en el botón azul \", React.createElement(_components.strong, null, \"+\"), \" para agregar la secuencia.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/stop-sequence.png\",\n    alt: \"stop_sequence\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Con la secuencia de parada agregada, verá esto:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/stop-sequence2.png\",\n    alt: \"stop_sequence2\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Haga clic en \", React.createElement(_components.strong, null, \"Generar\"), \". Deberías ver el siguiente resultado:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/json-output4.png\",\n    alt: \"json_output4\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Ahora tenemos una salida JSON válida. Puedes eliminar una \", React.createElement(_components.strong, null, \"Detener secuencia\"), \" haciendo clic en \", React.createElement(_components.strong, null, \"X\"), \".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxAI/images/102/stop-sequence3.png\",\n    alt: \"stop_sequence3\"\n  }), \"\\n\"), \"\\n\"), \"\\n\")), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"resumen-de-laboratorio\"\n  }, React.createElement(_components.h2, {\n    id: \"resumen-de-laboratorio\"\n  }, React.createElement(_components.a, {\n    href: \"#resumen-de-laboratorio\"\n  }, \"Resumen de laboratorio\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Experimentamos con los siguientes parámetros de configuración:\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Temperatura\"), \": un valor más alto genera más creatividad\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"P superior\"), \": un valor más bajo significa menos variabilidad\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Top K\"), \": un valor más bajo significa menos variabilidad\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Top P\"), \" y \", React.createElement(_components.strong, null, \"Top K\"), \" limitan la cantidad de fichas que el modelo elegirá al determinar la siguiente ficha en la secuencia.\"), \"\\n\", React.createElement(_components.li, null, \"Usamos indicaciones de forma libre y decodificación Greedy para solicitar una lista.\"), \"\\n\", React.createElement(_components.li, null, \"Generamos resultados JSON y utilizamos secuencias de detención para detener la salida del modelo.\"), \"\\n\", React.createElement(_components.li, null, \"Es importante elegir el modelo adecuado para la tarea en cuestión, que no es necesariamente el modelo más grande. El modelo \", React.createElement(_components.strong, null, \"mpt-7b-instruct2\"), \" era el más adecuado tanto para listas como para salida JSON. Aunque es más pequeño que los modelos de flan, IBM lo entrenó para seguir las instrucciones del usuario.\"), \"\\n\"))));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/VAD-VAR-Workshop/VAD-VAR-Workshop/content/Watsonx/WatsonxAI/102.es.md\";\nimport React, {useRef, useState} from 'react';\nimport cx from 'classnames';\nimport SEO from '@components/SEO';\nimport PageHeader from '@components/PageHeader';\nimport MDXWrapper from '@components/MDXWrapper';\nimport ContentWrapper from '@components/ContentWrapper';\nimport TableOfContents from '@components/TableOfContents';\nimport * as styles from '@styles/pages/{mdx.fields__slug}.module.scss';\nconst Content = props => {\n  const {data: {mdx: {tableOfContents: {items: tocItems}, frontmatter: {toc = true, title, timeToComplete, updated}}}, children} = props;\n  const articleRef = useRef(null);\n  const {0: currSection} = useState('');\n  const showToc = (toc === null ? true : toc) && tocItems;\n  return React.createElement(React.Fragment, null, React.createElement(PageHeader, {\n    timeToComplete,\n    updated\n  }, tocItems[0].title || title || ''), React.createElement(ContentWrapper, {\n    className: styles.wrapper\n  }, React.createElement(\"article\", {\n    className: cx(styles.article, !showToc && styles.noToc),\n    ref: articleRef\n  }, React.createElement(MDXWrapper, {\n    components: {\n      h1: () => null\n    }\n  }, children)), showToc && React.createElement(TableOfContents, {\n    itemsList: tocItems,\n    maxDepth: 2,\n    currSection: currSection\n  })));\n};\nconst pageQuery = \"3587680389\";\nexport const Head = props => {\n  const {location: {pathname}, data: {mdx: {frontmatter: {title}, tableOfContents: {items}}}} = props;\n  return React.createElement(SEO, {\n    pathname,\n    title: title || items[0].title || undefined\n  });\n};\nContent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Content, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","section","h1","p","h2","a","ol","li","strong","img","ul","h3","blockquote","pre","code","_provideComponents","components","QuizAlert","id","component","Error","_missingMdxReference","React","text","className","href","src","alt","wrapper","MDXLayout","Content","data","mdx","tableOfContents","items","tocItems","frontmatter","toc","title","timeToComplete","updated","children","articleRef","useRef","currSection","useState","showToc","PageHeader","ContentWrapper","styles","cx","ref","MDXWrapper","TableOfContents","itemsList","maxDepth","Head","location","pathname","SEO","undefined","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}