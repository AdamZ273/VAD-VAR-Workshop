"use strict";(self.webpackChunkvad_var=self.webpackChunkvad_var||[]).push([[892],{7527:function(e,t,n){n.r(t),n.d(t,{Head:function(){return p},default:function(){return d}});var a=n(1151),l=n(7294);function o(e){const t=Object.assign({h1:"h1",h2:"h2",a:"a",p:"p",h3:"h3",strong:"strong",img:"img",ol:"ol",li:"li",em:"em",ul:"ul",blockquote:"blockquote",code:"code"},(0,a.ah)(),e.components),{SubHeader:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("SubHeader",!0),l.createElement(l.Fragment,null,l.createElement(t.h1,{id:"105-custom-extensions"},"105: Custom Extensions"),"\n",l.createElement(n,{timeToComplete:e.pageContext.frontmatter.timeToComplete,updated:e.pageContext.frontmatter.updated}),"\n",l.createElement(t.h2,{id:"in-this-lesson"},l.createElement(t.a,{href:"#in-this-lesson"},"In this lesson")),"\n",l.createElement(t.p,null,"Learn how to integrate Watson Assistant with external services, like CRM systems, ticketing\nservices, or databases, with custom extensions."),"\n",l.createElement(t.h2,{id:"prerequisites"},l.createElement(t.a,{href:"#prerequisites"},"Prerequisites")),"\n",l.createElement(t.p,null,"Complete this section with the assistant you used in the 104 section or your own assistant. If you\nwant to use your own assistant, you must ",l.createElement(t.a,{href:"https://cloud.ibm.com/docs/watson-assistant?topic=watson-assistant-admin-backup-restore#backup-restore-import"},"upload")," this ",l.createElement(t.a,{href:"https://raw.githubusercontent.com/CloudPak-Outcomes/Watson-Asst-Lab/main/action-skills/begin-105-action-skill.json"},"Action skill")," which reflects the skill after\ncompleting section 104."),"\n",l.createElement(t.p,null,"In order to learn how to build custom extensions with third party applications, this section will\nrequire you to setup a HubSpot CRM account, as well as a Zendesk account."),"\n",l.createElement(t.h2,{id:"introducing-integrations"},l.createElement(t.a,{href:"#introducing-integrations"},"Introducing Integrations")),"\n",l.createElement(t.p,null,"The previous sections of this lab covered many new and exciting ways in which Watson\nAssistant makes building conversational flows easy. However, for your assistant to reach its full\npotential as a comprehensive support solution, it also needs to seamlessly call out to—and pull\ninformation from—an ever-growing world of web apps."),"\n",l.createElement(t.p,null,"In fact, anyone that has had to create real-world conversational flows with a virtual assistant will\nattest that almost every conversational flow ends up relying on integrations. In addition, one of\nthe biggest challenges they would have faced is having to integrate various Application\nProgramming Interfaces (APIs) into the virtual assistant platform—whether Watson Assistant or\nanother conversational AI platform—to deliver the solution."),"\n",l.createElement(t.h3,{id:"types-of-integrations"},l.createElement(t.a,{href:"#types-of-integrations"},"Types of integrations")),"\n",l.createElement(t.p,null,"Watson Assistant generally groups integrations into three types: channel integrations, live agent\nor service desk integrations, and extensions."),"\n",l.createElement(t.p,null,l.createElement(t.strong,null,"Channel integrations")," connect your virtual assistant to your end users. Channels include web\nchat (like the Lendyr assistant at Lendyr.com), phone (like the Lendyr assistant at +1 (732) 481-\n4918), SMS, WhatsApp, Facebook, and more."),"\n",l.createElement(t.p,null,"Some channel integrations can include a ",l.createElement(t.strong,null,"live agent")," or ",l.createElement(t.strong,null,"service desk integration"),". For example,\nthe web chat channel integration can include a service desk integration with Zendesk Chat, or the\nphone integration can be set up with a live agent integration to NICE CXone, a leading contact\ncenter platform provider."),"\n",l.createElement(t.p,null,l.createElement(t.strong,null,"Extensions")," connect your virtual assistant to external services, and in your Actions, you can\ndefine steps that interact with an external service by calling an extension. Extensions can connect\nto a variety of tools, including CRM systems, ticketing services, databases, search engines, and\nmore."),"\n",l.createElement(t.h3,{id:"the-integrations-page"},l.createElement(t.a,{href:"#the-integrations-page"},"The Integrations page")),"\n",l.createElement(t.p,null,"The idea of managing all these types of integrations may seem daunting at first, but Watson\nAssistant keeps things stress free with its ",l.createElement(t.strong,null,"Integrations")," page. The Integrations page consolidates\nall your channel integrations and extensions in one place."),"\n",l.createElement(t.p,null,"Use the left menu of your assistant to open the Integrations page. It’s at the bottom of the menu,\nso you might not spot it at first:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/eb35369d67f582c770faf6c403efd0d2/0.png",alt:""}),"\n",l.createElement(t.p,null,"The Integrations page is organized into three sections (as can be seen below):"),"\n",l.createElement(t.ol,null,"\n",l.createElement(t.li,null,"Essential channels — The bedrock of any assistant: Web chat or Phone."),"\n",l.createElement(t.li,null,"Extensions — Customize your assistant by connecting to third-party APIs."),"\n",l.createElement(t.li,null,"Channels — Deploy your assistant to additional channels, like Slack, Facebook Messenger, or SMS and WhatsApp via Twilio."),"\n"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/5c7c14e83e67d0eccde3be6ee0414fb0/1.png",alt:""}),"\n",l.createElement(t.p,null,"The web chat channel integration is automatically configured for every virtual assistant.\nOrganizations that build virtual assistants for the phone, Slack, Microsoft Teams, or other\nchannels still tend to use the web chat channel for drafting and testing. Later sections of this lab\nwill discuss the phone channel integration and other channels in more detail."),"\n",l.createElement(t.h2,{id:"extensions"},l.createElement(t.a,{href:"#extensions"},"Extensions")),"\n",l.createElement(t.p,null,l.createElement(t.strong,null,"What is an extension?")),"\n",l.createElement(t.p,null,"An extension is a direct connection between Watson Assistant and an external service’s RESTful\nAPI."),"\n",l.createElement(t.p,null,"As can be seen in the screenshot above, Watson Assistant offers two prebuilt extensions called\n",l.createElement(t.strong,null,"Search")," and ",l.createElement(t.strong,null,"Segment (2)"),", and it also lets developers and builders build their own ",l.createElement(t.strong,null,"custom extensions"),"."),"\n",l.createElement(t.h3,{id:"search-extension"},l.createElement(t.a,{href:"#search-extension"},"Search extension")),"\n",l.createElement(t.p,null,"The Search extension lets an organization connect Watson Assistant to a search service. The\nsearch service is typically connected to the organization’s existing knowledge base. The\nextension allows Watson Assistant to send questions to the search service, which then searches\nthe organization’s knowledge base for relevant answers. Watson Assistant receives these answers\nfrom the search service and uses them to answer end users’ questions."),"\n",l.createElement(t.p,null,"Later sections of this lab describe the prebuilt Search extension and custom search extensions in\nmore detail."),"\n",l.createElement(t.h3,{id:"segment-extension"},l.createElement(t.a,{href:"#segment-extension"},"Segment extension")),"\n",l.createElement(t.p,null,"The Segment extension lets an organization connect Watson Assistant to Twilio Segment, a\ncustomer data platform. Once the Segment extension is enabled, Watson Assistant streams\nconversation data to Segment, where the data is combined with other customer journey data."),"\n",l.createElement(t.p,null,"Organizations can use Segment’s many prebuilt connectors to send their data to a variety of\ndestinations, such as CRM systems or cloud databases. Organizations can use Segment to create\ncomplete views of the end user journey across channels and touchpoints."),"\n",l.createElement(t.p,null,"Later sections of this lab describe the Segment extension in more detail."),"\n",l.createElement(t.h3,{id:"custom-extensions"},l.createElement(t.a,{href:"#custom-extensions"},"Custom extensions")),"\n",l.createElement(t.p,null,"Custom extensions combine the power of integrating with an API with ",l.createElement(t.em,null,"ease of use")," for both\ndevelopers and builders – driving down time-to-value and total cost of ownership (TCO). Let's\nlearn all about them!"),"\n",l.createElement(t.p,null,l.createElement(t.strong,null,"How do custom extensions work?")),"\n",l.createElement(t.p,null,"To create a custom extension, a developer uploads a description of an external service’s API.\nThe description is a JavaScript Object Notation (JSON) file that describes the external service’s\nAPI per the OpenAPI Specification. The ",l.createElement(t.a,{href:"https://github.com/OAI/OpenAPI-Specification/"},"OpenAPI Specification")," is a widely adopted standard for\ndescribing RESTful APIs. (For more on RESTful APIs, visit ",l.createElement(t.a,{href:"https://www.redhat.com/en/topics/api/what-is-a-rest-api"},"this")," Red Hat page.)"),"\n",l.createElement(t.p,null,"Where do developers get this description of an external service’s API? Given that OpenAPI is a\nwidely adopted standard, many software vendors publish OpenAPI specs publicly on their\nwebsites or documentation. If an OpenAPI spec is not readily available, there are various ways to\ncreate one from scratch or from existing information – such as from ",l.createElement(t.a,{href:"https://medium.com/ibm-watson/watson-assistant-just-got-connected-a1f46dc9b130"},"IBM App Connect")," or a ",l.createElement(t.a,{href:"https://medium.com/ibm-watson/from-curl-to-an-extension-under-5-minutes-c4662d95c21a"},"cURL command"),"."),"\n",l.createElement(t.p,null,"Once a developer creates a custom extension in Watson Assistant, a non-technical builder can\nuse the extension in Actions. Remember that Actions have steps, and each step can ask the end\nuser to provide a response. Actions also store information in variables. When a builder uses an\nextension, they can pass information to the extension, which was gathered in earlier steps or\nstored in variables. The extension also hands information back to the Action, and the builder can\nreference these in later steps or store them as variables. All of this is done in the Actions page,\nwithout writing any code."),"\n",l.createElement(t.p,null,"If you’re having trouble visualizing this, that’s okay – let’s build an example together!"),"\n",l.createElement(t.p,null,l.createElement(t.strong,null,"Custom extension starter kits")),"\n",l.createElement(t.p,null,"To build out the examples in this lab, you will reference a few starter kits maintained by the\nWatson Assistant development team to help organizations get started with custom extensions."),"\n",l.createElement(t.p,null,"You can view the starter kits ",l.createElement(t.a,{href:"https://github.com/watson-developer-cloud/assistant-toolkit/tree/master/integrations/extensions#readme"},"here"),". The starter kits include CRM systems (HubSpot), ticketing\nservices (ServiceNow, Zendesk Support), search engines (Coveo, Google Custom Search,\nMagnolia, Watson Discovery), and more."),"\n",l.createElement(t.h2,{id:"building-custom-extensions"},l.createElement(t.a,{href:"#building-custom-extensions"},"Building Custom Extensions")),"\n",l.createElement(t.h3,{id:"build-a-custom-extension-to-a-crm-system"},l.createElement(t.a,{href:"#build-a-custom-extension-to-a-crm-system"},"Build a custom extension to a CRM system")),"\n",l.createElement(t.p,null,"One of the most common types of custom extension is integrating with a customer relationship\nmanagement (CRM) system. Virtual assistants often pull in information from a CRM system to\npersonalize the end user experience."),"\n",l.createElement(t.p,null,"For example:"),"\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,"The virtual assistant can greet the end user by name, pulling the name from the end user’s\nprofile in the CRM system."),"\n",l.createElement(t.li,null,"The virtual assistant can pre-populate fields in a form or skip steps in an action, so it\ndoesn’t ask the end user for information that the organization has already learned from\nprevious interactions and stored in the CRM system."),"\n",l.createElement(t.li,null,"The virtual assistant can provide different levels of access and service depending on the\nmembership status of the end user in the CRM system."),"\n",l.createElement(t.li,null,"The virtual assistant can make special offers to up-sell or cross-sell to the end user,\npulling a list of offers most likely to appeal to this end user from the CRM system."),"\n"),"\n",l.createElement(t.p,null,"Let’s build a custom extension to HubSpot. You will begin by building the custom extension,\nand you will finish by incorporating the extension into your Actions."),"\n",l.createElement(t.p,null,l.createElement(t.strong,null,"Download the OpenAPI spec, which describes the HubSpot API, from the starter kit")),"\n",l.createElement(t.p,null,"Navigate to ",l.createElement(t.a,{href:"https://raw.githubusercontent.com/watson-developer-cloud/assistant-toolkit/master/integrations/extensions/starter-kits/hubspot/basic/hubspot.basic.openapi.json"},"this link"),', which stores an OpenAPI spec for the HubSpot API. Download the file by\nright-clicking anywhere on the page and selecting "Save Page As..." or "Save as..." Save the\nfile to your system, and assure the file extension is ',l.createElement(t.strong,null,".json"),"; the file name should be\n",l.createElement(t.strong,null,"hubspot.basic.openapi.json"),". (Rename it if necessary.)"),"\n",l.createElement(t.p,null,"You now have a description of the HubSpot API."),"\n",l.createElement(t.p,null,l.createElement(t.strong,null,"Create a custom extension by uploading the OpenAPI spec to Watson Assistant")),"\n",l.createElement(t.p,null,"In Watson Assistant, use the left menu to open the ",l.createElement(t.strong,null,"Integrations (1)")," page. Then, scroll down and\nclick the ",l.createElement(t.strong,null,"Build custom extension (2)")," button:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/74a6c1f727047581965dbe431a524964/2.png",alt:""}),"\n",l.createElement(t.p,null,"This first screen describes what you’ll need to create the extension. Note that the OpenAPI JSON\ndocument, which you just obtained, is key to the setup. Click ",l.createElement(t.strong,null,"Next")," in the top right to proceed to\nthe next screen:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/f92ca92377b0e5f18f1927a8f5fa753e/3.png",alt:""}),"\n",l.createElement(t.p,null,"The second screen asks you to name and describe the custom extension. Name the custom\nextension ",l.createElement(t.strong,null,"HubSpot CRM")," as shown in the image below ",l.createElement(t.strong,null,"(1)"),' and add a description, like\n"Personalizes the end user experience with information from Lendyr\'s CRM system" ',l.createElement(t.strong,null,"(2)"),". Click\nNext (3) in the top right to proceed to the next screen."),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/f5a632c41b36a03a8440746d7b31a51a/4.png",alt:""}),"\n",l.createElement(t.p,null,"In the next screen, either drag-and-drop or click to upload the OpenAPI spec you downloaded,\nthen click ",l.createElement(t.strong,null,"Next")," in the top right to proceed to the next screen:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/a1a56da322393b9c4410552228ed2055/5.jpg",alt:""}),"\n",l.createElement(t.p,null,"Take a moment to review the extension on the following screen. Note that this extension will\nallow us to call the HubSpot API to get a Contact’s details by their ",l.createElement(t.strong,null,"ID (1)"),". You can click the\narrow next to this ",l.createElement(t.strong,null,"Get Contact by ID (1)")," operation to see more details:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/f08901214ed1f8c589d86973bbbd66f3/6.png",alt:""}),"\n",l.createElement(t.p,null,"In the above image, Watson Assistant will share the end user’s ",l.createElement(t.strong,null,"contactid")," with the extension,\nwhich will call the HubSpot API and then return various information, including the end user’s\n",l.createElement(t.strong,null,"email"),", ",l.createElement(t.strong,null,"lastname"),", ",l.createElement(t.strong,null,"firstname"),", and ",l.createElement(t.strong,null,"membership_status (2)"),"."),"\n",l.createElement(t.p,null,"Click ",l.createElement(t.strong,null,"Finish (3)")," to create the custom extension. You should now be able to see the HubSpot\nCRM extension in your Integrations catalog:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/3d82145af2b682fe690ca5a34d521c42/7.jpg",alt:""}),"\n",l.createElement(t.p,null,l.createElement(t.strong,null,"Create a HubSpot account and add some end user data")),"\n",l.createElement(t.p,null,"Next, you will create a HubSpot CRM account (if you haven’t already created one in the past).\nThis will be the specific instance of HubSpot with which the extension integrates."),"\n",l.createElement(t.p,null,"Navigate to this link to ",l.createElement(t.a,{href:"https://developers.hubspot.com/get-started"},"create an app developer account"),". ",l.createElement(t.em,null,"This account is free and it does not\nrequire a credit card"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/8ab509284ec98da17bf5d4b92dd7de76/8.jpg",alt:""}),"\n",l.createElement(t.p,null,"Follow the prompts as you sign up. HubSpot will ask you to verify your email. Once you have\nverified your email, click ",l.createElement(t.strong,null,"Test things out")," to create a test account:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/c6d4b0c481772cb8a0754a28b24e902f/9.jpg",alt:""}),"\n",l.createElement(t.p,null,"Click ",l.createElement(t.strong,null,"Manage test accounts")," on the following screen:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/8c8ca07f18dae5391481ef44fba81304/10.jpg",alt:""}),"\n",l.createElement(t.p,null,"Next, click ",l.createElement(t.strong,null,"Create app test account")," in the top right."),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/09f62f66f3f537d3c4837d0e41aaeb7c/11.jpg",alt:""}),"\n",l.createElement(t.p,null,"On the popup window, name the test account ",l.createElement(t.strong,null,"Extensions lab (1)")," and click ",l.createElement(t.strong,null,"Create (2)"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/f0259c5ccad8d27a56a3b25b3ac1f0fe/12.png",alt:""}),"\n",l.createElement(t.p,null,"Open the test account in a new window by clicking its name:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/58c11093bbb98f2c44e2db8f40a2bce4/13.jpg",alt:""}),"\n",l.createElement(t.p,null,"Next, in the newly opened window, click on ",l.createElement(t.strong,null,"Settings")," (the cog wheel icon in the top menu bar):"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/987bede2253c7cea6f4c3fd7d3f2ab22/14.jpg",alt:""}),"\n",l.createElement(t.p,null,"On the Settings screen (shown below), click to expand the ",l.createElement(t.strong,null,"Integrations (1)")," left menu option, and\nselect ",l.createElement(t.strong,null,"Private Apps (2)"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/76883d7c103d5e0c719bdd57ac86f2b0/15.jpg",alt:""}),"\n",l.createElement(t.p,null,"Now, create your own private HubSpot CRM app:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/bdaba76a04e806a8bdee05b2575ce777/16.jpg",alt:""}),"\n",l.createElement(t.p,null,"In the following screen, enter your app’s name, for example ",l.createElement(t.strong,null,"Extensions-Lab (1)"),", enter a\ndescription ",l.createElement(t.strong,null,"(2)"),", such as “Personalizing Lendyr with a customer extension to a CRM system”),\nand then click ",l.createElement(t.strong,null,"Scopes (3)"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/2d295bcb70a5a08a9dc7b19b05aef508/17.png",alt:""}),"\n",l.createElement(t.p,null,"Next, you will set the scope of your new HubSpot CRM app as one that handles support tickets:"),"\n",l.createElement(t.ol,null,"\n",l.createElement(t.li,null,"Go to the ",l.createElement(t.strong,null,"Scopes")," tab."),"\n",l.createElement(t.li,null,"In the ",l.createElement(t.strong,null,"search")," box, first search for tickets, and then search for ",l.createElement(t.strong,null,"crm.objects.contacts.read"),"."),"\n",l.createElement(t.li,null,"When you find ",l.createElement(t.strong,null,"tickets")," in this box, select it. Do the same for ",l.createElement(t.strong,null,"crm.objects.contacts.read"),"."),"\n",l.createElement(t.li,null,"Confirm that they both appear as ",l.createElement(t.strong,null,"Selected")," scopes."),"\n",l.createElement(t.li,null,"Click ",l.createElement(t.strong,null,"Create app"),":"),"\n"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/f0057e834e23887d1db8291b44c1cbe6/18.jpg",alt:""}),"\n",l.createElement(t.p,null,"The next popup screen informs you that an access token will be generated. You will need to save\nthis elsewhere for future use. Click ",l.createElement(t.strong,null,"Continue creating"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/c4cb419c053dd83670882a7fd477cf34/19.jpg",alt:""}),"\n",l.createElement(t.p,null,"In the ensuing popup, click to show the token ",l.createElement(t.strong,null,"(1)"),", ",l.createElement(t.strong,null,"Copy")," it ",l.createElement(t.strong,null,"(2)"),", and save it. Then, it’s\nrecommended that you take the quick ",l.createElement(t.strong,null,"private apps tour (3)"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/74c55fdf20263d673359aae79383801f/20.jpg",alt:""}),"\n",l.createElement(t.p,null,"Once you complete the tour, you will need to add contacts to your CRM system. Contacts are\nend customers which your assistant will need to support. To do so, open the Contacts page by\nclicking ",l.createElement(t.strong,null,"Contacts (1)")," in the top menu, then ",l.createElement(t.strong,null,"Contacts (2)")," from the dropdown menu:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/7fae6523206dbafcb4cc926f0120af6e/21.jpg",alt:""}),"\n",l.createElement(t.p,null,"Note that, on this Contacts page, HubSpot has created two example contacts for you: ",l.createElement(t.em,null,"Brian\nHalligan")," and ",l.createElement(t.em,null,"Maria Johnson"),". Each contact has a set of properties associated with them. These\nproperties are columns in the Contacts table; for example, phone number and contact owner."),"\n",l.createElement(t.p,null,"You will add a new property: membership status. Click ",l.createElement(t.strong,null,"Actions (1)"),", then ",l.createElement(t.strong,null,"Edit properties (2)"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/74cbcdd40557956ed80cea2062530888/22.jpg",alt:""}),"\n",l.createElement(t.p,null,"Then, click ",l.createElement(t.strong,null,"Create property"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/18029638be675d218d28410aa6a4dd6d/23.jpg",alt:""}),"\n",l.createElement(t.p,null,"Next, you will create the property with Object type: ",l.createElement(t.strong,null,"Contact (1), Group: Contact information(2)"),",\nand ",l.createElement(t.strong,null,"Label: Membership status (3)"),". ",l.createElement(t.strong,null,l.createElement(t.em,null,"Make sure the label is exactly membership status")),". The\nOpenAPI spec you uploaded to create the extension expects a label with that exact name and\nspelling. You can double check by clicking the ",l.createElement(t.strong,null,"</> icon (4)")," and noting that the ",l.createElement(t.strong,null,"Internal name")," is\nexactly ",l.createElement(t.strong,null,"membership_status (5)"),". When ready, click ",l.createElement(t.strong,null,"Next (6)"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/ffb08340fba35e1a53a5b4fd4c729e4e/24.jpg",alt:""}),"\n",l.createElement(t.p,null,"Select ",l.createElement(t.strong,null,"Single-line text")," as the field ",l.createElement(t.strong,null,"type (1)"),", then ",l.createElement(t.strong,null,"Next (2)"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/3fcc6d9359815d5c10ff32d362d5c8ed/25.jpg",alt:""}),"\n",l.createElement(t.p,null,"Click ",l.createElement(t.strong,null,"Create")," in the bottom right:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/6c678181cb4b90b6fa92aaea00361215/26.jpg",alt:""}),"\n",l.createElement(t.p,null,"Note that a popup on the top of your screen confirms that the new property was created:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/92a7e52affcc62f549f7cb2240f1aa71/27.jpg",alt:""}),"\n",l.createElement(t.p,null,"Now, return to the ",l.createElement(t.strong,null,"Contacts")," page by clicking ",l.createElement(t.strong,null,"Contacts (1)")," in the top menu, then ",l.createElement(t.strong,null,"Contacts (2)"),"\nfrom the dropdown menu. Next, you will add data to the contacts in your CRM system. Click ",l.createElement(t.strong,null,"Edit columns"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/0624164bb54ba01e665d1aed5bcc1f3f/28.png",alt:""}),"\n",l.createElement(t.p,null,"Search for the ",l.createElement(t.strong,null,"Record ID (1)")," and check its checkbox ",l.createElement(t.strong,null,"(2)")," to add it. Note that it appears at the\nbottom of the list of ",l.createElement(t.strong,null,"selected columns (3)"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/fb6dd3a745ba546f8e7354b45cc92f29/29.jpg",alt:""}),"\n",l.createElement(t.p,null,"Next, search for ",l.createElement(t.strong,null,"Membership status (1)")," and check its checkbox ",l.createElement(t.strong,null,"(2)")," to add it. It will also appear\nat the bottom of the list of ",l.createElement(t.strong,null,"selected columns (3)"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/2ac75c9bf6be1a25a5600a2608e8ac5c/30.jpg",alt:""}),"\n",l.createElement(t.p,null,"Drag ",l.createElement(t.strong,null,"Record ID")," and ",l.createElement(t.strong,null,"Membership status (1)")," up to be the second and third columns,\nrespectively. ",l.createElement(t.strong,null,"Name")," will be the first column. Then, click ",l.createElement(t.strong,null,"Apply (2)"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/9a7711528753f598cbb5cc204bdc5c99/31.jpg",alt:""}),"\n",l.createElement(t.p,null,"Your table should now look similar to the image below. Select Brian Halligan’s record by\nclicking his checkbox ",l.createElement(t.strong,null,"(1),")," then click ",l.createElement(t.strong,null,"Edit (2)"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/a893ffd9144c79242e3467215eef681d/32.jpg",alt:""}),"\n",l.createElement(t.p,null,"In the ensuing popup, select ",l.createElement(t.strong,null,"Membership status (1)")," from the dropdown,\nand type in ",l.createElement(t.strong,null,"Lendyr Topaz (2)")," as its value. Click ",l.createElement(t.strong,null,"Update (3)"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/eba79ebc74cae492604597b1dc2b91cf/33.png",alt:""}),"\n",l.createElement(t.p,null,"You should now see in the Contacts table that Brian Halligan’s membership status is Lendyr\nTopaz (not shown). Do not change Maria’s membership status."),"\n",l.createElement(t.p,null,"Congratulations! You’re ready to work with the custom extension in Watson Assistant. Don’t\nclose your HubSpot browser window just yet, you may need to come back to it once more."),"\n",l.createElement(t.p,null,l.createElement(t.strong,null,"Add the custom extension to your virtual assistant")),"\n",l.createElement(t.p,null,"Earlier, you created a custom extension to HubSpot. This tells Watson Assistant how to connect\nto HubSpot, but it doesn’t tell Watson Assistant which instance of HubSpot to pull data from."),"\n",l.createElement(t.p,null,"In your assistant, navigate to the ",l.createElement(t.strong,null,"Integrations")," page ",l.createElement(t.strong,null,"(1)")," and click Add (2) on the HubSpot card,\nthen click ",l.createElement(t.strong,null,"Add (3)")," in the pop-up confirmation."),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/57c5107536d234790cf9a77198aabd25/34.jpg",alt:""}),"\n",l.createElement(t.p,null,"In the following screen, you can read about how to add the custom extension. When ready, click\n",l.createElement(t.strong,null,"Next"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/2634e020100d4c6d251fce0691a4109a/35.jpg",alt:""}),"\n",l.createElement(t.p,null,"Select ",l.createElement(t.strong,null,"Bearer auth (1)")," as the authentication type, then paste in the access token you saved from\nHubSpot ",l.createElement(t.strong,null,"(2)"),". (You don't need to specify the server because that was included as part of the JSON\nfile provided earlier when adding the integration.) Click ",l.createElement(t.strong,null,"Next (3)"),"."),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/d152b9a035308f34bce3689373f7b31b/36.png",alt:""}),"\n",l.createElement(t.p,null,"You’ll see a summary of the custom extension on the final page. Review the operations provided\nby the extension, then click ",l.createElement(t.strong,null,"Finish"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/7d4fa31cb9c11f1c5060c95b83b4ec71/37.jpg",alt:""}),"\n",l.createElement(t.p,null,"Click ",l.createElement(t.strong,null,"Close"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/c59720be45a243dc4f66f2f887f01a03/38.png",alt:""}),"\n",l.createElement(t.p,null,l.createElement(t.strong,null,"As a builder, write the extension in an Action")),"\n",l.createElement(t.p,null,"You now have a custom extension to your HubSpot CRM system, and you’re ready to use it to\npersonalize the experience of Lendyr’s end users."),"\n",l.createElement(t.p,null,"Earlier we noted several ways to personalize the end user experience with CRM data. Now, you\nwill simply greet the end user by name and store their name, email, and membership status in the\nvirtual assistant. Storing their information allows you to reference it in future Actions."),"\n",l.createElement(t.p,null,"Some step-by-step screenshots will be omitted—if you don’t know how to follow these\ninstructions, please refer to the 102 section of this lab on building Actions."),"\n",l.createElement(t.p,null,"Open the ",l.createElement(t.em,null,"Actions page"),", then create a ",l.createElement(t.em,null,"New action")," from ",l.createElement(t.em,null,"scratch"),". The end user should say\n“Authenticate me” to start this interaction. (Not shown.)"),"\n",l.createElement(t.p,null,"In Step 1, have the assistant ask “What is your Lendyr member number?” and define the\ncustomer response as a ",l.createElement(t.em,null,"number"),". Your screen should look similar to this:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/8787d917778ec40fdadb7e1864d958d8/39.jpg",alt:""}),"\n",l.createElement(t.p,null,"Add a second step. In Step 2, have the assistant say “Pulling in your information now…” Change\n",l.createElement(t.strong,null,"And then")," to “Use an extension,” which will open up an ",l.createElement(t.strong,null,"Extension setup")," popup window:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/318b94c8195ad86c9824d7edb88d8477/40.png",alt:""}),"\n",l.createElement(t.p,null,"In the panel, as shown above, select ",l.createElement(t.strong,null,"HubSpot CRM")," as the extension ",l.createElement(t.strong,null,"(1), Get Contact by ID")," as\nthe ",l.createElement(t.strong,null,"Operation (2)"),", and set ",l.createElement(t.strong,null,"contactId")," to the end user’s response to step 1, ",l.createElement(t.strong,null,"“1. What is your Lendyr member number?” (3)")),"\n",l.createElement(t.p,null,"Notice how you, as the builder, are easily configuring this Action to call out to the HubSpot API\nvia the extension. You can select the steps or other variables to plug into the operation with a\ndropdown menu – there’s no code and no unnecessary complexity."),"\n",l.createElement(t.p,null,"Click ",l.createElement(t.strong,null,"Apply")," when you’re done. Your Step 2 should look like this:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/86e6d51885fb526e992a473def6f17f5/41.png",alt:""}),"\n",l.createElement(t.p,null,"Now, create a new step. In this Step 3, since you used an extension in a previous step, you can\nreference information that the extension has returned."),"\n",l.createElement(t.p,null,"In ",l.createElement(t.strong,null,"Assistant says"),", type in “Welcome, ” ",l.createElement(t.strong,null,"(1)")," and then click the variables icon ",l.createElement(t.strong,null,"(2)"),". Let’s\nlook at what variables are available to you ",l.createElement(t.strong,null,"(3)"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/6f500dd09a9a775a63864213f43ce86b/42.png",alt:""}),"\n",l.createElement(t.p,null,"The list of variables provides a selection of values that you can reference in your assistant now\nthat you’ve called the extension. Note that it includes ",l.createElement(t.strong,null,"Run successfully")," which indicates whether\nthe API call was successful, so that you can conditionally handle the case of unrecognized\ncustomer IDs."),"\n",l.createElement(t.p,null,"From this list, scroll down and click on ",l.createElement(t.strong,null,"body.properties.firstname"),". Then, as shown below ",l.createElement(t.strong,null,"(1)"),",\ntype in an exclamation point, and a new sentence: “How can I help you today?” Lastly, change\n",l.createElement(t.strong,null,"And then")," to ",l.createElement(t.strong,null,"End the action (2)"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/09dd2f997fdafe833b4f7025d0635c77/43.png",alt:""}),"\n",l.createElement(t.p,null,"There’s one more thing you need to do. Right now, the information produced by the extension is\nnot stored by the assistant beyond this Action. In other words, while you can use the\nbody.properties.firstname variable in Step 3, you cannot use it in an another Action."),"\n",l.createElement(t.p,null,"Let’s fix that. Click the ",l.createElement(t.strong,null,"fx")," icon in Step 3 to set variable values."),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/e09dc04b22cf59bf0d90f1d7de09ed5c/44.jpg",alt:""}),"\n",l.createElement(t.p,null,"Note that the ",l.createElement(t.strong,null,"Variable values")," view is now shown ",l.createElement(t.strong,null,"(1)"),". Click ",l.createElement(t.strong,null,"Set new value + (2)")," and scroll\ndown to the bottom to select + ",l.createElement(t.strong,null,"New session variable (3)"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/4e66795d1b906f72551411b65c51e79a/45.png",alt:""}),"\n",l.createElement(t.p,null,"You will create several new session variables to store information from HubSpot. ",l.createElement(t.strong,null,"Session"),"\n",l.createElement(t.strong,null,"variables")," are stored for the end user’s entire session – the entire time they interact with the\nvirtual assistant. This will allow you to use them across Actions."),"\n",l.createElement(t.p,null,"In the popup, set the ",l.createElement(t.strong,null,"Name")," to ",l.createElement(t.strong,null,"email (1)"),", select ",l.createElement(t.strong,null,"Free text (2)")," as its type, and click ",l.createElement(t.strong,null,"Apply (3)"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/adb99e248ae86f75795118fd2a440294/46.png",alt:""}),"\n",l.createElement(t.p,null,"Back in the Step 3 view, set the email variable value to ",l.createElement(t.strong,null,"body.properties.email"),". Do this by\nclicking on the dropdown ",l.createElement(t.strong,null,"(1)"),", then selecting ",l.createElement(t.strong,null,"Hubspot CRM (2)"),", and finally picking the\n",l.createElement(t.strong,null,"body.properties.email")," property (3):"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/7b4057bd73b44116352255e405c1d5d5/47.png",alt:""}),"\n",l.createElement(t.p,null,"Now, repeat the above steps to create three more session variables named: ",l.createElement(t.strong,null,"first name"),", ",l.createElement(t.strong,null,"lastname"),",\nand ",l.createElement(t.strong,null,"Membership status"),". (Not shown.) As you do, set each session variable to its corresponding\nvalue from the custom extension. Your screen should look like the image below; don’t forget to\nsave the Action by clicking on the ",l.createElement(t.strong,null,"Save icon"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/bb54bcb54d8353e32c98c710a96dc1e0/48.jpg",alt:""}),"\n",l.createElement(t.p,null,"That’s it! You’ve successfully added an extension – a connection to an external service – into an\nAction."),"\n",l.createElement(t.p,null,"This may have felt quite time-consuming. You spent a fair bit of time setting up the custom\nextension, then setting up HubSpot. But take a moment to imagine the two distinct roles of a\ndeveloper and a builder. The developer would have set up the custom extension and pulled the\nauthentication token from HubSpot. At that point, they would have messaged the builder and\nsaid, “Hey, you’re good to go.” The builder would have opened the Actions page and gotten\nstraight to building. Each role specializes in what they’re best at: the developer doesn’t have to\nwrite conversational flows, and the builder doesn’t have to write any code. That’s the power of\ncustom extensions!"),"\n",l.createElement(t.p,null,l.createElement(t.strong,null,"See the custom extension to a CRM system in Action")),"\n",l.createElement(t.p,null,"Before you continue, remember that the “Lendyr member number” should be one of the Record\nIDs in HubSpot, which are 1 and 51 (as shown below). Any other number will not work – you\nwill return to fix that problem later."),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/2befecf6200f024d31e0e53eca62594a/49.png",alt:""}),"\n",l.createElement(t.p,null,"Now, within the Actions window (so that you can chat in “debug” mode), open up the Preview\npanel. Once you start the chat, click the ",l.createElement(t.strong,null,"variable values icon (1)"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/35d42667446f2c0dd08018ddb45d051b/50.png",alt:""}),"\n",l.createElement(t.p,null,"Then, have the chat shown above on the ",l.createElement(t.strong,null,"left (2)")," by saying “Authenticate me please!”, followed by\n“51”. Note how the ",l.createElement(t.strong,null,"Action variables (3)")," populate and change as you converse."),"\n",l.createElement(t.p,null,"Next, you will inspect the extension! Click the ",l.createElement(t.strong,null,"refresh icon (4)")," and enter the two customer\nutterances “Hi! Can you authenticate me?” and “1” (5). The assistant now calls the extension; click\n",l.createElement(t.strong,null,"Impact (6)")," to show the ",l.createElement(t.strong,null,"Extension inspector (7)"),". Note all of the properties of your HubSpot CRM\nextension."),"\n",l.createElement(t.p,null,"You may now close your HubSpot browser window."),"\n",l.createElement(t.h3,{id:"build-a-custom-extension-to-a-ticketing-service"},l.createElement(t.a,{href:"#build-a-custom-extension-to-a-ticketing-service"},"Build a custom extension to a ticketing service")),"\n",l.createElement(t.p,null,"Excellent work. Now is a good time to take a ten-minute break. If you’re in a workshop, lean\nover to your neighbor and ask how they’re doing. Once you’re ready, you’ll pick back up with a\nnew custom extension to a ticketing service."),"\n",l.createElement(t.p,null,"Thus far, you’ve integrated Lendyr’s virtual assistant with Lendyr’s CRM system. This pulls\ninformation ",l.createElement(t.em,null,"in")," from an external service to personalize the end user experience. Our second\ncustom extension will push information ",l.createElement(t.em,null,"out")," to an external service."),"\n",l.createElement(t.p,null,"Imagine Lendyr uses Zendesk, a popular customer service software product, to manage customer\nsupport tickets, like bug reports, complaints, or requests for assistance. Lendyr gets a fair bit of\ntraffic to its virtual assistant asking to create a ticket, but today it doesn’t have a connection\nbetween its virtual assistant and Zendesk."),"\n",l.createElement(t.p,null,"Here’s what you will do:"),"\n",l.createElement(t.ol,null,"\n",l.createElement(t.li,null,"Set up a free trial (no credit card required) of Zendesk"),"\n",l.createElement(t.li,null,"Create a custom extension to Zendesk in your assistant"),"\n",l.createElement(t.li,null,"Write the custom extension into an Action"),"\n",l.createElement(t.li,null,"Preview the Action to see your extension in action (pun intended!)"),"\n"),"\n",l.createElement(t.p,null,"Let’s begin!"),"\n",l.createElement(t.p,null,l.createElement(t.strong,null,"Set up a free trial (no credit card required) of Zendesk")),"\n",l.createElement(t.p,null,"Visit ",l.createElement(t.a,{href:"https://www.zendesk.com/register/"},"https://www.zendesk.com/register/")," to set up a free trial. Follow the prompts, and once you\nverify your email, you should arrive at a screen like this one:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/2ab0bc737e9bb8d7b8c9c5e057d9edf5/51.jpg",alt:""}),"\n",l.createElement(t.p,null,"Note that your Zendesk account’s URL will have a unique code called a server domain, in the\nfollowing format: ",l.createElement(t.strong,null,"https://{server-domain}.zendesk.com"),". Using your unique server domain,\nvisit ",l.createElement(t.strong,null,"https://{server-domain}.zendesk.com/admin")," to go to your ",l.createElement(t.strong,null,"Admin center (1)")," page:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/f169537e32d3f9beea2568c488e40a69/52.jpg",alt:""}),"\n",l.createElement(t.p,null,"On the left-hand menu, go to ",l.createElement(t.strong,null,"Apps and integrations (2)"),", then click ",l.createElement(t.strong,null,"Zendesk API (3)"),"."),"\n",l.createElement(t.p,null,"On the next screen (not shown), agree to the Zendesk Terms of Service and Application\nDeveloper and API License Agreement."),"\n",l.createElement(t.p,null,"Next, as shown below, open the ",l.createElement(t.strong,null,"Settings")," tab ",l.createElement(t.strong,null,"(1)"),", toggle ",l.createElement(t.strong,null,"Token access (2)")," on, and click\n",l.createElement(t.strong,null,"Add API Token (3)"),". ",l.createElement(t.strong,null,"Copy (4)")," the API token and store it somewhere, and click ",l.createElement(t.strong,null,"Save (5)"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/dc6612f630bdddf0e3df149546130b65/53.jpg",alt:""}),"\n",l.createElement(t.blockquote,null,"\n",l.createElement(t.p,null,l.createElement(t.strong,null,"Important:")," Make sure to copy and store the API token. Zendesk will never show it to you again\nonce you click Save or leave the page."),"\n"),"\n",l.createElement(t.p,null,l.createElement(t.strong,null,"Create a custom extension to Zendesk in your assistant")),"\n",l.createElement(t.p,null,"Navigate to this ",l.createElement(t.a,{href:"https://raw.githubusercontent.com/watson-developer-cloud/assistant-toolkit/master/integrations/extensions/starter-kits/zendesk-support/zendesk.openapi.json"},"link"),", which stores the OpenAPI spec for the Zendesk API. Download the file by\nright-clicking anywhere on the page and selecting “Save Page As…” or “Save as…” Save the\nfile to your device; it should appear on your device as a JSON file."),"\n",l.createElement(t.blockquote,null,"\n",l.createElement(t.p,null,l.createElement(t.strong,null,"Note:")," If the JSON file does not save with a .json file extension, make sure you add it manually\nby renaming the file. The final file name should be ",l.createElement(t.strong,null,"zendesk.openapi.json")),"\n"),"\n",l.createElement(t.p,null,"In Watson Assistant, go to the ",l.createElement(t.strong,null,"Integrations page (1)"),", and click ",l.createElement(t.strong,null,"Build custom extension (2):")),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/0d28f87264a51e09c4497c55ba5e6de1/54.png",alt:""}),"\n",l.createElement(t.p,null,"On the following screen, click ",l.createElement(t.strong,null,"Next")," to get past the ",l.createElement(t.strong,null,"Get started")," panel (not shown). This will take\nyou to the ",l.createElement(t.strong,null,"Basic information (1)")," panel, shown below. Name your custom extension\n",l.createElement(t.strong,null,"Zendesk Ticketing (2)")," and type in a ",l.createElement(t.strong,null,"description (3)"),": “Allows end users to use the virtual assistant to\ncreate tickets in Lendyr's ticketing service.” Click ",l.createElement(t.strong,null,"Next (4)"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/17eb0e0048425237f76ba0cd6ef7e891/55.jpg",alt:""}),"\n",l.createElement(t.p,null,"Drag and drop the OpenAPI spec ",l.createElement(t.strong,null,"(1)"),", or click to upload. Click ",l.createElement(t.strong,null,"Next (2)"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/ae141320de04f545a358f1cdfd29d41f/56.jpg",alt:""}),"\n",l.createElement(t.p,null,"Review the extension and its operations. You’ll mainly use ",l.createElement(t.strong,null,"Create Ticket (1)"),". Click ",l.createElement(t.strong,null,"Finish (2)"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/dbd32ce81ed5ab84d826041108adc092/57.jpg",alt:""}),"\n",l.createElement(t.p,null,"Back at the ",l.createElement(t.strong,null,"Integrations page (1)"),", click ",l.createElement(t.strong,null,"Add + (2)")," on the Zendesk Ticketing card:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/23fd16e84d3a9cd08c587afbc60fb34b/58.png",alt:""}),"\n",l.createElement(t.p,null,"Click ",l.createElement(t.strong,null,"Add")," in the resulting pop-up (not shown). On the ensuing ",l.createElement(t.strong,null,"Getting started")," panel, click\n",l.createElement(t.strong,null,"Next"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/cd98696a9eecc355f7d013d92d85695d/59.png",alt:""}),"\n",l.createElement(t.p,null,"On the following screen, you will fill out several fields:"),"\n",l.createElement(t.ol,null,"\n",l.createElement(t.li,null,"For ",l.createElement(t.strong,null,"Authentication")," type, choose Basic auth."),"\n",l.createElement(t.li,null,"For ",l.createElement(t.strong,null,"Username"),", type in ",l.createElement(t.strong,null,"your")," email address and /token. For example, ",l.createElement(t.code,null,"arvind.krishna@ibm.com/token"),"."),"\n",l.createElement(t.li,null,"For Password, paste in the API token you stored from the Zendesk API settings."),"\n",l.createElement(t.li,null,"For Servers, keep the selected option."),"\n",l.createElement(t.li,null,"For Server variables, type in your unique server domain - this is the first part of the URL\nyou see when you log into your Zendesk trial. For example, “ibm2023” as the first part in\n",l.createElement(t.a,{href:"https://ibm2023.zendesk.com"},"https://ibm2023.zendesk.com"),"."),"\n",l.createElement(t.li,null,"Click ",l.createElement(t.strong,null,"Next"),":"),"\n"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/bb316ff4d9671f1ae027c566315be1e2/60.png",alt:""}),"\n",l.createElement(t.p,null,"On the next screen, you can review the Zendesk Ticketing integration ",l.createElement(t.strong,null,"(1)"),", then click ",l.createElement(t.strong,null,"Finish (2)"),"."),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/b2ce1ea576448895cbd16c95d42abd5b/61.png",alt:""}),"\n",l.createElement(t.p,null,"On the final confirmation screen (not shown), simply click ",l.createElement(t.strong,null,"Close"),"."),"\n",l.createElement(t.p,null,l.createElement(t.strong,null,"Write the custom extension into an Action")),"\n",l.createElement(t.p,null,"Now that the Zendesk Ticketing extension is set up, you will create an Action that uses it."),"\n",l.createElement(t.p,null,"Return to the Actions page, shown below. Then, click ",l.createElement(t.strong,null,"Created by you (1)")," under the\n",l.createElement(t.strong,null,"Variables")," dropdown menu on the left. Note all the variables that Lendyr's Actions use to interact with end\nusers (2), including the ones you created earlier: ",l.createElement(t.strong,null,"email"),", ",l.createElement(t.strong,null,"firstname"),", ",l.createElement(t.strong,null,"lastname"),", and\n",l.createElement(t.strong,null,"Membership status"),". Some of them have types - like number or free text. Others can be configured to have an\ninitial value. You will leverage the fact that you might already know the end user's name, email\naddress, or membership status when you create the ticket:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/ad65f817192829d83eb4ecde325d0573/62.png",alt:""}),"\n",l.createElement(t.p,null,"Next, you will create another Action. On the above screen, click ",l.createElement(t.strong,null,"Created by you")," under the\n",l.createElement(t.strong,null,"Actions")," category, then click ",l.createElement(t.strong,null,"New action +"),", and Start from scratch. (This sequence of clicks is\nnot shown, but it's the same as with all the Actions you created earlier.)"),"\n",l.createElement(t.p,null,"What does your customer say to start this interaction? “I want to submit a support ticket.” In\n",l.createElement(t.strong,null,"Step 1"),", write ",l.createElement(t.strong,null,"Assistant says")," “Let's create a ticket for you! I will need to gather some\ninformation to help you submit the ticket.” Your new Action should look like this:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/08d280d81a6f3b21be2288c1384453d1/63.png",alt:""}),"\n",l.createElement(t.p,null,"Next, create step 2. In this step, set ",l.createElement(t.strong,null,"Assistant says (1)")," to “What is your email address?” Then,\n",l.createElement(t.strong,null,"Define customer response (2)")," as ",l.createElement(t.strong,null,"Regex (Regular expression)"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/85fa31588c85299cc5304b58c6955431/64.png",alt:""}),"\n",l.createElement(t.blockquote,null,"\n",l.createElement(t.p,null,"A ",l.createElement(t.em,null,"Regular expression")," is a sequence of characters that satisfies a specific pattern. An example is\nemail; it contains a name, followed by “@,” which is then followed by a domain name."),"\n"),"\n",l.createElement(t.p,null,"This opens a pop-up. Select ",l.createElement(t.strong,null,"Email (1)")," as the regular expression, then click ",l.createElement(t.strong,null,"Apply (2)"),"."),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/351e32283d852fe3c2ab16146b96559d/65.jpg",alt:""}),"\n",l.createElement(t.p,null,"At this point, your Action should look like this:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/263509b76261bcc305b8d0c01ad711bd/66.png",alt:""}),"\n",l.createElement(t.p,null,"Consider that you only want to ask the end user for their email address if you don't already know\nit. Thus, as shown below, change ",l.createElement(t.strong,null,"Step 2 is taken without conditions")," to\n",l.createElement(t.strong,null,"Step 2 is taken with conditions (1)"),". Then change the default condition to: ",l.createElement(t.strong,null,"email is not defined (2)"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/3ab4456c3f4ce398b54371b5124f5f7d/67.png",alt:""}),"\n",l.createElement(t.p,null,"Now that you have set this condition, your virtual assistant will only ask the end user for their\nemail address if the virtual assistant does ",l.createElement(t.em,null,"not")," already know it."),"\n",l.createElement(t.p,null,"Add a new step - ",l.createElement(t.strong,null,"Step 3"),". As shown below, in ",l.createElement(t.strong,null,"Assistant says (1)"),", write: “What is your first\nname?” Set ",l.createElement(t.strong,null,"Define customer response")," to ",l.createElement(t.strong,null,"Free text (2)"),". Again, you only want to ask the end\nuser for their name if you don't already know their first name. Change\n",l.createElement(t.strong,null,"Step 3 is taken without conditions (3)")," to ",l.createElement(t.strong,null,"Step 3 is taken with conditions"),". Then change the condition to:\n",l.createElement(t.strong,null,"firstname is not defined"),". Step 3 should look like this:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/7c887948eacb315ffe080bbdf222620f/68.png",alt:""}),"\n",l.createElement(t.p,null,"Next, add Step 4. In this step, set ",l.createElement(t.strong,null,"Assistant says: (1)")," to “Please describe your problem or\nsituation in detail. This description will be submitted to the support team as the ticket.” Then,\n",l.createElement(t.strong,null,"Define customer response (2)")," as “Free text:”"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/8923f00ff3e73ec13140b0f6e7ca445d/69.jpg",alt:""}),"\n",l.createElement(t.p,null,"Create Step 5, and set ",l.createElement(t.strong,null,"Assistant says (1)")," to: “Creating your ticket…” Change ",l.createElement(t.strong,null,"And then (2)"),"\nfrom “Continue to next step” to “Use an extension:”"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/c27ecdaf179d9c5529cfb085c9bf3f74/70.png",alt:""}),"\n",l.createElement(t.p,null,"In the ensuing popup, select “Zendesk Ticketing” under ",l.createElement(t.strong,null,"Extension (1)")," and “Create Ticket” under\n",l.createElement(t.strong,null,"Operation (2)"),". Open the dropdown (3) menu where you set ",l.createElement(t.strong,null,"request.subject")," to something, scroll\nall the way down to the bottom, and select ",l.createElement(t.strong,null,"Expression (4)"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/555450e2f229cb88db50d9711acf34a3/71.png",alt:""}),"\n",l.createElement(t.p,null,"Choosing ",l.createElement(t.strong,null,"Expression")," now lets you type in free text ",l.createElement(t.strong,null,"(1)"),". Type in “Support ticket,” as shown in\nthe image below. Then, open the ",l.createElement(t.strong,null,"Optional parameters (2)"),", and set ",l.createElement(t.strong,null,"request.comment.body")," to\nthe response to ",l.createElement(t.strong,null,"Step 4 (3)"),". Set ",l.createElement(t.strong,null,"request.requester.name")," to the ",l.createElement(t.strong,null,"firstname (4)")," session variable.\nFinally, set ",l.createElement(t.strong,null,"request.requester.email")," to the ",l.createElement(t.strong,null,"email (5)")," session variable, and click ",l.createElement(t.strong,null,"Apply (6)"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/5ff36894c55fc72c3bd0ffecd75ee6a2/72.png",alt:""}),"\n",l.createElement(t.blockquote,null,"\n",l.createElement(t.p,null,"Note: Take care not to accidentally set ",l.createElement(t.strong,null,"request.requester.name")," to the response to ",l.createElement(t.strong,null,"Step 3"),", and\nnot to set ",l.createElement(t.strong,null,"request.requester.email")," to the response to ",l.createElement(t.strong,null,"Step 2"),"."),"\n"),"\n",l.createElement(t.p,null,"Your Action should now look like this:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/d5ec6cae8017e3ab9503e0ae8543f0bf/73.jpg",alt:""}),"\n",l.createElement(t.p,null,"There is one more thing you need to do."),"\n",l.createElement(t.p,null,"In Step 5, you pass the session variables ",l.createElement(t.strong,null,"firstname")," and ",l.createElement(t.strong,null,"email")," to the extension. These session\nvariables are where you stored the firstname and email information from HubSpot."),"\n",l.createElement(t.p,null,"However, if the end user tries to submit a support ticket with this Action when the virtual assistant\nhas not pulled in their information from the HubSpot CRM system, then those session variables\nwill be blank (also known as “undefined” or “not defined”). And while steps two and three in this\nAction ask for the email and firstname when those session variables are blank (or “undefined” /\n“not defined”), you're not using that information when you call the extension."),"\n",l.createElement(t.p,null,"We need to make sure your virtual assistant uses the responses to step two and three when the\nemail and firstname session variables are not defined. To do this, add Step 6, and\n",l.createElement(t.strong,null,"drag and drop the new step between steps three and four"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/d2f450bc417cdb93b9d459d9affe19b1/74.png",alt:""}),"\n",l.createElement(t.p,null,l.createElement(t.strong,null,"Step 6")," now becomes ",l.createElement(t.strong,null,"Step 4"),". In it,"),"\n",l.createElement(t.ol,null,"\n",l.createElement(t.li,null,"Set a condition, which will check whether both first name and email are defined."),"\n",l.createElement(t.li,null,"Set the first condition to ",l.createElement(t.strong,null,"3. What is your first name?")," is defined."),"\n",l.createElement(t.li,null,"Set the second condition to ",l.createElement(t.strong,null,"2. What is your email address? is defined"),"."),"\n"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/2e7efc50c8e62527a0f188a30b5be2b1/75.png",alt:""}),"\n",l.createElement(t.p,null,"After you finish setting up the step condition, click ",l.createElement(t.strong,null,"fx (1)")," to open the ",l.createElement(t.strong,null,"Variable values (2)")," view,\nand click ",l.createElement(t.strong,null,"Set new value + (3)"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/b110abca2379ad48f79721da9833f4f5/76.png",alt:""}),"\n",l.createElement(t.p,null,"Set the Session variable ",l.createElement(t.strong,null,"firstname (1)")," to the response to ",l.createElement(t.strong,null,"Step 3")," by following the sequence of\nclicks ",l.createElement(t.strong,null,"(2)")," and ",l.createElement(t.strong,null,"(3)")," shown below:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/6afbe0f24672dd0e32a97497fa748785/77.png",alt:""}),"\n",l.createElement(t.p,null,"Again using the sequence of clicks shown above, also set the Session variable ",l.createElement(t.strong,null,"email")," to the response\nto ",l.createElement(t.strong,null,"Step 2"),". Your Step 4 should now look like this:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/83909ad3108695127c5350152b5624e9/78.png",alt:""}),"\n",l.createElement(t.p,null,"If you do not see “2. What is your email address” in the list of action variables, this may be a bug."),"\n",l.createElement(t.p,null,"Take a moment to consider the behavior you set up in this Action\n",l.createElement(t.strong,null,"(I want to submit a support ticket)"),". When the end user invokes this Action, if the ",l.createElement(t.strong,null,"email")," and ",l.createElement(t.strong,null,"firstname")," session variables are\n",l.createElement(t.em,null,"not")," defined, the virtual assistant asks for this information in Step 2 and Step 3. In Step 4, if the\nvirtual assistant asked for, and received this information in Step 2 and Step 3, you store the\nresponses to Step 2 and Step 3 in their corresponding session variables."),"\n",l.createElement(t.p,null,"Now, this information will always be in the session variables, so the extension will always have\nthe correct email and firstname to pass to Zendesk."),"\n",l.createElement(t.p,null,"Finally, create a closing step. Position yourself on step 6 so that you add a step at the very end, and\ncreate step 7. As shown below, write ",l.createElement(t.strong,null,"(1)")," “Success! Your ticket number is ”. Then, type ",l.createElement(t.strong,null,"$")," or click\nthe ",l.createElement(t.strong,null,"insert a variable icon")," and scroll down to select the variable for ",l.createElement(t.strong,null,"body.request.id (2)")," returned\nby the Zendesk Ticketing extension in Step 6 when it created the new ticket:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/d2db805375a896cd3d31a5c3850d1b91/79.png",alt:""}),"\n",l.createElement(t.p,null,"Finish the ",l.createElement(t.strong,null,"Assistant says (1)")," section with “. A customer support representative will follow up\nwith you within the next few days.” Change ",l.createElement(t.strong,null,"And then (2)")," to “End the action.” Your Step 7\nshould look like this:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/c505fe94894f9a89f9fcbe1ad6a80bdf/80.png",alt:""}),"\n",l.createElement(t.p,null,"Fantastic work! Our action is ready to go. Remember to save it."),"\n",l.createElement(t.p,null,l.createElement(t.strong,null,"Preview the action to see your extension in action")),"\n",l.createElement(t.p,null,"Try out a conversation where you don't pull in information about yourself via HubSpot, like\nshown below. Remember to view it with the ",l.createElement(t.strong,null,"Action variables")," visible like you did earlier, so you\ncan watch them populate in real time. Enter the following utterances:"),"\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,"Say “I want to submit a support ticket”"),"\n",l.createElement(t.li,null,"Enter your email address (or any email address)"),"\n",l.createElement(t.li,null,"Enter your name (or any first name)"),"\n",l.createElement(t.li,null,"Say “I want to see how this extension works”\n(the screenshot below captures the whose single conversation)"),"\n"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/f2a189f5265501f4b231cd37e1d3a264/81.jpg",alt:""}),"\n",l.createElement(t.p,null,"Now, go and see the ticket you created in your instance of Zendesk! To do so, navigate your\nbrowser to ",l.createElement(t.strong,null,"https://{server-domain}.zendesk.com/agent/dashboard (1)"),", and view the ticket\nwith subject 'Support ticket' (2):"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/1aa59f7934b7923bebffa099fb47f65f/82.png",alt:""}),"\n",l.createElement(t.p,null,"Your ticket should have an ID of #2. Ticket ID #1 is a sample ticket created by Zendesk for you."),"\n",l.createElement(t.blockquote,null,"\n",l.createElement(t.p,null,"Note: Zendesk also sends two emails, one to the submitter of the ticket, and one to the Zendesk\nadministrator. Depending on what emails you supplied, you may see both of these in your Inbox."),"\n"),"\n",l.createElement(t.p,null,"Now, try out a conversation where you first pull in information via HubSpot and then create a\nsupport ticket via Zendesk. (Remember to first hit ",l.createElement(t.strong,null,"Refresh")," to restart the chat session.) In this\nway, you will be taking advantage of both the HubSpot and Zendesk extensions:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/f6b81a0d6517438084c23558c17a678a/83.jpg",alt:""}),"\n",l.createElement(t.p,null,"Notice how this time the assistant didn't ask for your first name or email address, since it already\nretrieved them from the HubSpot CRM system."),"\n",l.createElement(t.p,null,"Go back to your Zendesk dashboard and see the ticket you just created. (Note that you may need\nto refresh the page.) Once finished, you may now close your Zendesk browser window."),"\n",l.createElement(t.h3,{id:"debug-a-custom-extension"},l.createElement(t.a,{href:"#debug-a-custom-extension"},"Debug a custom extension")),"\n",l.createElement(t.p,null,"You've now successfully built and previewed two custom extensions. Did you notice any gaps in\nthe actions, where things could go wrong if the end user provides a certain response?"),"\n",l.createElement(t.p,null,"There are a few gaps in the Actions you built above."),"\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,"In the ",l.createElement(t.strong,null,"Authenticate me")," Action, you did not prepare an alternative response if you cannot\nfind the end user in the HubSpot CRM system."),"\n",l.createElement(t.li,null,"In the ",l.createElement(t.strong,null,"Authenticate me")," and ",l.createElement(t.strong,null,"I want to submit a support ticket")," Actions, you did not prepare\nalternative responses if the extension fails to produce a valid response from the external\nservice. For example, this might happen if your authentication tokens expired."),"\n",l.createElement(t.li,null,"The ",l.createElement(t.strong,null,"I want to submit a support ticket")," Action does not ask the end user to confirm their\nname and email before submitting the support ticket, so the end user does not have an\nopportunity to update their name and email before submitting the ticket."),"\n"),"\n",l.createElement(t.p,null,"When something goes wrong with an extension, Watson Assistant makes it easy to find the root\nof the problem using the ",l.createElement(t.strong,null,"Extension inspector")," - something this lab briefly touched upon earlier."),"\n",l.createElement(t.p,null,"The Extension inspector lets you test a custom extension, see the request it sends out and\nresponses it passes back to your Action, and debug in the Preview panel of the Actions page."),"\n",l.createElement(t.p,null,"First, let's inspect a custom extension that works properly. Run through the following\nconversation with your assistant in the Preview panel of the Actions page:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/5aeecf42fda1dc285b9b3b9e5407e5ca/84.png",alt:""}),"\n",l.createElement(t.p,null,"This extension works properly: it uses the member number provided by the end user to pull the\nend user's information from the HubSpot CRM system. Click ",l.createElement(t.strong,null,"Inspect (1)")," to open the\n",l.createElement(t.strong,null,"Extension inspector")," and see its details:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/bd2104c0f946a755a12922b4bb301392/85.png",alt:""}),"\n",l.createElement(t.p,null,"As can be seen above, the ",l.createElement(t.strong,null,"Extension inspector")," pane shows the request parameters sent ",l.createElement(t.em,null,"to")," ",l.createElement(t.strong,null,"(2)"),"\nand response properties received ",l.createElement(t.em,null,"from")," ",l.createElement(t.strong,null,"(3)")," the HubSpot API via the custom extension. While you\nonly store and use a handful of these response properties in your Action – including email,\nfirstname, lastname, and membership_status - there are many more properties passed along that\nprovide useful context."),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/4facfc68362c7d52c7fba2ebd539e194/86.png",alt:""}),"\n",l.createElement(t.p,null,"In this conversation, something went awry. While there are two error messages that make it clear\nsomething went wrong, you can also see that the virtual assistant said “Welcome, !” ",l.createElement(t.strong,null,"(1)")," The\nname that would normally come from the HubSpot CRM system is missing, which suggests\nsomething went wrong. Click ",l.createElement(t.strong,null,"Details (2)")," next to “Error in the response,” to reveal a popup of\nruntime errors affecting the Action."),"\n",l.createElement(t.p,null,"On the ensuing popup, expand the first error:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/7976a1f979f869cd135db73aed52aa66/87.png",alt:""}),"\n",l.createElement(t.p,null,"Depending on your ability to parse technical jargon, you may or may not be able to understand\nthese error messages. That's okay - Watson Assistant's Extension inspector will lay it all out in\neasy-to-understand terms."),"\n",l.createElement(t.p,null,"Close the runtime errors pop-up. Now click ",l.createElement(t.strong,null,"Inspect (1)")," next to “Extension error.” What do you\nsee? It looks like the body of the response is completely blank ",l.createElement(t.strong,null,"(2)")," – and the success response\nproperty is ",l.createElement(t.strong,null,"false (3)"),". This means that HubSpot was unable to find a contact with ID 46. You may\nrecall from earlier that your HubSpot CRM system has no Contact with an ID of 46."),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/176f1e83f75812dde2896202a79820ac/88.jpg",alt:""}),"\n",l.createElement(t.p,null,"You can also open the ",l.createElement(t.strong,null,"Advanced")," tab of the Extension inspector (not shown) to see the request\nand response for this extension in raw form."),"\n",l.createElement(t.p,null,"You could fix this end user's problem by adding a Contact record to HubSpot with ID 46. But\nthat's not a scalable solution for others entering a non-existent member number."),"\n",l.createElement(t.p,null,"Let's fix this problem in the virtual assistant instead."),"\n",l.createElement(t.ol,null,"\n",l.createElement(t.li,null,"Click ",l.createElement(t.strong,null,"Authenticate me recognized")," in the Preview panel to open the Action."),"\n",l.createElement(t.li,null,"Click on ",l.createElement(t.strong,null,"step 3"),"."),"\n",l.createElement(t.li,null,"Add a condition to step three, so select ",l.createElement(t.strong,null,"with conditions"),"."),"\n",l.createElement(t.li,null,"Step 3 should execute when the extension runs successfully, so select ",l.createElement(t.strong,null,"If Ran successfully"),"."),"\n",l.createElement(t.li,null,"Your final condition should state ",l.createElement(t.strong,null,"2 Ran successfully == true"),"."),"\n"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/00816d6b863778b369a053cff9f68418/89.png",alt:""}),"\n",l.createElement(t.p,null,"Now you will only greet the end user by name if the extension succeeds in getting their name and\nother information from HubSpot. Let's also add a step that will be taken when the extension fails\nto find the end user's information:"),"\n",l.createElement(t.ol,null,"\n",l.createElement(t.li,null,"Create a new step 4."),"\n",l.createElement(t.li,null,"Include the condition that ",l.createElement(t.strong,null,"2 Ran successfully == false"),"."),"\n",l.createElement(t.li,null,"Set ",l.createElement(t.strong,null,"Assistant says")," to “Unfortunately, I was not able to pull in your information. Would you\nlike to try again?”"),"\n",l.createElement(t.li,null,l.createElement(t.strong,null,"Define customer response")," as ",l.createElement(t.strong,null,"Confirmation"),", which allows the end user to select ",l.createElement(t.em,null,"yes")," or ",l.createElement(t.em,null,"no"),":"),"\n"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/b120904df6a6a8bcf10a0c56eb941126/90.jpg",alt:""}),"\n",l.createElement(t.p,null,"Next, add a step for when the user selects “yes” in the previous step, so that they can try entering\ntheir Lendyr member number again:"),"\n",l.createElement(t.ol,null,"\n",l.createElement(t.li,null,"Create a new step 5."),"\n",l.createElement(t.li,null,"Add the condition that ",l.createElement(t.strong,null,"4. Unfortunately, I was … is Yes"),"."),"\n",l.createElement(t.li,null,"Change ",l.createElement(t.strong,null,"Assistant says")," to “Okay –”"),"\n",l.createElement(t.li,null,"Change ",l.createElement(t.strong,null,"And then")," to Re-ask previous step(s)."),"\n"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/c40cba091c473bec4da56731ca1a4191/91.png",alt:""}),"\n",l.createElement(t.p,null,"Select all the checkboxes, so that your assistant will re-ask all action steps, then click ",l.createElement(t.strong,null,"Apply"),":"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/3837cabb156d9a7f64a0ba87a2051348/92.png",alt:""}),"\n",l.createElement(t.p,null,"Finally, add step 6 for when the users selects “no” in step 4:"),"\n",l.createElement(t.ol,null,"\n",l.createElement(t.li,null,"Click **New step + **."),"\n",l.createElement(t.li,null,"Add the condition that ",l.createElement(t.strong,null,"4. Unfortunately, I was … is No"),"."),"\n",l.createElement(t.li,null,"Change ",l.createElement(t.strong,null,"Assistant says")," to “Alright. What else can I help you with today?”"),"\n",l.createElement(t.li,null,"Change ",l.createElement(t.strong,null,"And then")," to ",l.createElement(t.strong,null,"End the action"),"."),"\n"),"\n",l.createElement(t.p,null,"Your Action should now look like this:"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/c46ac22e6a81cba4271c3c89641a760d/93.png",alt:""}),"\n",l.createElement(t.p,null,"Nicely done! Save your Action, open the Preview panel, refresh the Preview panel, and try out\nthis conversation again. ",l.createElement(t.em,null,"In this scenario, the end user chooses to try again"),":\\"),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/cd67ee41279ce9f0308be8b65f087c69/94.jpg",alt:""}),"\n",l.createElement(t.p,null,"Hit refresh again and try this. ",l.createElement(t.em,null,"In this scenario, the end user chooses not to try again"),"."),"\n",l.createElement(t.img,{src:"/VAD-VAR-Workshop/d129622948c8c0f77901b33afdbbdaf4/95.png",alt:""}),"\n",l.createElement(t.p,null,"Congratulations! You now know how to use the Extension inspector to test, understand, and\ndebug your extensions and the Actions that use them."),"\n",l.createElement(t.h2,{id:"closing-thoughts"},l.createElement(t.a,{href:"#closing-thoughts"},"Closing thoughts")),"\n",l.createElement(t.h3,{id:"whats-the-value-of-custom-extensions"},l.createElement(t.a,{href:"#whats-the-value-of-custom-extensions"},"What's the value of custom extensions?")),"\n",l.createElement(t.p,null,"Custom extensions eliminate the need for a developer to create a proxy or a layer of middleware\nbetween their virtual assistant and other APIs. Developers can connect the virtual assistant\ndirectly to an API via an extension."),"\n",l.createElement(t.p,null,"Builders can then use those extensions in Actions to pull in new information or push out\ninformation the assistant has gathered, all without writing any code. They can also test and debug\ntheir extensions independently in Watson Assistant without the need to access other APIs."),"\n",l.createElement(t.p,null,"What does this mean for a product manager overseeing a virtual assistant project? Their\ndevelopers don't need to spend any time building out a custom services orchestration engine\n(SOE) to connect the virtual assistant to external services - they can connect the virtual assistant\ndirectly via custom extensions, and they can easily update and maintain their extensions over\ntime. Their builders can then use, test, and debug extensions in the build experience without the\nassistance of a developer. The builders are no longer blocked by the availability of a developer to\nwrite integrations into conversational flows, and they can staff their team with ",l.createElement(t.em,null,"non-technical"),"\nbuilders precisely because they don't need to write any code to build complex, integrated, realworld conversational flows."),"\n",l.createElement(t.p,null,"In short, extensions combine the power of integrating with an API with ease of use for\ndevelopers and builders alike - driving down time to value and total cost of ownership."),"\n",l.createElement(t.h3,{id:"what-about-webhooks"},l.createElement(t.a,{href:"#what-about-webhooks"},"What about webhooks?")),"\n",l.createElement(t.p,null,"If you are a more technical person, you might know that a development team generally has two\noptions to connect their application to the external world: ",l.createElement(t.strong,null,"webhooks")," and\n",l.createElement(t.strong,null,"calling an external API"),". Custom extensions allow builders and developers to call external APIs in Watson Assistant.\nWhat about webhooks?"),"\n",l.createElement(t.p,null,"Developers typically set up webhooks in Watson Assistant when they control both Watson\nAssistant ",l.createElement(t.em,null,"and")," the API or external service they want to connect it to. The advanced and expert\nseries of this lab will discuss using webhooks with Watson Assistant."))}var s=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,a.ah)(),e.components);return t?l.createElement(t,e,l.createElement(o,e)):o(e)};var r=n(7315),i=n(2125),c=n(1753),u=n(4690);const m={table:c.y6,a:c.IW,blockquote:c.R4,SubHeader:c.bU,img:c.fb},h=e=>{const{data:{mdx:{tableOfContents:{items:t},frontmatter:{toc:n=!0}}},children:o}=e,s=(0,l.useRef)(null),{0:c,1:u}=(0,l.useState)("");return(0,l.useEffect)((()=>{if(!s.current)return;const e=s.current.querySelectorAll("h2,h3,h4,h5"),t=new IntersectionObserver((e=>{e.forEach((e=>{e.isIntersecting&&u(e.target.id)}))}),{rootMargin:"0px 0px -95% 0px",threshold:0});return e.forEach((e=>{t.observe(e)})),()=>t.disconnect()}),[]),l.createElement(l.Fragment,null,l.createElement("article",{className:r.Y,ref:s},l.createElement(a.Zo,{components:{...m}},o)),(null===n||n)&&t&&l.createElement(i.Z,{itemsList:t,maxDepth:1,currSection:c}))},p=e=>{const{location:{pathname:t},data:{mdx:{frontmatter:{title:n},tableOfContents:{items:a}}}}=e;return l.createElement(u.Z,{pathname:t,title:n||a[0].title||void 0})};function d(e){return l.createElement(h,e,l.createElement(s,e))}}}]);
//# sourceMappingURL=component---src-pages-mdx-fields-slug-tsx-content-file-path-content-watson-105-md-a7160b1f3e745e1f5be7.js.map