{"version":3,"file":"component---src-pages-mdx-fields-slug-tsx-content-file-path-content-instana-101-es-md-2099b989181e406e1f2b.js","mappings":"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","sources":["webpack://vad-var-site/./content/Instana/101.es.md","webpack://vad-var-site/./src/pages/{mdx.fields__slug}.tsx","webpack://vad-var-site/./src/components/MDXWrapper/MDXWrapper.tsx","webpack://vad-var-site/./src/components/MDXWrapper/index.ts","webpack://vad-var-site/./src/components/SEO.tsx","webpack://vad-var-site/./src/components/TableOfContents/TableOfContents.tsx","webpack://vad-var-site/./src/components/TableOfContents/index.ts","webpack://vad-var-site/./src/components/TableOfContents/TableOfContents.module.scss","webpack://vad-var-site/./src/styles/pages/{mdx.fields__slug}.module.scss","webpack://vad-var-site/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    section: \"section\",\n    h1: \"h1\",\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    ol: \"ol\",\n    li: \"li\",\n    img: \"img\",\n    strong: \"strong\",\n    em: \"em\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"1\",\n    \"aria-labelledby\": \"101-interfaz-de-usuario-iu-de-instana\"\n  }, React.createElement(_components.h1, {\n    id: \"101-interfaz-de-usuario-iu-de-instana\"\n  }, \"101: Interfaz de Usuario (IU) de Instana\"), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"objetivo\"\n  }, React.createElement(_components.h2, {\n    id: \"objetivo\"\n  }, React.createElement(_components.a, {\n    href: \"#objetivo\"\n  }, \"Objetivo\")), \"\\n\", React.createElement(_components.p, null, \"El objetivo de este laboratorio es ayudar a explorar / familiarizarse con algunas capacidades clave disponibles a través de la interfaz de usuario de Instana, específicamente el monitoreo de Kubernetes y servicios.\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"iniciar-sesión-en-la-interfaz-de-usuario\"\n  }, React.createElement(_components.h2, {\n    id: \"iniciar-sesión-en-la-interfaz-de-usuario\"\n  }, React.createElement(_components.a, {\n    href: \"#iniciar-sesión-en-la-interfaz-de-usuario\"\n  }, \"Iniciar sesión en la interfaz de usuario\")), \"\\n\", React.createElement(_components.p, null, \"Por coherencia del laboratorio, utilizaremos un ambiente compartido de sólo lectura ubicado en: \", React.createElement(_components.a, {\n    href: \"https://play-with.instana.io\"\n  }, \"https://play-with.instana.io\")), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Se le pedirá que dé una dirección de correo electrónico para obtener acceso al espacio virtual. Escriba la dirección de su trabajo o cualquier otra dirección que le parezca bien compartir.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684690533688.3508862451/image-001-signup.png\",\n    alt: \"\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Una vez completado, debería ver la vista predeterminada del panel de Play-With-Instana\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684690533692.351862452/image-002-dashboard.png\",\n    alt: \"\"\n  }), \"\\n\"), \"\\n\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"exploración-de-la-vista-de-infraestructura\"\n  }, React.createElement(_components.h2, {\n    id: \"exploración-de-la-vista-de-infraestructura\"\n  }, React.createElement(_components.a, {\n    href: \"#exploración-de-la-vista-de-infraestructura\"\n  }, \"Exploración de la vista de infraestructura\")), \"\\n\", React.createElement(_components.p, null, \"Ahora que ha iniciado sesión en el sandbox, vamos a dedicar un poco de tiempo a examinar la vista \", React.createElement(_components.strong, null, \"Infrastructure\"), \" siguiendo los siguientes pasos:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Haga clic en el icono \", React.createElement(_components.em, null, React.createElement(_components.strong, null, \"Infrastructure\")), \" situado a la izquierda del panel de navegación.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684690533692.351862454/image-004-explore-infra.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Observe la visualización en 3D de los distintos componentes de su infraestructura.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Esta vista ofrece una visión general de todos los sistemas monitorizados, agrupados en zonas de rectángulos 3D (tridimensionales)\"), \"\\n\", React.createElement(_components.p, null, \"Desde la vista de pájaro, cada zona consiste de pilares, y cada pilar representa un agente de Instana ejecutándose en un sistema respectivo.\\nEn la imagen de ejemplo anterior y en su sandbox, los pilares representan nodos trabajadores para un cluster GKE Kubernetes.\"), \"\\n\", React.createElement(_components.p, null, \"Instana es capaz de visualizar toda esta información gracias al gráfico dinámico y su compatibilidad con más de 250 tecnologías de sensores.\"), \"\\n\", React.createElement(_components.p, null, \"Al hacer zoom en el pilar, se pueden ver las cajas más pequeñas \", React.createElement(_components.em, null, \"(cajas de pizza)\"), \" que componen el pilar general más grande. Cada una de estas cajas más pequeñas representa una entidad o una tecnología de sensor que Instana ha descubierto y está monitorizando; Instana no sólo monitoriza cada entidad sino que también proporciona información asociada, representada como una pequeña pila, como la tecnología utilizada para una entidad dada.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684690533708.3518862458/image-008-stack.png\",\n    alt: \"\"\n  }), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"filtrado\"\n  }, React.createElement(_components.h2, {\n    id: \"filtrado\"\n  }, React.createElement(_components.a, {\n    href: \"#filtrado\"\n  }, \"Filtrado\")), \"\\n\", React.createElement(_components.p, null, \"En ambientes virtuales grandes, puede ser difícil encontrar el servidor o la zona que está buscando. Afortunadamente, hay varias formas de buscar dentro de la vista \", React.createElement(_components.em, null, \"Infrastructure\"), \".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684690533692.351862455/image-005-filter.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Imagine que está monitorizando cientos de servicios, servidores y puntos finales. Mientras que Instana, sería capaz de ofrecer fácilmente la observabilidad para todos ellos, sería demasiado si sólo estás buscando servicios o servidores con altos ciclos de CPU.\"), \"\\n\", React.createElement(_components.p, null, \"La respuesta a este problema es cambiar la vista utilizando los iconos de Vista de etiquetas, Vista de métricas agregadas, Vista de métricas y 3D, y alternar entre tablas. En este caso, exploraremos la vista Métrica.\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"vista-de-métricas\"\n  }, React.createElement(_components.h2, {\n    id: \"vista-de-métricas\"\n  }, React.createElement(_components.a, {\n    href: \"#vista-de-métricas\"\n  }, \"Vista de métricas\")), \"\\n\", React.createElement(_components.p, null, \"Estas vistas de métricas permiten ver fácilmente las métricas útiles como parte de la vista más amplia de la infraestructura.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Estas vistas de métricas permiten ver fácilmente las métricas útiles como parte de la vista más amplia de la infraestructura.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Cicle a través de todas las diferentes métricas\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"CPU Load\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"CPU Usage\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Free Memory\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Para restablecer la vista de métricas y volver a la vista de componentes, haga clic en el icono de métricas y seleccione reset en la esquina inferior derecha.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684690533704.3516862456/image-006-metrics.gif\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, React.createElement(_components.strong, null, \"Observación\"), \": En la vista de métricas, el icono de métricas se resaltará mientras haya una métrica seleccionada para recordarle que está activada.\")), \"\\n\", React.createElement(_components.p, null, \"Además de las opciones proporcionadas en la leyenda de abajo a la derecha, Instana también hace uso del lenguaje de búsqueda \", React.createElement(_components.em, null, \"lucene\"), \" en la barra de filtro/búsqueda en la parte de arriba de la página mientras estamos en la vista de Infraestructura. Podemos hacer uso de esta barra de búsqueda para filtrar entidades y profundizar en servicios o puntos finales específicos. Antes de iniciar la búsqueda, sitúe el cursor sobre una de las torres e identifique el nombre de host de uno de los servidores. Por ejemplo \", React.createElement(_components.code, null, \"geke.<nombre de host completo>\"), \".\"), \"\\n\"), \"\\n\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"consulta--búsqueda\"\n  }, React.createElement(_components.h2, {\n    id: \"consulta--búsqueda\"\n  }, React.createElement(_components.a, {\n    href: \"#consulta--búsqueda\"\n  }, \"Consulta / Búsqueda\")), \"\\n\", React.createElement(_components.p, null, \"Probemos una consulta buscando un host específico\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Haga clic en la barra de filtros y seleccione \\\"Entity\\\".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"En la lista desplegable, escriba \", React.createElement(_components.em, null, \"host\"), \" y verá la lista filtrada a \\\"host\\\". Una vez que vea la única entrada, seleccione host.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Debería ver \", React.createElement(_components.em, null, \"entity.host.name:\"), \". Después del \\\":\\\", puedes hacer una búsqueda con comodines. Por ejemplo, \\\"entidad.nombre.host:\", React.createElement(_components.em, null, \"abc\"), \"\\\". Escriba una cadena de caracteres comodín que coincida con el principio del nombre de host que desea buscar. Especificaremos \\\"entity.host.name:*gke*\\\" para filtrar sólo los servidores GKE.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Una vez que haya especificado el filtro, verá que la vista de la infraestructura se filtra a sólo un conjunto de servidores GKE que coincide con su búsqueda.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"A continuación vamos a escribir otra consulta para filtrar las entidades dentro de una zona específica. Escriba \\\"entity.zone:*\", React.createElement(_components.em, null, \"eu\"), \"*\\\" como la búsqueda de consulta y observe que ya no vemos los servidores GKE, sino sólo una única entidad AWS ubicada en la zona \", React.createElement(_components.code, null, \"eu\"), \".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684690533704.3516862457/image-007-query.png\",\n    alt: \"\"\n  }), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, React.createElement(_components.strong, null, \"Observación\"), \": el filtro de búsqueda acepta muchas consultas diferentes, incluidas las condiciones AND, OR y NOT. Puede encontrar más información sobre el lenguaje de consulta lucene aquí (\", React.createElement(_components.a, {\n    href: \"https://www.ibm.com/docs/en/instana-observability/current?topic=instana-filtering-dynamic-focus\"\n  }, \"https://www.ibm.com/docs/en/instana-observability/current?topic=instana-filtering-dynamic-focus\"), \")\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"6\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Borre el filtro de la parte superior de la página haciendo clic en la \", React.createElement(_components.em, null, \"x\"), \" antes de pasar a la etapa siguiente.\"), \"\\n\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"gráfico-de-dependencia\"\n  }, React.createElement(_components.h2, {\n    id: \"gráfico-de-dependencia\"\n  }, React.createElement(_components.a, {\n    href: \"#gráfico-de-dependencia\"\n  }, \"Gráfico de dependencia\")), \"\\n\", React.createElement(_components.p, null, \"Ahora echemos un vistazo a otra característica clave de Instana, el descubrimiento automatizado de dependencias gracias en parte a la característica Dynamic Graph que forma parte de Instana.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Para empezar, seleccione el icono Aplicaciones en el menú de navegación de la izquierda\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684690533708.3518862461/image-011-app-menu.png\",\n    alt: \"\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"A continuación seleccione \", React.createElement(_components.code, null, \"robot-shop with frontend\"), \" de la lista de aplicaciones disponibles, una vez completado debería tener una vista de la aplicación por default como la que se muestra a continuación. A continuación, seleccione la pestaña \", React.createElement(_components.code, null, \"Dependencies\"), \" tab\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684690533712.352862462/image-012-dep-menu.png\",\n    alt: \"\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Vea las dependencias de las aplicaciones de la tienda robótica descubiertas por Instana. Las llamadas entre servicios y puntos finales se representan mediante líneas, y el tráfico en directo se representa visualmente como puntos en movimiento a lo largo de la conexión.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"🟢 \", React.createElement(_components.img, {\n    src: \"/1684690533712.352862463/image-013-dep-tab.png\",\n    alt: \"d\"\n  })), \"\\n\", React.createElement(_components.ol, {\n    start: \"4\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Al visualizar un servicio específico para su aplicación, observe que las conexiones a otros servicios aparecen oscurecidas, lo que le permite centrarse en el servicio o las conexiones que le interesa investigar.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"🟢 \", React.createElement(_components.img, {\n    src: \"/1684690533716.3523862464/image-014-dep-highlight.png\",\n    alt: \"d\"\n  }))));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/VAD-VAR-Workshop/VAD-VAR-Workshop/content/Instana/101.es.md\";\nimport React, {useRef, useState} from 'react';\nimport cx from 'classnames';\nimport SEO from '@components/SEO';\nimport PageHeader from '@components/PageHeader';\nimport MDXWrapper from '@components/MDXWrapper';\nimport ContentWrapper from '@components/ContentWrapper';\nimport TableOfContents from '@components/TableOfContents';\nimport * as styles from '@styles/pages/{mdx.fields__slug}.module.scss';\nconst Content = props => {\n  const {data: {mdx: {tableOfContents: {items: tocItems}, frontmatter: {toc = true, title, timeToComplete, updated}}}, children} = props;\n  const articleRef = useRef(null);\n  const {0: currSection} = useState('');\n  const showToc = (toc === null ? true : toc) && tocItems;\n  return React.createElement(React.Fragment, null, React.createElement(PageHeader, {\n    timeToComplete,\n    updated\n  }, tocItems[0].title || title || ''), React.createElement(ContentWrapper, {\n    className: styles.wrapper\n  }, React.createElement(\"article\", {\n    className: cx(styles.article, !showToc && styles.noToc),\n    ref: articleRef\n  }, React.createElement(MDXWrapper, {\n    components: {\n      h1: () => null\n    }\n  }, children)), showToc && React.createElement(TableOfContents, {\n    itemsList: tocItems,\n    maxDepth: 2,\n    currSection: currSection\n  })));\n};\nconst pageQuery = \"3587680389\";\nexport const Head = props => {\n  const {location: {pathname}, data: {mdx: {frontmatter: {title}, tableOfContents: {items}}}} = props;\n  return React.createElement(SEO, {\n    pathname,\n    title: title || items[0].title || undefined\n  });\n};\nContent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Content, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React, { memo } from 'react';\nimport { MDXProvider } from '@mdx-js/react';\nimport { Props } from '@mdx-js/react/lib';\nimport {\n  BlockQuote,\n  CodeBlock,\n  ImageWrapper,\n  QuizAlert,\n  SmartLink,\n  SubHeader,\n  TableWrapper\n} from '../replacements';\n\ninterface MDXWrapperProps {\n  children: React.ReactNode;\n  components?: Props['components'];\n}\n\nconst standardComponents: Props['components'] = {\n  table: TableWrapper,\n  a: SmartLink,\n  blockquote: BlockQuote,\n  SubHeader: SubHeader,\n  img: ImageWrapper,\n  code: CodeBlock,\n  QuizAlert: QuizAlert\n};\n\nconst MDXWrapper = memo(function MDXWrapper({ children, components = {} }: MDXWrapperProps) {\n  return (\n    <MDXProvider\n      components={{\n        ...standardComponents,\n        ...components\n      }}>\n      {children}\n    </MDXProvider>\n  );\n});\n\nexport default MDXWrapper;\n","import MDXWrapper from './MDXWrapper';\n\nexport default MDXWrapper;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useSiteMetadata from '@hooks/useSiteMetaData';\n\ninterface SEOProps {\n  title?: string;\n  description?: string;\n  pathname?: string;\n  children?: React.ReactNode;\n}\n\nconst SEO = (props: SEOProps) => {\n  const { title, description, pathname, children } = props;\n  const { description: defDescription, title: defTitle, origin } = useSiteMetadata();\n  const {\n    i18n: { language }\n  } = useTranslation();\n\n  const seo = {\n    title: title || defTitle,\n    description: description || defDescription,\n    url: `${origin}${pathname || ''}`\n  };\n\n  return (\n    <>\n      <html lang={language} />\n      <link\n        rel='icon'\n        href=\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='0.9em' font-size='90'>🦺</text></svg>\"\n      />\n      <title>{seo.title}</title>\n      <link rel='canonical' href={seo.url} />\n      <meta name='description' content={seo.description} />\n\n      <meta property='og:title' content={seo.title} />\n      <meta property='og:url' content={seo.url} />\n      <meta property='og:type' content='website' />\n      <meta property='og:description' content={seo.description} />\n\n      <meta name='twitter:card' content='summary' />\n      <meta name='twitter:title' content={seo.title} />\n      <meta name='twitter:url' content={seo.url} />\n      <meta name='twitter:description' content={seo.description} />\n      <meta name='twitter:site' content={'https://www.ibm.com'} />\n      <meta name='twitter:creator' content={'@IBM'} />\n      {children}\n    </>\n  );\n};\n\nexport default SEO;\n","import React, { useMemo } from 'react';\nimport { Link as GatsbyLink } from 'gatsby';\nimport cx from 'classnames';\nimport useCurrentHeading from '@hooks/useCurrentHeading';\nimport * as styles from './TableOfContents.module.scss';\n\ninterface TableOfContentsProps {\n  itemsList: TOCItem[];\n  currSection: string | undefined;\n  maxDepth?: number;\n}\n\ninterface TOCItem {\n  title: string;\n  url: string;\n  items?: TOCItem[];\n}\n\ninterface FlatTOCItem extends Omit<TOCItem, 'items'> {\n  depth: number;\n}\n\nconst flattenTOC = (toc: TOCItem[], flatList: FlatTOCItem[] = [], depth = 0): FlatTOCItem[] => {\n  toc.forEach((item) => {\n    const { title, url, items } = item;\n    flatList.splice(flatList.length, 0, {\n      depth,\n      title,\n      url\n    });\n\n    if (items && items.length > 0) flattenTOC(items, flatList, depth + 1);\n  });\n\n  return flatList;\n};\n\nconst TableOfContents = (props: TableOfContentsProps) => {\n  const { itemsList } = props;\n\n  const flatTOC = useMemo(() => flattenTOC(itemsList[0].items || []), [itemsList]);\n\n  const currentSection = useCurrentHeading('h1[id],h2[id]', {\n    threshold: [0, 1],\n    rootMargin: `-${styles.headerHeight} 0px -90% 0px`\n  });\n\n  if (flatTOC.length < 1) return null;\n\n  return (\n    <nav className={styles.toc}>\n      <div className={styles.tocStack}>\n        <h6 className={styles.tocHeader}>\n          <GatsbyLink to='#' replace>\n            On this page\n          </GatsbyLink>\n        </h6>\n\n        {flatTOC.map(({ title, url }, index) => {\n          return (\n            <a\n              className={cx(styles.link, currentSection === url.substring(1) && styles.activeItem)}\n              key={index}\n              href={url}>\n              {title}\n            </a>\n          );\n        })}\n      </div>\n    </nav>\n  );\n};\n\nexport default TableOfContents;\n","import TableOfContents from './TableOfContents';\n\nexport default TableOfContents;\n","// extracted by mini-css-extract-plugin\nexport var activeItem = \"TableOfContents-module--activeItem--3869f\";\nexport var headerHeight = \"48px\";\nexport var link = \"TableOfContents-module--link--b292b\";\nexport var toc = \"TableOfContents-module--toc--54d35\";\nexport var tocHeader = \"TableOfContents-module--tocHeader--05956\";\nexport var tocStack = \"TableOfContents-module--tocStack--90609\";","// extracted by mini-css-extract-plugin\nexport var article = \"{mdx-fields__slug}-module--article--e3d5a\";\nexport var noToc = \"{mdx-fields__slug}-module--noToc--82387\";\nexport var wrapper = \"{mdx-fields__slug}-module--wrapper--58e72\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","section","h1","h2","a","p","ol","li","img","strong","em","code","_provideComponents","components","React","className","id","href","src","alt","start","wrapper","MDXLayout","Content","data","mdx","tableOfContents","items","tocItems","frontmatter","toc","title","timeToComplete","updated","children","articleRef","useRef","currSection","useState","showToc","PageHeader","ContentWrapper","styles","cx","ref","MDXWrapper","TableOfContents","itemsList","maxDepth","Head","location","pathname","SEO","undefined","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","standardComponents","table","TableWrapper","SmartLink","blockquote","BlockQuote","SubHeader","ImageWrapper","CodeBlock","QuizAlert","memo","_ref","MDXProvider","description","defDescription","defTitle","origin","useSiteMetadata","i18n","language","useTranslation","seo","url","lang","rel","name","content","property","flattenTOC","flatList","depth","forEach","item","splice","length","flatTOC","useMemo","currentSection","useCurrentHeading","threshold","rootMargin","GatsbyLink","to","replace","map","index","substring","key","article","noToc","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}