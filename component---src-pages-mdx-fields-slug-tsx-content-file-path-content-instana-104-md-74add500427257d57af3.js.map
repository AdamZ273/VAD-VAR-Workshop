{"version":3,"file":"component---src-pages-mdx-fields-slug-tsx-content-file-path-content-instana-104-md-74add500427257d57af3.js","mappings":"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","sources":["webpack://vad-var-site/./content/Instana/104.md","webpack://vad-var-site/./src/pages/{mdx.fields__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    img: \"img\",\n    em: \"em\",\n    strong: \"strong\",\n    ol: \"ol\",\n    li: \"li\",\n    code: \"code\"\n  }, _provideComponents(), props.components), {SubHeader} = _components;\n  if (!SubHeader) _missingMdxReference(\"SubHeader\", true);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, {\n    id: \"104-alerting-and-synthetics\"\n  }, \"104: Alerting and Synthetics\"), \"\\n\", React.createElement(SubHeader, {\n    timeToComplete: props.pageContext.frontmatter.timeToComplete,\n    updated: props.pageContext.frontmatter.updated\n  }), \"\\n\", React.createElement(_components.h2, {\n    id: \"alerting\"\n  }, React.createElement(_components.a, {\n    href: \"#alerting\"\n  }, \"Alerting\")), \"\\n\", React.createElement(_components.p, null, \"Instana currently supports 13 technologies for \", React.createElement(_components.a, {\n    href: \"https://www.ibm.com/docs/en/instana-observability/current?topic=apis-alerting#alerting-integrations\"\n  }, \"alert channels\"), \".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1683140665336.35161589438/supported-channels.png\",\n    alt: \"Instana supported alert channels\"\n  }), \"\\n\", React.createElement(_components.h2, {\n    id: \"adding-slack-as-an-alert-channel\"\n  }, React.createElement(_components.a, {\n    href: \"#adding-slack-as-an-alert-channel\"\n  }, \"Adding \", React.createElement(_components.em, null, \"Slack\"), \" as an alert channel\")), \"\\n\", React.createElement(_components.p, null, \"In order to create alerts, we first need to create an alert channel. This is a simple process that involves adding an incoming webhook to \", React.createElement(_components.em, null, \"Slack\"), \" for a specific \", React.createElement(_components.em, null, \"Slack\"), \" channel. To avoid having each person create a new channel, we will just use an existing one for this lab.\"), \"\\n\", React.createElement(_components.p, null, \"Everyone please join the \", React.createElement(_components.strong, null, \"#alert-lab\"), \" channel in \", React.createElement(_components.em, null, \"Slack\"), \".\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"sending-specific-events-to-the-channel\"\n  }, React.createElement(_components.a, {\n    href: \"#sending-specific-events-to-the-channel\"\n  }, \"Sending specific events to the channel\")), \"\\n\", React.createElement(_components.p, null, \"Now that the channel has been created, we can proceed to decide which alerts we want to push to \", React.createElement(_components.em, null, \"Slack\"), \". For this demo we will push all robot-shop warning issues to the \", React.createElement(_components.em, null, \"Slack\"), \" channel.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"In the left-hand navigation sidebar, click on the \", React.createElement(_components.strong, null, \"Settings\"), \" section.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"In \", React.createElement(_components.strong, null, \"Settings\"), \" page, on the left-hand navigation sidebar, click on the \", React.createElement(_components.em, null, \"Alerts\"), \" section which is just above the Alert Channels. Then click on the \", React.createElement(_components.strong, null, \"New Alert\"), \" field\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"For the name use this pattern, \", React.createElement(_components.code, null, \"<your-name>-slack\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Under \", React.createElement(_components.strong, null, \"Events\"), \", choose on the \", React.createElement(_components.strong, null, \"Alert on Event Type(s)\"), \" option, and then toggle all of the options. This will allow us to showcase how different events show up in \", React.createElement(_components.em, null, \"Slack\"), \".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1683140665332.35131589435/create-alert.png\",\n    alt: \"Create Slack alert\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Under \", React.createElement(_components.strong, null, \"Scope\"), \", choose the \", React.createElement(_components.strong, null, \"Application Perspective\"), \" option, and then select the \", React.createElement(_components.strong, null, \"Add Application Perspectives\"), \" option. Then \", React.createElement(_components.strong, null, \"Select All\"), \" of the options.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Note: If you are using Instana to observe multiple applications, you can add alerts from multiple different applications at once, or you can create multiple alerts, one for each perspective.\")), \"\\n\", React.createElement(_components.img, {\n    src: \"/1683140665328.35131589434/app-perspective.png\",\n    alt: \"App perspective\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Under Alert Channels, select \", React.createElement(_components.strong, null, \"lab-4\"), \", then click \", React.createElement(_components.strong, null, \"Create\"), \". This channel will allow Instana to post to the \", React.createElement(_components.strong, null, \"#alert-lab\"), \" \", React.createElement(_components.em, null, \"Slack\"), \" channel.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"That's it! Now as events are generated from Instana, they will be pushed to the \", React.createElement(_components.em, null, \"Slack\"), \" channel. This powerful, flexible alerting method allows for need specific alerting, such as using different \", React.createElement(_components.em, null, \"Slack\"), \" channels for alerts of different severity, or even paging out developers from PagerDuty for critical issues.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"synthetics\"\n  }, React.createElement(_components.a, {\n    href: \"#synthetics\"\n  }, \"Synthetics\")), \"\\n\", React.createElement(_components.p, null, \"Synthetics are brand new in Instana! They allow for simulated user experiences in your application, and monitoring for various performance characteristics.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Note: Synthetics are only available in a SaaS instance, not on-prem.\")), \"\\n\", React.createElement(_components.p, null, \"For this section we will be creating synthetics to monitor our application. In order to create a synthetic test, you must first have a Point of Presence (PoP) installed and running. Multiple PoPs can be deployed to clusters in various geographic regions to simulate user experience for those regions. Instructions for deploying PoPs can be found \", React.createElement(_components.a, {\n    href: \"https://www.ibm.com/docs/en/instana-observability/current?topic=beta-pop-deployment\"\n  }, \"here.\"), \" This is out of scope for this lab, and we will be using an existing PoP already registered in the Instana dashboard.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"In the Instana SaaS instance (\", React.createElement(_components.a, {\n    href: \"https://mintgreen-edge0vfurg.instana.io/#/home\"\n  }, \"https://mintgreen-edge0vfurg.instana.io/#/home\"), \") navigate to \", React.createElement(_components.strong, null, \"Synthetic Monitoring\"), \" in the left-hand side navigation, and click on \", React.createElement(_components.strong, null, \"Create New Test\"), \".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1683140665340.35161589440/synthetic-create.png\",\n    alt: \"Synthetic create\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"To get familiar with the functionality, we will create a ping synthetic.\"), \"\\n\", React.createElement(_components.p, null, \"Under \", React.createElement(_components.strong, null, \"Step 2: Request Details\"), \" add \", React.createElement(_components.a, {\n    href: \"https://web-np-robot-shop.apps.ocp-50ackdta3c-eaxi.cloud.techzone.ibm.com/\"\n  }, \"https://web-np-robot-shop.apps.ocp-50ackdta3c-eaxi.cloud.techzone.ibm.com/\"), \" for the URL, and choose \", React.createElement(_components.strong, null, \"synthetic-dc\"), \" as the Point of Presence. Click Next.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1683140665332.35131589436/dc-pop.png\",\n    alt: \"Add DC PoP\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"For Frequency choose 1 Minute, and then click next.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1683140665340.35161589439/syn-timing.png\",\n    alt: \"Synthetic timing\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Name your synthetic using this pattern \", React.createElement(_components.code, null, \"<your name>-synthetic\"), \", and provide an optional description. Check \", React.createElement(_components.strong, null, \"All Services\"), \" and then click the \", React.createElement(_components.strong, null, \"Create\"), \" button.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1683140665336.35161589437/karsten-synthetic.png\",\n    alt: \"create synthetic ping test\"\n  }), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"You can now view your synthetic test analytics and metrics under the \", React.createElement(_components.strong, null, \"Tests\"), \" list\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/VAD-VAR-Workshop/VAD-VAR-Workshop/content/Instana/104.md\";\nimport * as styles from '../styles/pages/{mdx.fields__slug}.module.scss';\nimport {MDXProvider} from '@mdx-js/react';\nimport React, {useEffect, useRef, useState} from 'react';\nimport TableOfContents from '../components/TableOfContents';\nimport {BlockQuote, CodeBlock, ImageWrapper, QuizAlert, SmartLink, SubHeader, TableWrapper} from '../components/replacements';\nimport SEO from '../components/SEO';\nimport cx from 'classnames';\nconst components = {\n  table: TableWrapper,\n  a: SmartLink,\n  blockquote: BlockQuote,\n  SubHeader,\n  img: ImageWrapper,\n  code: CodeBlock,\n  QuizAlert: QuizAlert\n};\nconst MDXWrapper = React.memo(function MDXWrapper(_ref) {\n  let {children} = _ref;\n  return React.createElement(MDXProvider, {\n    components: {\n      ...components\n    }\n  }, children);\n});\nconst ContentTemplate = props => {\n  const {data: {mdx: {tableOfContents: {items: tocItems}, frontmatter: {toc = true}}}, children} = props;\n  const articleRef = useRef(null);\n  const {0: currSection, 1: setCurrSection} = useState('');\n  useEffect(() => {\n    if (!articleRef.current) return;\n    const headingElements = articleRef.current.querySelectorAll('h2,h3,h4,h5');\n    const cb = entries => {\n      entries.forEach(e => {\n        if (e.isIntersecting) setCurrSection(e.target.id);\n      });\n    };\n    const observer = new IntersectionObserver(cb, {\n      rootMargin: '0px 0px -95% 0px',\n      threshold: 0\n    });\n    headingElements.forEach(el => {\n      observer.observe(el);\n    });\n    return () => observer.disconnect();\n  }, []);\n  const showToc = (toc === null ? true : toc) && tocItems;\n  return React.createElement(React.Fragment, null, React.createElement(\"article\", {\n    className: cx(styles.article, !showToc && styles.noToc),\n    ref: articleRef\n  }, React.createElement(MDXWrapper, null, children)), showToc && React.createElement(TableOfContents, {\n    itemsList: tocItems,\n    maxDepth: 1,\n    currSection: currSection\n  }));\n};\nconst pageQuery = \"2937823819\";\nexport const Head = props => {\n  const {location: {pathname}, data: {mdx: {frontmatter: {title}, tableOfContents: {items}}}} = props;\n  return React.createElement(SEO, {\n    pathname,\n    title: title || items[0].title || undefined\n  });\n};\nContentTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ContentTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","h2","a","p","img","em","strong","ol","li","code","_provideComponents","components","SubHeader","id","component","Error","_missingMdxReference","React","timeToComplete","pageContext","frontmatter","updated","href","src","alt","wrapper","MDXLayout","table","TableWrapper","SmartLink","blockquote","BlockQuote","ImageWrapper","CodeBlock","QuizAlert","MDXWrapper","_ref","children","MDXProvider","ContentTemplate","data","mdx","tableOfContents","items","tocItems","toc","articleRef","useRef","currSection","setCurrSection","useState","useEffect","current","headingElements","querySelectorAll","observer","IntersectionObserver","entries","forEach","e","isIntersecting","target","rootMargin","threshold","el","observe","disconnect","showToc","className","cx","styles","ref","TableOfContents","itemsList","maxDepth","Head","location","pathname","title","SEO","undefined","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}