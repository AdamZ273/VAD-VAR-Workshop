{"version":3,"file":"component---src-pages-mdx-fields-slug-tsx-content-file-path-content-instana-104-es-md-981954f6e7414eec39ee.js","mappings":"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","sources":["webpack://vad-var-site/./content/Instana/104.es.md","webpack://vad-var-site/./src/pages/{mdx.fields__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    section: \"section\",\n    h1: \"h1\",\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    em: \"em\",\n    strong: \"strong\",\n    ol: \"ol\",\n    li: \"li\",\n    code: \"code\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"1\",\n    \"aria-labelledby\": \"104-alerta-y-sintéticos\"\n  }, React.createElement(_components.h1, {\n    id: \"104-alerta-y-sintéticos\"\n  }, \"104: Alerta y sintéticos\"), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"alertas\"\n  }, React.createElement(_components.h2, {\n    id: \"alertas\"\n  }, React.createElement(_components.a, {\n    href: \"#alertas\"\n  }, \"Alertas\")), \"\\n\", React.createElement(_components.p, null, \"Instana es compatible con 13 tecnologías para \", React.createElement(_components.a, {\n    href: \"https://www.ibm.com/docs/en/instana-observability/current?topic=apis-alerting#alerting-integrations\"\n  }, \"canales de alerta\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Canales de alerta compatibles con Instana](./images/104/supported-channels.png)\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"añadir-slack-como-canal-de-alerta\"\n  }, React.createElement(_components.h2, {\n    id: \"añadir-slack-como-canal-de-alerta\"\n  }, React.createElement(_components.a, {\n    href: \"#añadir-slack-como-canal-de-alerta\"\n  }, \"Añadir \", React.createElement(_components.em, null, \"Slack\"), \" como canal de alerta\")), \"\\n\", React.createElement(_components.p, null, \"Para crear alertas, primero necesitamos crear un canal de alertas. Este es un proceso sencillo que consiste en añadir un webhook entrante a \", React.createElement(_components.em, null, \"Slack\"), \" para un canal \", React.createElement(_components.em, null, \"Slack\"), \" específico. Para evitar que cada persona cree un nuevo canal, utilizaremos uno existente para este laboratorio.\"), \"\\n\", React.createElement(_components.p, null, \"Todos, por favor, uníos al canal \", React.createElement(_components.strong, null, \"#alert-lab\"), \" en \", React.createElement(_components.em, null, \"Slack\"), \".\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"enviando-eventos-específicos-al-canal\"\n  }, React.createElement(_components.h2, {\n    id: \"enviando-eventos-específicos-al-canal\"\n  }, React.createElement(_components.a, {\n    href: \"#enviando-eventos-específicos-al-canal\"\n  }, \"Enviando eventos específicos al canal\")), \"\\n\", React.createElement(_components.p, null, \"Ahora que el canal ha sido creado, podemos proceder a decidir qué alertas queremos enviar a \", React.createElement(_components.em, null, \"Slack\"), \". Para esta demo enviaremos todos los avisos de la tienda del robot directamente al canal \", React.createElement(_components.em, null, \"Slack\"), \".\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"En la barra lateral de navegación de la izquierda, haga clic en la sección \", React.createElement(_components.strong, null, \"Settings\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"En la página \", React.createElement(_components.strong, null, \"Settings\"), \", en la barra lateral de navegación de la izquierda, haga clic en la sección \", React.createElement(_components.em, null, \"Alerts\"), \" que se encuentra justo encima de los Canales de alerta. A continuación, haga clic en el botón \", React.createElement(_components.strong, null, \"New Alert\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Para el nombre utiliza este pattern, \", React.createElement(_components.code, null, \"<tu-nombre>-slack\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"En \", React.createElement(_components.strong, null, \"Events\"), \", elija la opción \", React.createElement(_components.strong, null, \"Alert on Event Type(s)\"), \", y luego active todas las opciones. Esto nos permitirá mostrar cómo se muestran los diferentes eventos en \", React.createElement(_components.em, null, \"Slack\"), \".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684418651799.2671089226/create-alert.png\",\n    alt: \"Crear alerta Slack\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"En \", React.createElement(_components.strong, null, \"Scope\"), \", elija la opción \", React.createElement(_components.strong, null, \"Application Perspective\"), \" y, a continuación, seleccione la opción \", React.createElement(_components.strong, null, \"Add Application Perspectives\"), \". A continuación, \", React.createElement(_components.strong, null, \"Select All\"), \" las opciones.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Observación: Si utiliza Instana para observar varias aplicaciones, puede añadir alertas de varias aplicaciones diferentes a la vez, o puede crear varias alertas, una para cada perspectiva.\")), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684418651795.2671089225/app-perspective.png\",\n    alt: \"Perspectiva de la aplicación\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"6\"\n  }, \"\\n\", React.createElement(_components.li, null, \"En Canales de alerta, seleccione \", React.createElement(_components.strong, null, \"lab-4\"), \" y, a continuación, haga clic en \", React.createElement(_components.strong, null, \"Create\"), \". Este canal permitirá a Instana enviar mensajes al canal \", React.createElement(_components.em, null, \"Slack\"), \" de \", React.createElement(_components.strong, null, \"#alert-lab\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Ya está. Ahora, a medida que se generen eventos desde Instana, se enviarán al canal \", React.createElement(_components.em, null, \"Slack\"), \". Este método de alerta potente y flexible permite alertas específicas, como el uso de diferentes canales \", React.createElement(_components.em, null, \"Slack\"), \" para alertas de diferente gravedad o incluso enviar mensajes a los desarrolladores desde PagerDuty para problemas críticos.\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"sintéticos\"\n  }, React.createElement(_components.h2, {\n    id: \"sintéticos\"\n  }, React.createElement(_components.a, {\n    href: \"#sintéticos\"\n  }, \"Sintéticos\")), \"\\n\", React.createElement(_components.p, null, \"Los sintéticos son una novedad en Instana. Permiten simular experiencias de usuario en su aplicación y monitorizar varias características de rendimiento.\"), \"\\n\", React.createElement(_components.p, null, \"Aviso: Synthetics sólo está disponible en una instancia SaaS, no on-prem.\"), \"\\n\", React.createElement(_components.p, null, \"En esta sección crearemos pruebas sintéticas para monitorizar nuestra aplicación. Para crear una prueba sintética, primero debe tener un Punto de Presencia (PoP) instalado y en funcionamiento. Múltiples PoPs pueden ser desplegados en clusters en varias regiones geográficas para simular la experiencia del usuario en esas regiones. Las instrucciones para instalar PoPs se pueden encontrar \", React.createElement(_components.a, {\n    href: \"https://www.ibm.com/docs/en/instana-observability/current?topic=beta-pop-deployment\"\n  }, \"aquí.\"), \" Esto está fuera del alcance de este laboratorio, y utilizaremos un PoP existente ya registrado en el panel de Instana.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"En la instancia de Instana SaaS (\", React.createElement(_components.a, {\n    href: \"https://mintgreen-edge0vfurg.instana.io/#/home\"\n  }, \"https://mintgreen-edge0vfurg.instana.io/#/home\"), \"), vaya a \", React.createElement(_components.strong, null, \"Synthetic Monitoring\"), \" en el menú de navegación de la izquierda y haga clic en \", React.createElement(_components.strong, null, \"Create New Test\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684418651807.2671089231/synthetic-create.png\",\n    alt: \"Crear sintético\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Para familiarizarnos con la funcionalidad, crearemos un sintético de ping.\"), \"\\n\", React.createElement(_components.p, null, \"En \", React.createElement(_components.strong, null, \"Step 2: Request Details\"), \" añada \", React.createElement(_components.a, {\n    href: \"https://web-np-robot-shop.apps.ocp-50ackdta3c-eaxi.cloud.techzone.ibm.com/\"\n  }, \"https://web-np-robot-shop.apps.ocp-50ackdta3c-eaxi.cloud.techzone.ibm.com/\"), \" para la URL y elija \", React.createElement(_components.strong, null, \"synthetic-dc\"), \" como Punto de Presencia. Haga clic en Next.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684418651799.2671089227/dc-pop.png\",\n    alt: \"Añadir PoP DC\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Para la Frecuencia elija 1 Minuto, y haga clic en Siguiente.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684418651807.2671089230/syn-timing.png\",\n    alt: \"Temporización sintética\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Nombre su sintético utilizando este modelo \", React.createElement(_components.code, null, \"<su nombre>-synthetic\"), \", y escriba una descripción opcional. Marque \", React.createElement(_components.strong, null, \"All Services\"), \" y haga clic en el botón \", React.createElement(_components.strong, null, \"Create\"), \".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684418651803.2671089228/karsten-synthetic.png\",\n    alt: \"crear prueba sintética de ping\"\n  }), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Ahora puede ver los análisis y métricas de su prueba sintética en la lista \", React.createElement(_components.strong, null, \"Tests\"), \".\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/VAD-VAR-Workshop/VAD-VAR-Workshop/content/Instana/104.es.md\";\nimport * as styles from '@styles/pages/{mdx.fields__slug}.module.scss';\nimport React, {useEffect, useRef, useState} from 'react';\nimport TableOfContents from '@components/TableOfContents';\nimport SEO from '@components/SEO';\nimport MDXWrapper from '@components/MDXWrapper';\nimport PageHeader from '@components/PageHeader';\nimport ContentWrapper from '@components/ContentWrapper';\nconst Content = props => {\n  const {data: {mdx: {tableOfContents: {items: tocItems}, frontmatter: {toc = true, title, timeToComplete, updated}}}, children} = props;\n  const articleRef = useRef(null);\n  const {0: currSection, 1: setCurrSection} = useState('');\n  useEffect(() => {\n    if (!articleRef.current) return;\n    const headingElements = articleRef.current.querySelectorAll('h2,h3,h4,h5');\n    const cb = entries => {\n      entries.forEach(e => {\n        if (e.isIntersecting) setCurrSection(e.target.id);\n      });\n    };\n    const observer = new IntersectionObserver(cb, {\n      rootMargin: '0px 0px -95% 0px',\n      threshold: 0\n    });\n    headingElements.forEach(el => {\n      observer.observe(el);\n    });\n    return () => observer.disconnect();\n  }, []);\n  const showToc = (toc === null ? true : toc) && tocItems;\n  return React.createElement(React.Fragment, null, React.createElement(PageHeader, {\n    timeToComplete,\n    updated\n  }, tocItems[0].title || title || ''), React.createElement(ContentWrapper, {\n    className: styles.wrapper\n  }, React.createElement(\"article\", {\n    className: styles.article,\n    ref: articleRef\n  }, React.createElement(MDXWrapper, {\n    components: {\n      h1: () => null\n    }\n  }, children)), showToc && React.createElement(TableOfContents, {\n    itemsList: tocItems,\n    maxDepth: 2,\n    currSection: currSection\n  })));\n};\nconst pageQuery = \"3587680389\";\nexport const Head = props => {\n  const {location: {pathname}, data: {mdx: {frontmatter: {title}, tableOfContents: {items}}}} = props;\n  return React.createElement(SEO, {\n    pathname,\n    title: title || items[0].title || undefined\n  });\n};\nContent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Content, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","section","h1","h2","a","p","em","strong","ol","li","code","img","_provideComponents","components","React","className","id","href","src","alt","start","wrapper","MDXLayout","Content","data","mdx","tableOfContents","items","tocItems","frontmatter","toc","title","timeToComplete","updated","children","articleRef","useRef","currSection","setCurrSection","useState","useEffect","current","headingElements","querySelectorAll","observer","IntersectionObserver","entries","forEach","e","isIntersecting","target","rootMargin","threshold","el","observe","disconnect","showToc","PageHeader","ContentWrapper","styles","ref","MDXWrapper","TableOfContents","itemsList","maxDepth","Head","location","pathname","SEO","undefined","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}