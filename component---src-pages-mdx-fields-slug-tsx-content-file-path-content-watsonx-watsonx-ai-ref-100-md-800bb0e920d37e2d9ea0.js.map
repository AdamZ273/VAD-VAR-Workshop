{"version":3,"file":"component---src-pages-mdx-fields-slug-tsx-content-file-path-content-watsonx-watsonx-ai-ref-100-md-800bb0e920d37e2d9ea0.js","mappings":"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","sources":["webpack://vad-var-site/./content/Watsonx/WatsonxAI/ref100.md","webpack://vad-var-site/./src/pages/{mdx.fields__slug}.tsx","webpack://vad-var-site/./src/components/MDXWrapper/MDXWrapper.tsx","webpack://vad-var-site/./src/components/MDXWrapper/index.ts","webpack://vad-var-site/./src/components/TableOfContents/TableOfContents.tsx","webpack://vad-var-site/./src/components/TableOfContents/index.ts","webpack://vad-var-site/./src/components/TableOfContents/TableOfContents.module.scss","webpack://vad-var-site/./src/styles/pages/{mdx.fields__slug}.module.scss","webpack://vad-var-site/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    section: \"section\",\n    h1: \"h1\",\n    ul: \"ul\",\n    li: \"li\",\n    p: \"p\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"1\",\n    \"aria-labelledby\": \"ai-glossary-of-terms\"\n  }, React.createElement(_components.h1, {\n    id: \"ai-glossary-of-terms\"\n  }, \"AI glossary of terms\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Foundation models\"), \" are typically built using a specific kind of neural network architecture, called a transformer, which is designed to generate sequences of related data elements (for example, a sentence).\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Generative AI\"), \" refers to a set of AI algorithms that can generate new outputs — such as text, images, code,  or audio — based on the training data, unlike traditional AI systems that are designed to recognize patterns and make predictions. Sometimes the AI that powers these solutions is referred to as decoders.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Hallucination\"), \" is a well-known phenomenon in large language models (LLMs) in which the system provides an answer that is factually incorrect, irrelevant, or nonsensical because of limitations in its training data and architecture; more concerning is the hallucinated answer sounds plausible.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"A \", React.createElement(_components.strong, null, \"large language model (LLM)\"), \" is a type of machine learning model that has been trained on large quantities of unlabeled text using self-supervised learning and can perform a variety of natural language processing (NLP) tasks (even when that language is a programming language). Output may range from books, articles, social media posts, online conversations, and even code. The architecture of an LLM consists of layers of neural networks that learn to generate language in a way that is similar to how humans use language.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Natural language processing (NLP)\"), \" is the technology that gives computers the ability to understand text and spoken words in much the same way human beings can. NLP combines computational linguistics — rule-based modeling of human language — with statistical, machine learning, and deep learning models. These technologies enable computers to process human language in the form of text or voice data and to ‘understand’ its full meaning, complete with the speaker or writer’s intent and sentiment.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Prompt\"), \" – input and query that users or programs use to interface with foundation models so they can respond with useful/desirable results. A prompt can be a simple NLP question, or it can be a large body of text. The structure of the prompt is very important in eliciting proper responses from foundation models.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Prompt Engineering\"), \" – Prompt engineering is the process of crafting prompt text to best effect a given model and parameters.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Decoder-only model\"), \" – Models designed explicitly for generative AI use cases; represents the architectures used in GPT-3 and other popular Large Language Models.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Encoder-only model\"), \" – Models with best cost performance trade-off for non-generative use cases but require task-specific labeled data for fine-tuning.\\n \"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Encoder-decoder model\"), \"  - Models that support both generative and non-generative use cases. These have the best cost-performance trade-off for generative use cases when the input is large but the generated output is small.\"), \"\\n\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/VAD-VAR-Workshop/VAD-VAR-Workshop/content/Watsonx/WatsonxAI/ref100.md\";\nimport React, {useRef, useState} from 'react';\nimport cx from 'classnames';\nimport SEO from '@components/SEO';\nimport PageHeader from '@components/PageHeader';\nimport MDXWrapper from '@components/MDXWrapper';\nimport ContentWrapper from '@components/ContentWrapper';\nimport TableOfContents from '@components/TableOfContents';\nimport * as styles from '@styles/pages/{mdx.fields__slug}.module.scss';\nconst Content = props => {\n  const {data: {mdx: {tableOfContents: {items: tocItems}, frontmatter: {toc = true, title, timeToComplete, updated}}}, children} = props;\n  const articleRef = useRef(null);\n  const {0: currSection} = useState('');\n  const showToc = (toc === null ? true : toc) && tocItems;\n  return React.createElement(React.Fragment, null, React.createElement(PageHeader, {\n    timeToComplete,\n    updated\n  }, tocItems[0].title || title || ''), React.createElement(ContentWrapper, {\n    className: styles.wrapper\n  }, React.createElement(\"article\", {\n    className: cx(styles.article, !showToc && styles.noToc),\n    ref: articleRef\n  }, React.createElement(MDXWrapper, {\n    components: {\n      h1: () => null\n    }\n  }, children)), showToc && React.createElement(TableOfContents, {\n    itemsList: tocItems,\n    maxDepth: 2,\n    currSection: currSection\n  })));\n};\nconst pageQuery = \"3587680389\";\nexport const Head = props => {\n  const {location: {pathname}, data: {mdx: {frontmatter: {title}, tableOfContents: {items}}}} = props;\n  return React.createElement(SEO, {\n    pathname,\n    title: title || items[0].title || undefined\n  });\n};\nContent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Content, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React, { memo } from 'react';\nimport { MDXProvider } from '@mdx-js/react';\nimport { Props } from '@mdx-js/react/lib';\nimport {\n  BlockQuote,\n  CodeBlock,\n  CopyText,\n  Danger,\n  ImageWrapper,\n  QuizAlert,\n  SmartLink,\n  SubHeader,\n  TableWrapper,\n  Warning\n} from '../replacements';\n\ninterface MDXWrapperProps {\n  children: React.ReactNode;\n  components?: Props['components'];\n}\n\nconst standardComponents: Props['components'] = {\n  table: TableWrapper,\n  a: SmartLink,\n  blockquote: BlockQuote,\n  SubHeader: SubHeader,\n  img: ImageWrapper,\n  code: CodeBlock,\n  QuizAlert,\n  Danger,\n  Warning,\n  CopyText: CopyText\n};\n\nconst MDXWrapper = memo(function MDXWrapper({ children, components = {} }: MDXWrapperProps) {\n  return (\n    <MDXProvider\n      components={{\n        ...standardComponents,\n        ...components\n      }}>\n      {children}\n    </MDXProvider>\n  );\n});\n\nexport default MDXWrapper;\n","import MDXWrapper from './MDXWrapper';\n\nexport default MDXWrapper;\n","import React, { useMemo } from 'react';\nimport { Link as GatsbyLink } from 'gatsby';\nimport cx from 'classnames';\nimport useCurrentHeading from '@hooks/useCurrentHeading';\nimport * as styles from './TableOfContents.module.scss';\n\ninterface TableOfContentsProps {\n  itemsList: TOCItem[];\n  currSection: string | undefined;\n  maxDepth?: number;\n}\n\ninterface TOCItem {\n  title: string;\n  url: string;\n  items?: TOCItem[];\n}\n\ninterface FlatTOCItem extends Omit<TOCItem, 'items'> {\n  depth: number;\n}\n\nconst flattenTOC = (toc: TOCItem[], flatList: FlatTOCItem[] = [], depth = 0): FlatTOCItem[] => {\n  toc.forEach((item) => {\n    const { title, url, items } = item;\n    flatList.splice(flatList.length, 0, {\n      depth,\n      title,\n      url\n    });\n\n    if (items && items.length > 0) flattenTOC(items, flatList, depth + 1);\n  });\n\n  return flatList;\n};\n\nconst TableOfContents = (props: TableOfContentsProps) => {\n  const { itemsList } = props;\n\n  const flatTOC = useMemo(() => flattenTOC(itemsList[0].items || []), [itemsList]);\n\n  const currentSection = useCurrentHeading('h1[id],h2[id]', {\n    threshold: [0, 1],\n    rootMargin: `-${styles.headerHeight} 0px -90% 0px`\n  });\n\n  if (flatTOC.length < 1) return null;\n\n  return (\n    <nav className={styles.toc}>\n      <div className={styles.tocStack}>\n        <h6 className={styles.tocHeader}>\n          <GatsbyLink to='#' replace>\n            On this page\n          </GatsbyLink>\n        </h6>\n\n        {flatTOC.map(({ title, url }, index) => {\n          return (\n            <a\n              className={cx(styles.link, currentSection === url.substring(1) && styles.activeItem)}\n              key={index}\n              href={url}>\n              {title}\n            </a>\n          );\n        })}\n      </div>\n    </nav>\n  );\n};\n\nexport default TableOfContents;\n","import TableOfContents from './TableOfContents';\n\nexport default TableOfContents;\n","// extracted by mini-css-extract-plugin\nexport var activeItem = \"TableOfContents-module--activeItem--3869f\";\nexport var headerHeight = \"48px\";\nexport var link = \"TableOfContents-module--link--b292b\";\nexport var toc = \"TableOfContents-module--toc--54d35\";\nexport var tocHeader = \"TableOfContents-module--tocHeader--05956\";\nexport var tocStack = \"TableOfContents-module--tocStack--90609\";","// extracted by mini-css-extract-plugin\nexport var article = \"{mdx-fields__slug}-module--article--e3d5a\";\nexport var noToc = \"{mdx-fields__slug}-module--noToc--82387\";\nexport var wrapper = \"{mdx-fields__slug}-module--wrapper--58e72\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","section","h1","ul","li","p","strong","_provideComponents","components","React","className","id","wrapper","MDXLayout","Content","data","mdx","tableOfContents","items","tocItems","frontmatter","toc","title","timeToComplete","updated","children","articleRef","useRef","currSection","useState","showToc","PageHeader","ContentWrapper","styles","cx","ref","MDXWrapper","TableOfContents","itemsList","maxDepth","Head","location","pathname","SEO","undefined","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","standardComponents","table","TableWrapper","a","SmartLink","blockquote","BlockQuote","SubHeader","img","ImageWrapper","code","CodeBlock","QuizAlert","Danger","Warning","CopyText","memo","_ref","MDXProvider","flattenTOC","flatList","depth","forEach","item","url","splice","length","flatTOC","useMemo","currentSection","useCurrentHeading","threshold","rootMargin","GatsbyLink","to","replace","map","index","substring","key","href","article","noToc","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}