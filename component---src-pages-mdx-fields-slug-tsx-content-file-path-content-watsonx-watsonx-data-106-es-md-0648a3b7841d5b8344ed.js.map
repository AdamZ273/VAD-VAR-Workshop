{"version":3,"file":"component---src-pages-mdx-fields-slug-tsx-content-file-path-content-watsonx-watsonx-data-106-es-md-0648a3b7841d5b8344ed.js","mappings":"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","sources":["webpack://vad-var-site/./content/Watsonx/WatsonxData/106.es.md","webpack://vad-var-site/./src/pages/{mdx.fields__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    section: \"section\",\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    ol: \"ol\",\n    li: \"li\",\n    strong: \"strong\",\n    img: \"img\",\n    ul: \"ul\",\n    em: \"em\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    blockquote: \"blockquote\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components), {QuizAlert} = _components;\n  if (!QuizAlert) _missingMdxReference(\"QuizAlert\", true);\n  return React.createElement(React.Fragment, null, React.createElement(QuizAlert, {\n    text: \"¡Atención! ¡El material del cuestionario se marcará así!\"\n  }), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"consultas-federadas\"\n  }, React.createElement(_components.h2, {\n    id: \"consultas-federadas\"\n  }, React.createElement(_components.a, {\n    href: \"#consultas-federadas\"\n  }, \"Consultas federadas\")), \"\\n\", React.createElement(_components.p, null, \"A diferencia de los sistemas de bases de datos tradicionales, Presto no tiene su propia base de datos nativa. En su lugar, Presto permite separar la computación del almacenamiento, con docenas de conectores que permiten a Presto acceder a los datos allí donde se encuentren, ya sea en bases de datos relacionales, bases de datos NoSQL, almacenes de datos, lagos de datos, etc.\"), \"\\n\", React.createElement(_components.p, null, \"Aunque Presto admite una amplia gama de conectores, watsonx.data sólo admite oficialmente un subconjunto de ellos. Esto se debe a que IBM quiere garantizar la calidad, el rendimiento y la seguridad de los conectores antes de añadir soporte (lo que puede requerir la actualización del código fuente del conector para ello). Con el tiempo se añadirán más conectores.\"), \"\\n\", React.createElement(_components.p, null, \"La lista más actualizada de conectores y los tipos de sentencias SQL compatibles puede consultarse \", React.createElement(_components.a, {\n    href: \"https://www.ibm.com/docs/en/watsonxdata/1.0.x?topic=watsonxdata-supported-sql-statements\"\n  }, \"aquí\"), \". La lista de conectores compatibles crecerá con el tiempo.\"), \"\\n\", React.createElement(_components.p, null, \"En esta sección combinarás datos del almacenamiento de objetos de watsonx.data con datos de bases de datos Db2 y PostgreSQL. Para evitar que tengas que aprovisionar estas bases de datos tú mismo, se han instalado en la misma máquina virtual que watsonx.data y están prepobladas con datos.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Seleccione el icono \", React.createElement(_components.strong, null, \"Administrador de infraestructuras\"), \" en el menú de la izquierda.\"), \"\\n\", React.createElement(_components.li, null, \"Haga clic en el menú desplegable \", React.createElement(_components.strong, null, \"Añadir componente\"), \" situado en la parte derecha de la pantalla. Seleccione \", React.createElement(_components.strong, null, \"Añadir base de datos\"), \".\"), \"\\n\"), \"\\n\", React.createElement(QuizAlert, {\n    text: \"Material del cuestionario: preste atención al menú Agregar componentes\"\n  }), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/106/add-database.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"3\"\n  }, \"\\n\", React.createElement(_components.li, null, \"En la ventana emergente \", React.createElement(_components.strong, null, \"Añadir base de datos\"), \", seleccione/introduzca la siguiente información en la sección \", React.createElement(_components.strong, null, \"1. Definición de la base de datos\"), \":\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Tipo de base de datos: IBM Db2\"), \"\\n\", React.createElement(_components.li, null, \"Nombre de la base de datos: GOSALES\"), \"\\n\", React.createElement(_components.li, null, \"Nombre para mostrar: Db2DW\"), \"\\n\", React.createElement(_components.li, null, \"Nombre de host: 192.168.252.2\"), \"\\n\", React.createElement(_components.li, null, \"Puerto: 50000\"), \"\\n\", React.createElement(_components.li, null, \"Nombre de usuario: db2inst1\"), \"\\n\", React.createElement(_components.li, null, \"Contraseña: db2inst1\"), \"\\n\", React.createElement(_components.li, null, \"Conexión SSL: \", React.createElement(_components.em, null, React.createElement(_components.strong, null, \"Uncheck\"))), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/106/add-database-form1.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Cuando se añade un nuevo bucket o base de datos a watsonx.data, también se crea un nuevo catálogo.\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"4\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Desplácese hasta la sección \", React.createElement(_components.strong, null, \"2. Definición del catálogo asociado\"), \". Introduzca \", React.createElement(_components.strong, null, \"db2catalog\"), \" como \", React.createElement(_components.strong, null, \"nombre del catálogo\"), \". A continuación, haga clic en \", React.createElement(_components.strong, null, \"Añadir\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/106/add-database-form2.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"La base de datos \", React.createElement(_components.strong, null, \"Db2DW\"), \" y el catálogo \", React.createElement(_components.strong, null, \"db2catalog\"), \" se han añadido a watsonx.data y ahora se reflejan en la vista de topología de los componentes de infraestructura.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/106/add-database-output.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"El catálogo \", React.createElement(_components.strong, null, \"db2catalog\"), \" se asocia automáticamente a la base de datos \", React.createElement(_components.strong, null, \"Db2DW\"), \", pero para poder consultar datos de esta base de datos, el catálogo \", React.createElement(_components.strong, null, \"db2catalog\"), \" también debe estar asociado al motor \", React.createElement(_components.strong, null, \"presto-01\"), \".\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"5\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Sitúe el puntero del ratón sobre el mosaico del catálogo \", React.createElement(_components.strong, null, \"db2catalog\"), \" y aparecerá el icono \", React.createElement(_components.strong, null, \"Gestionar\"), \" asociaciones. Haga clic en el icono Gestionar \", React.createElement(_components.strong, null, \"asociaciones\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/106/manage-association.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"6\"\n  }, \"\\n\", React.createElement(_components.li, null, \"En la ventana emergente \", React.createElement(_components.strong, null, \"Gestionar asociaciones\"), \", seleccione la casilla del motor \", React.createElement(_components.strong, null, \"presto-01\"), \" y, a continuación, haga clic en \", React.createElement(_components.strong, null, \"Guardar y reiniciar motor\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/106/manage-association-save.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Una línea conecta ahora \", React.createElement(_components.strong, null, \"presto-01\"), \" con \", React.createElement(_components.strong, null, \"db2catalog\"), \", indicando que están asociados.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/106/manage-association-connect.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"A continuación añadirá la base de datos PostgreSQL. La contraseña para la cuenta de administrador PostgreSQL es específica para su entorno y los siguientes pasos la extraerán para usted.\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"7\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Abra una ventana de comandos de terminal en el servidor watsonx.data como usuario root.\"), \"\\n\", React.createElement(_components.li, null, \"El usuario administrativo de la base de datos PostgreSQL es \", React.createElement(_components.strong, null, \"admin\"), \". Ejecute el siguiente comando para extraer y mostrar la \", React.createElement(_components.strong, null, \"contraseña\"), \". Copie el valor mostrado en una ubicación que pueda consultar más adelante.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  docker \", React.createElement(_components.span, {\n    className: \"hljs-built_in\"\n  }, \"exec\"), \" ibm-lh-postgres \", React.createElement(_components.span, {\n    className: \"hljs-built_in\"\n  }, \"printenv\"), \" | grep POSTGRES_PASSWORD | sed \", React.createElement(_components.span, {\n    className: \"hljs-string\"\n  }, \"'s/.*=//'\"), \"\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"9\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Repita los pasos 2-6 anteriores para añadir la base de datos PostgreSQL a watsonx.data. Utilice la siguiente información:\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Tipo de base de datos: PostgreSQL(se puede encontrar en Otras bases de datos)\"), \"\\n\", React.createElement(_components.li, null, \"Nombre de la base de datos: gosales\"), \"\\n\", React.createElement(_components.li, null, \"Nombre para mostrar: PostgreSQLDB\"), \"\\n\", React.createElement(_components.li, null, \"Nombre de host: 192.168.252.2\"), \"\\n\", React.createElement(_components.li, null, \"Puerto: 5432\"), \"\\n\", React.createElement(_components.li, null, \"Nombre de usuario: admin\"), \"\\n\", React.createElement(_components.li, null, \"Contraseña: \", React.createElement(_components.em, null, React.createElement(_components.strong, null, \"La contraseña generada en el paso\")), \" anterior\"), \"\\n\", React.createElement(_components.li, null, \"Nombre del catálogo: pgcatalog\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Con las bases de datos Db2 y PostgreSQL añadidas, la topología debería parecerse a la imagen siguiente.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/106/add-database-output-pg.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"10\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Seleccione el icono \", React.createElement(_components.strong, null, \"Gestor de datos\"), \" en el menú de la izquierda.\"), \"\\n\", React.createElement(_components.li, null, \"Expanda los catálogos db2catalog y pgcatalog.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/106/data-manager-view.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Se muestra información sobre el esquema y las tablas de ambas bases de datos. Ambas incluyen un esquema \", React.createElement(_components.strong, null, \"gosalesdw\"), \" idéntico con tablas que contienen datos de ventas de la empresa ficticia Great Outdoors. Recuerde que también existe una copia de estos mismos datos en el almacenamiento de objetos, gestionada por el catálogo \", React.createElement(_components.strong, null, \"hive_data\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Si no ve ninguna tabla asociada al esquema \", React.createElement(_components.strong, null, \"gosalesdw\"), \" en ninguno de los catálogos, puede actualizar el esquema.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/106/data-manager-refresh.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Nota:\"), \" Si por alguna razón la lista de tablas no se actualiza, o si ve aparecer un mensaje en la esquina superior derecha que dice \\\"Se ha \", React.createElement(_components.em, null, React.createElement(_components.strong, null, \"producido un error al cargar las tablas en gosalesdw\\\",\")), \" similar a la imagen de abajo, aún puede continuar. La información de las tablas está en el catálogo y las consultas que hacen referencia a estas tablas seguirán funcionando. Continúe con el resto del laboratorio.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/106/data-manager-view-refresh-error.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Ahora tiene copias de las tablas de ventas de la empresa Great Outdoors en almacenamiento de objetos (hive_data), Db2 (db2catalog) y PostgreSQL (pgcatalog). Esto no es algo que se tendría en un escenario del mundo real (después de todo, el beneficio de poder federar el acceso a múltiples fuentes de datos es evitar la duplicación de datos). Sin embargo, se hace aquí con el propósito de resaltar las capacidades de federación de Presto.\"), \"\\n\", React.createElement(_components.p, null, \"Ahora verá cómo puede ejecutar una consulta federada que combine datos de estas tres fuentes de datos.\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"12\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Seleccione el icono \", React.createElement(_components.strong, null, \"Espacio de trabajo de consulta\"), \" en el menú de la izquierda.\"), \"\\n\", React.createElement(_components.li, null, \"Copie y pegue la siguiente consulta en la \", React.createElement(_components.strong, null, \"hoja de cálculo SQL\"), \". Haz clic en \", React.createElement(_components.strong, null, \"Ejecutar en presto-01\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Esta consulta de ejemplo podría ser utilizada por la empresa ficticia para determinar qué método de compra está asociado con los pedidos más grandes. La consulta accede a cinco tablas, una de ellas en PostgreSQL, dos en Db2 y dos en el almacenamiento de objetos de watsonx.data.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  \", React.createElement(_components.span, {\n    className: \"hljs-keyword\"\n  }, \"select\"), \"  pll.product_line_en as product, md.    order_method_en as order_method, \", React.createElement(_components.span, {\n    className: \"hljs-built_in\"\n  }, \"sum\"), \"(sf.quantity) as total \\n    from \\n      pgcatalog.gosalesdw.sls_order_method_dim as md, \\n      db2catalog.gosalesdw.sls_product_dim as pd, \\n      db2catalog.gosalesdw.sls_product_line_lookup as pll,\\n      hive_data.gosalesdw.sls_product_brand_lookup as pbl,\\n      hive_data.gosalesdw.sls_sales_fact as sf \\n    \", React.createElement(_components.span, {\n    className: \"hljs-built_in\"\n  }, \"where\"), \"\\n      pd.product_key = sf.product_key\\n      and md.order_method_key = sf.order_method_key\\n      and pll.product_line_code = pd.product_line_code \\n      and pbl.product_brand_code = pd.product_brand_code\\n    group by pll.product_line_en, md.order_method_en \\n    order by product, order_method;\\n\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Nota:\"), \" Si la sentencia SQL se pega en la hoja de cálculo como una sola línea, puede darle un formato agradable haciendo clic en el icono \", React.createElement(_components.strong, null, \"Formatear hoja de cálculo\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/106/query-format.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"El \", React.createElement(_components.strong, null, \"conjunto de resultados\"), \" de la consulta se encuentra en la parte inferior de la pantalla.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/106/query-result.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"14\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Haga clic en el botón \", React.createElement(_components.strong, null, \"Explicar\"), \" de la barra de menús de la hoja de cálculo.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/106/query-result-explain.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"La explicación visual de esta consulta parece mucho más interesante que la mostrada anteriormente. Si se desplaza por el resultado de la explicación visual, verá cinco nodos hoja \", React.createElement(_components.strong, null, \"de ScanProject\"), \" en el árbol. Éstos corresponden a las cinco tablas que se están leyendo.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/106/query-result-tables.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"15\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Haz clic en la \", React.createElement(_components.strong, null, \"X\"), \" de la esquina superior derecha de la ventana \", React.createElement(_components.strong, null, \"Explicar\"), \" para cerrarla.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Paso opcional:\"), \" Aquí tienes otras dos consultas que puedes intentar ejecutar también, que combinan datos de las mismas tres fuentes de datos.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"La siguiente consulta muestra todos los empleados canadienses y mexicanos, junto con su región y país. Este es el tipo de consulta que podría generar una herramienta de generación de informes, basándose en la información introducida por el usuario.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, React.createElement(_components.span, {\n    className: \"hljs-keyword\"\n  }, \"select\"), \" distinct branch_region_dim.region_en region, \\n    branch_region_dim.country_en country,\\n    emp_employee_dim.employee_name employee \\n  from \\n    hive_data.gosalesdw.go_region_dim branch_region_dim,\\n    pgcatalog.gosalesdw.emp_employee_dim emp_employee_dim,\\n    db2catalog.gosalesdw.go_branch_dim go_branch_dim\\n  \", React.createElement(_components.span, {\n    className: \"hljs-built_in\"\n  }, \"where\"), \" \\n    branch_region_dim.country_en \", React.createElement(_components.span, {\n    className: \"hljs-keyword\"\n  }, \"in\"), \" (\", React.createElement(_components.span, {\n    className: \"hljs-string\"\n  }, \"'Canada'\"), \", \", React.createElement(_components.span, {\n    className: \"hljs-string\"\n  }, \"'Mexico'\"), \") and\\n    branch_region_dim.country_code = go_branch_dim.country_code and\\n    emp_employee_dim.branch_code = go_branch_dim.branch_code \\n  order by region, country, employee;\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"En muchas empresas, los departamentos (u organizaciones, como se denominan en este conjunto de datos) son jerárquicos, en el sentido de que un departamento depende de otro, que a su vez depende de otro. Esta consulta muestra los dos departamentos principales de un conjunto determinado de departamentos. Como en la consulta anterior, se trata del tipo de consulta que podría generar una herramienta de elaboración de informes.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  \", React.createElement(_components.span, {\n    className: \"hljs-keyword\"\n  }, \"select\"), \" gosalesdw.go_org_dim.organization_key, \\n      go_org_dim_1.organization_parent as org_level1_code, \\n      go_org_name_lookup_1.organization_name_en as org_level1_name, \\n      gosalesdw.go_org_dim.organization_parent as org_level2_code, \\n      go_org_name_lookup_2.organization_name_en as org_level2_name, \\n      gosalesdw.go_org_dim.organization_code as org_code, \\n      gosalesdw.go_org_name_lookup.organization_name_en as org_name\\n    from  pgcatalog.gosalesdw.go_org_name_lookup  go_org_name_lookup_2 \\n            inner \", React.createElement(_components.span, {\n    className: \"hljs-built_in\"\n  }, \"join\"), \"\\n          hive_data.gosalesdw.go_org_dim \\n            inner \", React.createElement(_components.span, {\n    className: \"hljs-built_in\"\n  }, \"join\"), \"\\n          pgcatalog.gosalesdw.go_org_name_lookup\\n            on hive_data.gosalesdw.go_org_dim.organization_code = pgcatalog.gosalesdw.go_org_name_lookup.organization_code\\n            on go_org_name_lookup_2.organization_code = hive_data.gosalesdw.go_org_dim.organization_parent\\n            inner \", React.createElement(_components.span, {\n    className: \"hljs-built_in\"\n  }, \"join\"), \"\\n          pgcatalog.gosalesdw.go_org_name_lookup go_org_name_lookup_1\\n            inner \", React.createElement(_components.span, {\n    className: \"hljs-built_in\"\n  }, \"join\"), \" \\n          hive_data.gosalesdw.go_org_dim go_org_dim_1\\n            on go_org_name_lookup_1.organization_code = go_org_dim_1.organization_parent\\n            on hive_data.gosalesdw.go_org_dim.organization_parent = go_org_dim_1.organization_code\\n    \", React.createElement(_components.span, {\n    className: \"hljs-built_in\"\n  }, \"where\"), \" (hive_data.gosalesdw.go_org_dim.organization_code between \", React.createElement(_components.span, {\n    className: \"hljs-string\"\n  }, \"'1700'\"), \" and \", React.createElement(_components.span, {\n    className: \"hljs-string\"\n  }, \"'5730'\"), \")\\n    order by org_code;\\n\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Nota:\"), \" Pruebe a ejecutar las dos consultas anteriores también desde la CLI de Presto. Debería obtener los mismos resultados en la CLI de Presto que en el área de trabajo de consultas.\"), \"\\n\"), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"3\",\n    \"aria-labelledby\": \"enhorabuena-has-llegado-al-final-del-laboratorio-106\"\n  }, React.createElement(_components.h3, {\n    id: \"enhorabuena-has-llegado-al-final-del-laboratorio-106\"\n  }, React.createElement(_components.a, {\n    href: \"#enhorabuena-has-llegado-al-final-del-laboratorio-106\"\n  }, \"Enhorabuena, has llegado al final del laboratorio 106.\")), \"\\n\", React.createElement(_components.p, null, \"Haga clic en, \", React.createElement(_components.a, {\n    href: \"/watsonx/watsonxdata/107\"\n  }, \"laboratorio 107\"), \" para iniciar el siguiente laboratorio.\"))));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/VAD-VAR-Workshop/VAD-VAR-Workshop/content/Watsonx/WatsonxData/106.es.md\";\nimport React, {useRef, useState} from 'react';\nimport cx from 'classnames';\nimport SEO from '@components/SEO';\nimport PageHeader from '@components/PageHeader';\nimport MDXWrapper from '@components/MDXWrapper';\nimport ContentWrapper from '@components/ContentWrapper';\nimport TableOfContents from '@components/TableOfContents';\nimport * as styles from '@styles/pages/{mdx.fields__slug}.module.scss';\nconst Content = props => {\n  const {data: {mdx: {tableOfContents: {items: tocItems}, frontmatter: {toc = true, title, timeToComplete, updated}}}, children} = props;\n  const articleRef = useRef(null);\n  const {0: currSection} = useState('');\n  const showToc = (toc === null ? true : toc) && tocItems;\n  return React.createElement(React.Fragment, null, React.createElement(PageHeader, {\n    timeToComplete,\n    updated\n  }, tocItems[0].title || title || ''), React.createElement(ContentWrapper, {\n    className: styles.wrapper\n  }, React.createElement(\"article\", {\n    className: cx(styles.article, !showToc && styles.noToc),\n    ref: articleRef\n  }, React.createElement(MDXWrapper, {\n    components: {\n      h1: () => null\n    }\n  }, children)), showToc && React.createElement(TableOfContents, {\n    itemsList: tocItems,\n    maxDepth: 2,\n    currSection: currSection\n  })));\n};\nconst pageQuery = \"3587680389\";\nexport const Head = props => {\n  const {location: {pathname}, data: {mdx: {frontmatter: {title}, tableOfContents: {items}}}} = props;\n  return React.createElement(SEO, {\n    pathname,\n    title: title || items[0].title || undefined\n  });\n};\nContent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Content, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","section","h2","a","p","ol","li","strong","img","ul","em","pre","code","span","blockquote","h3","_provideComponents","components","QuizAlert","id","component","Error","_missingMdxReference","React","text","className","href","src","alt","start","wrapper","MDXLayout","Content","data","mdx","tableOfContents","items","tocItems","frontmatter","toc","title","timeToComplete","updated","children","articleRef","useRef","currSection","useState","showToc","PageHeader","ContentWrapper","styles","cx","ref","MDXWrapper","h1","TableOfContents","itemsList","maxDepth","Head","location","pathname","SEO","undefined","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}