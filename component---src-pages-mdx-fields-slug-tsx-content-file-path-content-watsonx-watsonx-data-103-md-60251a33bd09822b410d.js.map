{"version":3,"file":"component---src-pages-mdx-fields-slug-tsx-content-file-path-content-watsonx-watsonx-data-103-md-60251a33bd09822b410d.js","mappings":"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","sources":["webpack://vad-var-site/./content/Watsonx/WatsonxData/103.md","webpack://vad-var-site/./src/pages/{mdx.fields__slug}.tsx","webpack://vad-var-site/./src/components/MDXWrapper/MDXWrapper.tsx","webpack://vad-var-site/./src/components/MDXWrapper/index.ts","webpack://vad-var-site/./src/components/TableOfContents/TableOfContents.tsx","webpack://vad-var-site/./src/components/TableOfContents/index.ts","webpack://vad-var-site/./src/components/TableOfContents/TableOfContents.module.scss","webpack://vad-var-site/./src/styles/pages/{mdx.fields__slug}.module.scss","webpack://vad-var-site/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    section: \"section\",\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    ol: \"ol\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    img: \"img\",\n    strong: \"strong\",\n    blockquote: \"blockquote\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components), {QuizAlert} = _components;\n  if (!QuizAlert) _missingMdxReference(\"QuizAlert\", true);\n  return React.createElement(React.Fragment, null, React.createElement(QuizAlert, {\n    text: \"Heads Up! Quiz material will be flagged like this!\"\n  }), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"1\",\n    \"aria-labelledby\": \"working-with-presto\"\n  }, React.createElement(_components.h1, {\n    id: \"working-with-presto\"\n  }, \"Working with Presto\"), \"\\n\", React.createElement(_components.p, null, \"In \", React.createElement(_components.a, {\n    href: \"/watsonx/watsonxdata/102\"\n  }, \"Lab 02\"), \", you have seen how Presto is integrated into watsonx.data and the watsonx.data user interface. However, you can also work directly with Presto.\"), \"\\n\", React.createElement(_components.p, null, \"For example, Presto includes a terminal-based interactive command line interface (CLI) that allows you to run SQL statements. Presto also has a web-based graphical user interface for getting information on query activity in the system.\"), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"presto-command-line-interface-cli\"\n  }, React.createElement(_components.h2, {\n    id: \"presto-command-line-interface-cli\"\n  }, React.createElement(_components.a, {\n    href: \"#presto-command-line-interface-cli\"\n  }, \"Presto Command Line Interface (CLI)\")), \"\\n\", React.createElement(_components.p, null, \"Presto CLI is a terminal-based interactive shell that can be used to run queries. You can connect to the Presto server either through Presto CLI installed as part of the ibm-lh-client package or through Presto CLI installed separately.\"), \"\\n\", React.createElement(_components.p, null, \"Presto CLI is pre-installed as part of watsonx.data Developer Edition. It is started by using the presto-cli command (located in /root/ibm-lh-dev/bin).\"), \"\\n\", React.createElement(_components.p, null, \"Presto uses a 3-part name to identify tables: catalog.schema.table. These identifiers can be enclosed in double quotes as needed (for example, \\\"mycatalog\\\".\\\"myschema\\\".\\\"mytable\\\"). Note that double quotes are needed if you’re using any special characters in a name, like a hyphen.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Open a terminal command window to the watsonx.data server as the root user.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Run the following two commands to open a Presto CLI interactive terminal.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  \", React.createElement(_components.span, {\n    className: \"hljs-built_in\"\n  }, \"cd\"), \" /root/ibm-lh-dev/bin\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  ./presto-cli\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"3\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Run the following command to list the catalogs that have been registered in Presto (Note: Presto requires that commands end with a semicolon.)\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  show catalogs;\\n\")), \"\\n\", React.createElement(_components.p, null, \"The output should be similar to the text below.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/103/show-catalog.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"4\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Run the following query. It should return a count of 1,500 rows.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  \", React.createElement(_components.span, {\n    className: \"hljs-keyword\"\n  }, \"select\"), \" count(*) from tpch.tiny.customer;\\n\")), \"\\n\", React.createElement(_components.p, null, \"You can also tell Presto which schema you want to work with by using the USE command.\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"5\"\n  }, \"\\n\", React.createElement(_components.li, null, \"First, run the following command to see the schemas in the tpch catalog.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  show schemas \", React.createElement(_components.span, {\n    className: \"hljs-keyword\"\n  }, \"in\"), \" tpch;\\n\")), \"\\n\", React.createElement(_components.p, null, \"The output should be similar to the text below.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/103/show-schema.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"6\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Run the following \", React.createElement(_components.strong, null, \"USE\"), \" command to set the schema for the current session:\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  use tpch.tiny;\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"7\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Run the following query. Note how the catalog and schema aren’t required. Again, this should return a count of 1,500 rows.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  \", React.createElement(_components.span, {\n    className: \"hljs-keyword\"\n  }, \"select\"), \" count(*) from customer;\\n\")), \"\\n\", React.createElement(_components.p, null, \"Alternatively, you can provide the session catalog and schema (or just the catalog) when you start the Presto CLI. Note that even if you specify the catalog and schema when starting the Presto CLI or by running the USE command, you can still access tables in other schemas and catalogs. You just have to specify the full 3-part name for them (or USE the schema in question to change the default for the session).\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"8\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Quit from the Presto CLI by running the following command.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  quit;\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"9\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Start the Presto CLI again, but this time specify the session catalog and schema as command line options.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  ./presto-cli --catalog tpch --schema tiny\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"10\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Run the following query. Note how this time the catalog and schema aren’t required. Again, this should return a count of 1,500 rows.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  \", React.createElement(_components.span, {\n    className: \"hljs-keyword\"\n  }, \"select\"), \" count(*) from customer;\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"11\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Quit from the Presto CLI by running the following command.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  quit;\\n\")), \"\\n\", React.createElement(_components.p, null, \"Next, you will create a new schema and table. When using Presto to create a schema in watsonx.data, you must specify the object storage bucket associated with the catalog.\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"12\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Start the Presto CLI and specify that you intend to use the iceberg_data catalog.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  ./presto-cli --catalog iceberg_data\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"13\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Run the following SQL statement to create a new schema in the catalog.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  create schema \", React.createElement(_components.span, {\n    className: \"hljs-keyword\"\n  }, \"if\"), \" not exists newschema with (location=\", React.createElement(_components.span, {\n    className: \"hljs-string\"\n  }, \"'s3a://iceberg-bucket/newschema'\"), \");\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"14\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Run the following command to see a list of the schemas in the catalog being used.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  show schemas;\\n\")), \"\\n\", React.createElement(_components.p, null, \"The newschema schema should be listed.\"), \"\\n\", React.createElement(QuizAlert, {\n    text: \"Quiz material: pay attention to the script\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"15\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Run the following SQL statements to create a new table in this schema, populate the table with some data, and then query the table.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  create table newschema.users (\", React.createElement(_components.span, {\n    className: \"hljs-built_in\"\n  }, \"id\"), \" int, name varchar, age int);\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  insert into newschema.users values (1, \", React.createElement(_components.span, {\n    className: \"hljs-string\"\n  }, \"'Robert'\"), \", 54);\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  insert into newschema.users values (2, \", React.createElement(_components.span, {\n    className: \"hljs-string\"\n  }, \"'Susan'\"), \", 37);\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  \", React.createElement(_components.span, {\n    className: \"hljs-keyword\"\n  }, \"select\"), \" * from newschema.users;\\n\")), \"\\n\", React.createElement(_components.p, null, \"The output of the final SELECT statement should look similar to what is shown below.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/103/select-user.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"16\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Run the following two commands to show the table in the new schema.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  use newschema;\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  show tables;\\n\")), \"\\n\", React.createElement(_components.p, null, \"The output of the SHOW TABLES statement should look similar to what is shown below.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/103/show-table.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"17\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Quit from the Presto CLI by running the following command.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"  quit;\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"18\"\n  }, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Open the watsonx.data user interface in a browser window (if you don’t already have one open).\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Select the \", React.createElement(_components.strong, null, \"Data manager\"), \" icon from the left-side menu.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Expand the \", React.createElement(_components.strong, null, \"iceberg_data\"), \" catalog to see the new schema you created (newschema).\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/103/ui-newschema.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Note:\"), \" If you don’t see the schema listed then hover your mouse pointer over the far right of the line for the iceberg_data catalog until you see the Refresh icon appear. Click the Refresh icon. You should now see the schema listed as in the above image.\"), \"\\n\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"21\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Expand the \", React.createElement(_components.strong, null, \"newschema\"), \" schema to see the new table you created (users).\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/103/ui-newschema-table.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"The table you created through the Presto CLI is visible through the watsonx.data user interface. This is one of the benefits of having a shared metastore. In the future, any query engines that get associated with the iceberg_data catalog would also be able to work with this table.\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"presto-web-interface\"\n  }, React.createElement(_components.h2, {\n    id: \"presto-web-interface\"\n  }, React.createElement(_components.a, {\n    href: \"#presto-web-interface\"\n  }, \"Presto Web Interface\")), \"\\n\", React.createElement(_components.p, null, \"Presto includes its own web interface (console) for monitoring and managing Presto queries. It’s a great place to get information about running queries and completed queries. This includes the query text, query state, the name of the user that ran the query, and the percentage complete if it’s still running.\"), \"\\n\", React.createElement(_components.p, null, \"Each query is assigned a unique Query ID and clicking on the ID brings up a Query Details page with additional information regarding the query.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"From your computer, open the Presto console in your browser. The URL can be found in your \", React.createElement(_components.strong, null, \"TechZone reservation details\"), \" (see the Presto console line in the Published services section)\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/103/presto.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"You immediately start on the \", React.createElement(_components.strong, null, \"Cluster Overview\"), \" page. The upper portion of the page includes various metrics regarding the environment.\"), \"\\n\", React.createElement(_components.p, null, \"The Query Details section at the bottom of the page lists queries matching the State filter being applied. By default, only actively running queries are shown and so you probably don’t see any queries listed here.\"), \"\\n\", React.createElement(QuizAlert, {\n    text: \"Quiz material: pay attention to all options in the Query Details page\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Select the \", React.createElement(_components.strong, null, \"Finished\"), \" button to include queries that have finished running.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/103/presto-finished.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"You should now see queries listed. You may recognize some as queries you ran, and others may have been run internally by the system.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/103/presto-query-detail.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"3\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Click the \", React.createElement(_components.strong, null, \"Query ID\"), \" link for a query that looks interesting to you.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/103/presto-query-id.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"4\"\n  }, \"\\n\", React.createElement(_components.li, null, \"This opens a new browser window with the Query Details page for that specific query. There are multiple tabs, and you start in the \", React.createElement(_components.strong, null, \"Overview\"), \" tab by default.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/103/presto-query-id-detail.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"5\"\n  }, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Scroll down the page to familiarize yourself with the information available.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Select the \", React.createElement(_components.strong, null, \"Live Plan\"), \" tab at the top of the page.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/103/presto-query-id-live-plan.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Here you can see the query’s execution plan and the various steps involved in running the query (your execution plan will look different as it depends on the query you chose). This output is similar to what you see in the visual explain output for watsonx.data.\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"7\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Click the \", React.createElement(_components.strong, null, \"Presto logo\"), \" in the top-left to return to the \", React.createElement(_components.strong, null, \"Cluster Overview\"), \" page.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/103/presto-logo.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"8\"\n  }, \"\\n\", React.createElement(_components.li, null, \"When you’re done exploring the Presto console, close the browser window (and any other Presto console windows that are still open).\"), \"\\n\"), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"3\",\n    \"aria-labelledby\": \"congratulations-youve-reached-the-end-of-lab-103\"\n  }, React.createElement(_components.h3, {\n    id: \"congratulations-youve-reached-the-end-of-lab-103\"\n  }, React.createElement(_components.a, {\n    href: \"#congratulations-youve-reached-the-end-of-lab-103\"\n  }, \"Congratulations, you've reached the end of lab 103.\")), \"\\n\", React.createElement(_components.p, null, \"Click, \", React.createElement(_components.a, {\n    href: \"/watsonx/watsonxdata/104\"\n  }, \"lab 104\"), \" to start next lab.\")))));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/VAD-VAR-Workshop/VAD-VAR-Workshop/content/Watsonx/WatsonxData/103.md\";\nimport React, {useRef, useState} from 'react';\nimport cx from 'classnames';\nimport SEO from '@components/SEO';\nimport PageHeader from '@components/PageHeader';\nimport MDXWrapper from '@components/MDXWrapper';\nimport ContentWrapper from '@components/ContentWrapper';\nimport TableOfContents from '@components/TableOfContents';\nimport * as styles from '@styles/pages/{mdx.fields__slug}.module.scss';\nconst Content = props => {\n  const {data: {mdx: {tableOfContents: {items: tocItems}, frontmatter: {toc = true, title, timeToComplete, updated}}}, children} = props;\n  const articleRef = useRef(null);\n  const {0: currSection} = useState('');\n  const showToc = (toc === null ? true : toc) && tocItems;\n  return React.createElement(React.Fragment, null, React.createElement(PageHeader, {\n    timeToComplete,\n    updated\n  }, tocItems[0].title || title || ''), React.createElement(ContentWrapper, {\n    className: styles.wrapper\n  }, React.createElement(\"article\", {\n    className: cx(styles.article, !showToc && styles.noToc),\n    ref: articleRef\n  }, React.createElement(MDXWrapper, {\n    components: {\n      h1: () => null\n    }\n  }, children)), showToc && React.createElement(TableOfContents, {\n    itemsList: tocItems,\n    maxDepth: 2,\n    currSection: currSection\n  })));\n};\nconst pageQuery = \"3587680389\";\nexport const Head = props => {\n  const {location: {pathname}, data: {mdx: {frontmatter: {title}, tableOfContents: {items}}}} = props;\n  return React.createElement(SEO, {\n    pathname,\n    title: title || items[0].title || undefined\n  });\n};\nContent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Content, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React, { memo } from 'react';\nimport { MDXProvider } from '@mdx-js/react';\nimport { Props } from '@mdx-js/react/lib';\nimport {\n  BlockQuote,\n  CodeBlock,\n  CopyText,\n  Danger,\n  ImageWrapper,\n  QuizAlert,\n  SmartLink,\n  SubHeader,\n  TableWrapper,\n  Warning\n} from '../replacements';\n\ninterface MDXWrapperProps {\n  children: React.ReactNode;\n  components?: Props['components'];\n}\n\nconst standardComponents: Props['components'] = {\n  table: TableWrapper,\n  a: SmartLink,\n  blockquote: BlockQuote,\n  SubHeader: SubHeader,\n  img: ImageWrapper,\n  code: CodeBlock,\n  QuizAlert,\n  Danger,\n  Warning,\n  CopyText: CopyText\n};\n\nconst MDXWrapper = memo(function MDXWrapper({ children, components = {} }: MDXWrapperProps) {\n  return (\n    <MDXProvider\n      components={{\n        ...standardComponents,\n        ...components\n      }}>\n      {children}\n    </MDXProvider>\n  );\n});\n\nexport default MDXWrapper;\n","import MDXWrapper from './MDXWrapper';\n\nexport default MDXWrapper;\n","import React, { useMemo } from 'react';\nimport { Link as GatsbyLink } from 'gatsby';\nimport cx from 'classnames';\nimport useCurrentHeading from '@hooks/useCurrentHeading';\nimport * as styles from './TableOfContents.module.scss';\n\ninterface TableOfContentsProps {\n  itemsList: TOCItem[];\n  currSection: string | undefined;\n  maxDepth?: number;\n}\n\ninterface TOCItem {\n  title: string;\n  url: string;\n  items?: TOCItem[];\n}\n\ninterface FlatTOCItem extends Omit<TOCItem, 'items'> {\n  depth: number;\n}\n\nconst flattenTOC = (toc: TOCItem[], flatList: FlatTOCItem[] = [], depth = 0): FlatTOCItem[] => {\n  toc.forEach((item) => {\n    const { title, url, items } = item;\n    flatList.splice(flatList.length, 0, {\n      depth,\n      title,\n      url\n    });\n\n    if (items && items.length > 0) flattenTOC(items, flatList, depth + 1);\n  });\n\n  return flatList;\n};\n\nconst TableOfContents = (props: TableOfContentsProps) => {\n  const { itemsList } = props;\n\n  const flatTOC = useMemo(() => flattenTOC(itemsList[0].items || []), [itemsList]);\n\n  const currentSection = useCurrentHeading('h1[id],h2[id]', {\n    threshold: [0, 1],\n    rootMargin: `-${styles.headerHeight} 0px -90% 0px`\n  });\n\n  if (flatTOC.length < 1) return null;\n\n  return (\n    <nav className={styles.toc}>\n      <div className={styles.tocStack}>\n        <h6 className={styles.tocHeader}>\n          <GatsbyLink to='#' replace>\n            On this page\n          </GatsbyLink>\n        </h6>\n\n        {flatTOC.map(({ title, url }, index) => {\n          return (\n            <a\n              className={cx(styles.link, currentSection === url.substring(1) && styles.activeItem)}\n              key={index}\n              href={url}>\n              {title}\n            </a>\n          );\n        })}\n      </div>\n    </nav>\n  );\n};\n\nexport default TableOfContents;\n","import TableOfContents from './TableOfContents';\n\nexport default TableOfContents;\n","// extracted by mini-css-extract-plugin\nexport var activeItem = \"TableOfContents-module--activeItem--3869f\";\nexport var headerHeight = \"48px\";\nexport var link = \"TableOfContents-module--link--b292b\";\nexport var toc = \"TableOfContents-module--toc--54d35\";\nexport var tocHeader = \"TableOfContents-module--tocHeader--05956\";\nexport var tocStack = \"TableOfContents-module--tocStack--90609\";","// extracted by mini-css-extract-plugin\nexport var article = \"{mdx-fields__slug}-module--article--e3d5a\";\nexport var noToc = \"{mdx-fields__slug}-module--noToc--82387\";\nexport var wrapper = \"{mdx-fields__slug}-module--wrapper--58e72\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","section","h1","p","a","h2","ol","li","pre","code","span","img","strong","blockquote","h3","_provideComponents","components","QuizAlert","id","component","Error","_missingMdxReference","React","text","className","href","start","src","alt","wrapper","MDXLayout","Content","data","mdx","tableOfContents","items","tocItems","frontmatter","toc","title","timeToComplete","updated","children","articleRef","useRef","currSection","useState","showToc","PageHeader","ContentWrapper","styles","cx","ref","MDXWrapper","TableOfContents","itemsList","maxDepth","Head","location","pathname","SEO","undefined","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","standardComponents","table","TableWrapper","SmartLink","BlockQuote","SubHeader","ImageWrapper","CodeBlock","Danger","Warning","CopyText","memo","_ref","MDXProvider","flattenTOC","flatList","depth","forEach","item","url","splice","length","flatTOC","useMemo","currentSection","useCurrentHeading","threshold","rootMargin","GatsbyLink","to","replace","map","index","substring","key","article","noToc","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}