{"version":3,"file":"component---src-pages-mdx-fields-slug-tsx-content-file-path-content-q-radar-siem-104-es-md-f86005f2fc502dd42fc2.js","mappings":"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","sources":["webpack://vad-var-site/./content/QRadar-SIEM/104.es.md","webpack://vad-var-site/./src/pages/{mdx.fields__slug}.tsx","webpack://vad-var-site/./src/components/MDXWrapper/MDXWrapper.tsx","webpack://vad-var-site/./src/components/MDXWrapper/index.ts","webpack://vad-var-site/./src/components/TableOfContents/TableOfContents.tsx","webpack://vad-var-site/./src/components/TableOfContents/index.ts","webpack://vad-var-site/./src/components/TableOfContents/TableOfContents.module.scss","webpack://vad-var-site/./src/styles/pages/{mdx.fields__slug}.module.scss","webpack://vad-var-site/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    section: \"section\",\n    h1: \"h1\",\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    h3: \"h3\",\n    blockquote: \"blockquote\",\n    strong: \"strong\",\n    ol: \"ol\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    img: \"img\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    ul: \"ul\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"1\",\n    \"aria-labelledby\": \"fuentes-de-registro\"\n  }, React.createElement(_components.h1, {\n    id: \"fuentes-de-registro\"\n  }, \"Fuentes de registro\"), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"introducción\"\n  }, React.createElement(_components.h2, {\n    id: \"introducción\"\n  }, React.createElement(_components.a, {\n    href: \"#introducción\"\n  }, \"Introducción\")), \"\\n\", React.createElement(_components.p, null, \"Las funciones principales de IBM QRadar SIEM son gestionar la seguridad de la red mediante la supervisión de flujos y eventos.\"), \"\\n\", React.createElement(_components.p, null, \"Una diferencia significativa entre los datos de eventos y de flujo es que un evento, que normalmente es un registro de una acción específica como el inicio de sesión de un usuario, o una conexión VPN, ocurre en un momento específico y el evento se registra en ese momento. Un flujo es un registro de actividad de red que puede durar segundos, minutos, horas o días, dependiendo de la actividad dentro de la sesión. Por ejemplo, una petición web puede descargar varios archivos como imágenes, anuncios, vídeo, y durar entre 5 y 10 segundos, o un usuario que ve una película de Netflix puede estar en una sesión de red que dure hasta unas horas. El flujo es un registro de la actividad de red entre dos hosts.\"), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"3\",\n    \"aria-labelledby\": \"eventos\"\n  }, React.createElement(_components.h3, {\n    id: \"eventos\"\n  }, React.createElement(_components.a, {\n    href: \"#eventos\"\n  }, \"Eventos\")), \"\\n\", React.createElement(_components.p, null, \"QRadar acepta registros de eventos de fuentes de registro que están en su red. Una fuente de registro es una fuente de datos como un cortafuegos o un sistema de protección contra intrusiones (IPS) que crea un registro de eventos.\"), \"\\n\", React.createElement(_components.p, null, \"QRadar acepta eventos de fuentes de registro usando protocolos como syslog, syslog-tcp, y SNMP. QRadar también puede configurar conexiones salientes para recuperar eventos usando protocolos como SCP, SFTP, FTP, JDBC, Check Point OPSEC, y SMB/CIFS.\"), \"\\n\", React.createElement(_components.p, null, \"Si QRadar nunca ha recibido eventos de una fuente de registro, los nuevos eventos son listados con una Categoría de Bajo Nivel de \\\"Desconocido\\\" en la pestaña de Actividad de Registro. QRadar puede autodescubrir muchas fuentes de registro, y después de una cierta cantidad de tiempo (o eventos de registro procesados), QRadar asignará apropiadamente la fuente de registro correcta. A veces, sin embargo, QRadar no puede averiguar la fuente de registro correcta detrás de los datos recolectados, y esos eventos muestran una Categoría de Bajo Nivel de \\\"Almacenado\\\".\"), \"\\n\", React.createElement(_components.p, null, \"En este laboratorio, usted configura QRadar para reconocer un evento desconocido. Extraerá propiedades adicionales de la carga útil del evento sin procesar. Utilizará la aplicación Log Source Management (LSM) para configurar y gestionar fuentes de registro individuales y masivas. También probará una nueva fuente de registro.\"), \"\\n\")), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"análisis-de-un-suceso-desconocido\"\n  }, React.createElement(_components.h2, {\n    id: \"análisis-de-un-suceso-desconocido\"\n  }, React.createElement(_components.a, {\n    href: \"#análisis-de-un-suceso-desconocido\"\n  }, \"Análisis de un suceso desconocido\")), \"\\n\", React.createElement(_components.p, null, \"En este ejercicio, analizará un evento recibido de una fuente de registro desconocida. Cuando es procesado por el canal de eventos, este tipo de evento es etiquetado como CONOCIDO. Cuando se detectan eventos para un tipo de fuente de registro incorrecto, se les asigna la categoría de bajo nivel ALMACENADO. Una vez analizados, puede decidir qué nuevas fuentes de registro necesita crear.\"), \"\\n\", React.createElement(_components.p, null, \"Para simular el envío de las fuentes de registro a QRadar, inicie sesión en la consola de QRadar mediante el terminal SSH y ejecute un script.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Si está utilizando la VPN WireGuard configurada en \", React.createElement(_components.strong, null, \"101: Configuración de demostración de QRadar\"), \" para acceder al entorno de demostración, podrá realizar las siguientes actividades desde su estación de trabajo. Si no ha configurado el acceso VPN puede realizar las actividades desde el servidor de salto.\"), \"\\n\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Abra el navegador y acceda a la Consola en la siguiente URL:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"https://172.16.60.10\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Inicie sesión con la cuenta de administrador y la contraseña \\\"Q1d3m0.Demo\\\".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Para cargar los filtros de búsqueda predeterminados, haga doble clic en la pestaña \", React.createElement(_components.strong, null, \"Actividad de registro\"), \".\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Estos ejercicios clásicos QRadar UI y no el Nuevo QRadar UI.\"), \"\\n\", React.createElement(_components.p, null, \"Si necesita volver a la interfaz de usuario clásica, vaya a la URL: \", React.createElement(_components.a, {\n    href: \"https://172.16.60.10\"\n  }, \"https://172.16.60.10.\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"NO cierre el navegador. Mientras el navegador espera para mostrar los eventos en tiempo real, abra el terminal SSH e inicie sesión en QRadar como root mediante el siguiente comando:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"ssh root@172.16.60.10\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"En el indicador de contraseña, escriba \\\"Q1d3m0\\\".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Para generar eventos, escriba los siguientes comandos:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, React.createElement(_components.span, {\n    className: \"hljs-built_in\"\n  }, \"cd\"), \" /labfiles/extended/labfiles/logsources\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"/opt/qradar/bin/logrun.pl -f checkpoint1.syslog 1\\n\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"El directorio /labfiles/extended/labfiles fue subido al servidor QRadar en los ejercicios \", React.createElement(_components.strong, null, \"103: Configuración Avanzada de Laboratorio\"), \".\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Vuelva a la ventana del navegador.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Nota:\"), \" La Consola detectó tres eventos con la Categoría de Bajo Nivel ALMACENADO. Debido a que usamos el contexto localhost para estos eventos (127.0.0.1), el Nombre del Evento puede variar. En las capturas de pantalla de abajo se ve un Nombre de Evento de \\\"Mensaje de Resultados de Búsqueda\\\", pero también puede ser \\\"Motor de Detección de Anomalías\\\" u otros.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Para abrir cualquiera de los eventos, haga clic en el icono de \", React.createElement(_components.strong, null, \"pausa\"), \" situado en la parte superior derecha de la Consola. Esta acción pausa la captura de eventos en tiempo real.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Para revisar los detalles del evento, haga doble clic en cualquiera de los tres eventos.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1689803286693.274292019/image6.jpeg\",\n    alt: \"\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"En la página Detalles del evento, desplácese hasta la sección Información de la carga útil y haga clic en \", React.createElement(_components.strong, null, \"Ajustar texto\"), \".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1689803286701.2742292030/image7.jpeg\",\n    alt: \"\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Analice la carga útil sin procesar y observe que las direcciones IP de origen y destino no se analizan correctamente comparando las direcciones con las que aparecen en la sección Información de origen y destino.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"En este punto, usted concluye que QRadar no procesó correctamente este evento. Puede determinar la fuente del registro generado y crear una fuente de registro adecuada. Además, en muchas ocasiones, si QRadar recibe suficientes eventos de registro para procesar, puede autodescubrir la fuente de registro y decidir la fuente de registro que mejor coincida con los eventos.\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"visualización-de-fuentes-de-registro-autodescubiertas\"\n  }, React.createElement(_components.h2, {\n    id: \"visualización-de-fuentes-de-registro-autodescubiertas\"\n  }, React.createElement(_components.a, {\n    href: \"#visualización-de-fuentes-de-registro-autodescubiertas\"\n  }, \"Visualización de fuentes de registro autodescubiertas\")), \"\\n\", React.createElement(_components.p, null, \"QRadar autodescubre muchas fuentes de registro después de recibir varios registros de un tipo específico. No necesita configurar la fuente de registro para que QRadar reconozca los eventos de esa fuente de registro. En este ejercicio, analizará una fuente de registro autodescubierta.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Empiece por la Consola. Para cargar los filtros de búsqueda predeterminados, haga doble clic en la pestaña \", React.createElement(_components.strong, null, \"Actividad de registro\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"A continuación, en el terminal SSH de QRadar, ejecute el siguiente script desde el directorio /labfiles/extended/labfiles/logsources:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"/opt/qradar/bin/logrun.pl -f checkpoint.syslog 10\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Vuelva a la ventana del navegador y observe los eventos que se muestran en la Consola.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Transcurridos unos 30 segundos, observará que la columna Event Name comienza a mostrar Firewall Permit, el LogSource se denomina Check Point y Low Level Category se actualiza a Firewall Permit.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1689803286705.2742292040/image8.jpeg\",\n    alt: \"\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Para pausar los eventos en tiempo real, en la parte superior derecha de la Consola, haga clic en el icono de \", React.createElement(_components.strong, null, \"pausa\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Haga doble clic en cualquier evento \", React.createElement(_components.strong, null, \"Firewall Permit\"), \" y observe que la IP de origen y la IP de destino analizadas coinciden con las direcciones IP de la carga útil sin procesar.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1689803286709.2742292051/image9.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Usted aprendió que QRadar puede autodescubrir algunos registros después de recibir algunos eventos. Sin embargo, no todos los registros son autodescubiertos, y para estos, usted debe crear fuentes de registro manualmente usando la aplicación Log Source Management. Si no quiere perder parte de la información de los primeros eventos mientras espera a que QRadar los analice, también puede utilizar este método para las fuentes de registro autodescubiertas.\"), \"\\n\"), \"\\n\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"utilice-la-aplicación-log-source-management-para-configurar-una-fuente-de-registro\"\n  }, React.createElement(_components.h2, {\n    id: \"utilice-la-aplicación-log-source-management-para-configurar-una-fuente-de-registro\"\n  }, React.createElement(_components.a, {\n    href: \"#utilice-la-aplicación-log-source-management-para-configurar-una-fuente-de-registro\"\n  }, \"Utilice la aplicación Log Source Management para configurar una fuente de registro\")), \"\\n\", React.createElement(_components.p, null, \"En este ejercicio, configurará un origen de registro de Symantec Endpoint Protection y analizará los eventos de este origen de registro. Para configurar un origen de registro, debe utilizar la aplicación Log Source Management (LSM).\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Desde el navegador, vaya a la Admin Console.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"En Admin Console, desplácese hasta la sección Apps y haga clic en \", React.createElement(_components.strong, null, \"QRadar Log Source Management\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"En la aplicación LSM, haga clic en \", React.createElement(_components.strong, null, \"Fuentes de registro.\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"En el panel de control de la aplicación LSM, en la parte superior derecha de la ventana, haga clic en \", React.createElement(_components.strong, null, \"Nueva fuente de registro\"), \".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1689803286685.2737291966/image12.png\",\n    alt: \"\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Haga clic en \", React.createElement(_components.strong, null, \"Fuente de registro única\"), \".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1689803286685.2737291970/image13.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Deténgase y navegue a través de la larga lista de fuentes de registro disponibles. Esto le muestra todas las fuentes de registro con las que QRadar puede integrarse.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"En el paso Seleccionar un tipo de origen de registro, en el campo \", React.createElement(_components.strong, null, \"Buscar tipo de origen de registro\"), \", escriba \\\"Symantec\\\".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1689803286685.2737291971/image14.png\",\n    alt: \"\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"En la lista, seleccione \", React.createElement(_components.strong, null, \"Symantec Endpoint Protection\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Haga clic en \", React.createElement(_components.strong, null, \"Paso 2: Seleccionar tipo de protocolo\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"En el paso Seleccionar tipo de protocolo, confirme que \", React.createElement(_components.strong, null, \"Syslog\"), \" está resaltado.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1689803286685.2737291972/image15.png\",\n    alt: \"\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Haga clic en \", React.createElement(_components.strong, null, \"Paso 3: Configurar parámetros de origen de registro\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"En el paso Configurar parámetros de origen de registro, complete los parámetros utilizando la siguiente tabla.\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, React.createElement(_components.strong, null, \"Parámetro\")), React.createElement(_components.th, null, React.createElement(_components.strong, null, \"Valor\")))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, \"Nombre\"), React.createElement(_components.td, null, \"Protección de endpoints\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"Descripción\"), React.createElement(_components.td, null, \"Protección de puntos finales de Symantec\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"Eventos coalescentes\"), React.createElement(_components.td, null, \"OFF (desactivado)\")))), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Haga clic en \", React.createElement(_components.strong, null, \"Paso 4: Configurar parámetros de protocolo\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"En el campo \", React.createElement(_components.strong, null, \"Identificador de origen de registro\"), \", escriba <provided de instancia de QRadar proporcionada>..\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Haga clic en \", React.createElement(_components.strong, null, \"Finalizar\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Cierre la aplicación \", React.createElement(_components.strong, null, \"Log Source Management\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"En Admin Console, aparece el mensaje \\\"Hay cambios sin desplegar\\\". Haga clic en \", React.createElement(_components.strong, null, \"Desplegar cambios\"), \".\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Sugerencia:\"), \" La implementación de cambios en el entorno de laboratorio puede tardar entre 1 y 2 minutos.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Ha creado manualmente un nuevo origen de registro que utiliza el protocolo syslog. Después de crear una nueva fuente de registro, debe implementar los cambios en la Consola.\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"resumen\"\n  }, React.createElement(_components.h2, {\n    id: \"resumen\"\n  }, React.createElement(_components.a, {\n    href: \"#resumen\"\n  }, \"Resumen\")), \"\\n\", React.createElement(_components.p, null, \"Esta ha sido una introducción muy rápida a las fuentes de registro de QRadar. Usted ha visto\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Cómo ver el flujo de registro sin procesar de QRadar\"), \"\\n\", React.createElement(_components.li, null, \"Cómo analizar un evento que hace de una fuente no reconocida\"), \"\\n\", React.createElement(_components.li, null, \"Cómo configurar una fuente de registro\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Para ver las aplicaciones que proporcionan fuentes de registro para QRadar, visite X-Force App Exchange en: \", React.createElement(_components.a, {\n    href: \"https://exchange.xforce.ibmcloud.com/hub?br=QRadar&con=CO31&ippc=64&ippr=64\"\n  }, \"https://exchange.xforce.ibmcloud.com/hub?br=QRadar&con=CO31&ippc=64&ippr=64.\"))));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/VAD-VAR-Workshop/VAD-VAR-Workshop/content/QRadar-SIEM/104.es.md\";\nimport React, {useRef, useState} from 'react';\nimport cx from 'classnames';\nimport SEO from '@components/SEO';\nimport PageHeader from '@components/PageHeader';\nimport MDXWrapper from '@components/MDXWrapper';\nimport ContentWrapper from '@components/ContentWrapper';\nimport TableOfContents from '@components/TableOfContents';\nimport * as styles from '@styles/pages/{mdx.fields__slug}.module.scss';\nconst Content = props => {\n  const {data: {mdx: {tableOfContents: {items: tocItems}, frontmatter: {toc = true, title, timeToComplete, updated}}}, children} = props;\n  const articleRef = useRef(null);\n  const {0: currSection} = useState('');\n  const showToc = (toc === null ? true : toc) && tocItems;\n  return React.createElement(React.Fragment, null, React.createElement(PageHeader, {\n    timeToComplete,\n    updated\n  }, tocItems[0].title || title || ''), React.createElement(ContentWrapper, {\n    className: styles.wrapper\n  }, React.createElement(\"article\", {\n    className: cx(styles.article, !showToc && styles.noToc),\n    ref: articleRef\n  }, React.createElement(MDXWrapper, {\n    components: {\n      h1: () => null\n    }\n  }, children)), showToc && React.createElement(TableOfContents, {\n    itemsList: tocItems,\n    maxDepth: 2,\n    currSection: currSection\n  })));\n};\nconst pageQuery = \"3587680389\";\nexport const Head = props => {\n  const {location: {pathname}, data: {mdx: {frontmatter: {title}, tableOfContents: {items}}}} = props;\n  return React.createElement(SEO, {\n    pathname,\n    title: title || items[0].title || undefined\n  });\n};\nContent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Content, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React, { memo } from 'react';\nimport { MDXProvider } from '@mdx-js/react';\nimport { Props } from '@mdx-js/react/lib';\nimport {\n  BlockQuote,\n  CodeBlock,\n  CopyText,\n  Danger,\n  ImageWrapper,\n  QuizAlert,\n  SmartLink,\n  SubHeader,\n  TableWrapper,\n  Warning\n} from '../replacements';\n\ninterface MDXWrapperProps {\n  children: React.ReactNode;\n  components?: Props['components'];\n}\n\nconst standardComponents: Props['components'] = {\n  table: TableWrapper,\n  a: SmartLink,\n  blockquote: BlockQuote,\n  SubHeader: SubHeader,\n  img: ImageWrapper,\n  code: CodeBlock,\n  QuizAlert,\n  Danger,\n  Warning,\n  CopyText: CopyText\n};\n\nconst MDXWrapper = memo(function MDXWrapper({ children, components = {} }: MDXWrapperProps) {\n  return (\n    <MDXProvider\n      components={{\n        ...standardComponents,\n        ...components\n      }}>\n      {children}\n    </MDXProvider>\n  );\n});\n\nexport default MDXWrapper;\n","import MDXWrapper from './MDXWrapper';\n\nexport default MDXWrapper;\n","import React, { useMemo } from 'react';\nimport { Link as GatsbyLink } from 'gatsby';\nimport cx from 'classnames';\nimport useCurrentHeading from '@hooks/useCurrentHeading';\nimport * as styles from './TableOfContents.module.scss';\n\ninterface TableOfContentsProps {\n  itemsList: TOCItem[];\n  currSection: string | undefined;\n  maxDepth?: number;\n}\n\ninterface TOCItem {\n  title: string;\n  url: string;\n  items?: TOCItem[];\n}\n\ninterface FlatTOCItem extends Omit<TOCItem, 'items'> {\n  depth: number;\n}\n\nconst flattenTOC = (toc: TOCItem[], flatList: FlatTOCItem[] = [], depth = 0): FlatTOCItem[] => {\n  toc.forEach((item) => {\n    const { title, url, items } = item;\n    flatList.splice(flatList.length, 0, {\n      depth,\n      title,\n      url\n    });\n\n    if (items && items.length > 0) flattenTOC(items, flatList, depth + 1);\n  });\n\n  return flatList;\n};\n\nconst TableOfContents = (props: TableOfContentsProps) => {\n  const { itemsList } = props;\n\n  const flatTOC = useMemo(() => flattenTOC(itemsList[0].items || []), [itemsList]);\n\n  const currentSection = useCurrentHeading('h1[id],h2[id]', {\n    threshold: [0, 1],\n    rootMargin: `-${styles.headerHeight} 0px -90% 0px`\n  });\n\n  if (flatTOC.length < 1) return null;\n\n  return (\n    <nav className={styles.toc}>\n      <div className={styles.tocStack}>\n        <h6 className={styles.tocHeader}>\n          <GatsbyLink to='#' replace>\n            On this page\n          </GatsbyLink>\n        </h6>\n\n        {flatTOC.map(({ title, url }, index) => {\n          return (\n            <a\n              className={cx(styles.link, currentSection === url.substring(1) && styles.activeItem)}\n              key={index}\n              href={url}>\n              {title}\n            </a>\n          );\n        })}\n      </div>\n    </nav>\n  );\n};\n\nexport default TableOfContents;\n","import TableOfContents from './TableOfContents';\n\nexport default TableOfContents;\n","// extracted by mini-css-extract-plugin\nexport var activeItem = \"TableOfContents-module--activeItem--3869f\";\nexport var headerHeight = \"48px\";\nexport var link = \"TableOfContents-module--link--b292b\";\nexport var toc = \"TableOfContents-module--toc--54d35\";\nexport var tocHeader = \"TableOfContents-module--tocHeader--05956\";\nexport var tocStack = \"TableOfContents-module--tocStack--90609\";","// extracted by mini-css-extract-plugin\nexport var article = \"{mdx-fields__slug}-module--article--e3d5a\";\nexport var noToc = \"{mdx-fields__slug}-module--noToc--82387\";\nexport var wrapper = \"{mdx-fields__slug}-module--wrapper--58e72\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","section","h1","h2","a","p","h3","blockquote","strong","ol","li","pre","code","span","img","table","thead","tr","th","tbody","td","ul","_provideComponents","components","React","className","id","href","src","alt","wrapper","MDXLayout","Content","data","mdx","tableOfContents","items","tocItems","frontmatter","toc","title","timeToComplete","updated","children","articleRef","useRef","currSection","useState","showToc","PageHeader","ContentWrapper","styles","cx","ref","MDXWrapper","TableOfContents","itemsList","maxDepth","Head","location","pathname","SEO","undefined","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","standardComponents","TableWrapper","SmartLink","BlockQuote","SubHeader","ImageWrapper","CodeBlock","QuizAlert","Danger","Warning","CopyText","memo","_ref","MDXProvider","flattenTOC","flatList","depth","forEach","item","url","splice","length","flatTOC","useMemo","currentSection","useCurrentHeading","threshold","rootMargin","GatsbyLink","to","replace","map","index","substring","key","article","noToc","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}