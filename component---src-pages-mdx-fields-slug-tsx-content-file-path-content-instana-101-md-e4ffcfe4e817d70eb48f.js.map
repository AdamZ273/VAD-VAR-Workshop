{"version":3,"file":"component---src-pages-mdx-fields-slug-tsx-content-file-path-content-instana-101-md-e4ffcfe4e817d70eb48f.js","mappings":"iNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,QAAS,UACTC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,IAAK,MACLC,OAAQ,SACRC,GAAI,KACJC,KAAM,SACLC,EAAAA,EAAAA,MAAsBf,EAAMgB,YAC/B,OAAOC,EAAAA,cAAoBhB,EAAYG,QAAS,CAC9Cc,UAAW,UACX,oBAAqB,IACrB,kBAAmB,kBAClBD,EAAAA,cAAoBhB,EAAYI,GAAI,CACrCc,GAAI,kBACH,mBAAoB,KAAMF,EAAAA,cAAoBhB,EAAYG,QAAS,CACpEc,UAAW,UACX,oBAAqB,IACrB,kBAAmB,QAClBD,EAAAA,cAAoBhB,EAAYK,GAAI,CACrCa,GAAI,QACHF,EAAAA,cAAoBhB,EAAYM,EAAG,CACpCa,KAAM,SACL,SAAU,KAAMH,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,sLAAuL,MAAOS,EAAAA,cAAoBhB,EAAYG,QAAS,CACjSc,UAAW,UACX,oBAAqB,IACrB,kBAAmB,uBAClBD,EAAAA,cAAoBhB,EAAYK,GAAI,CACrCa,GAAI,uBACHF,EAAAA,cAAoBhB,EAAYM,EAAG,CACpCa,KAAM,wBACL,wBAAyB,KAAMH,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,2FAA4FS,EAAAA,cAAoBhB,EAAYM,EAAG,CACxMa,KAAM,gCACL,iCAAkC,KAAMH,EAAAA,cAAoBhB,EAAYQ,GAAI,KAAM,KAAMQ,EAAAA,cAAoBhB,EAAYS,GAAI,KAAM,KAAMO,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,2JAA4J,KAAMS,EAAAA,cAAoBhB,EAAYU,IAAK,CACzXU,IAAK,iDACLC,IAAK,KACH,MAAO,KAAML,EAAAA,cAAoBhB,EAAYS,GAAI,KAAM,KAAMO,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,8FAA+F,KAAMS,EAAAA,cAAoBhB,EAAYU,IAAK,CAClPU,IAAK,oDACLC,IAAK,KACH,MAAO,MAAO,MAAOL,EAAAA,cAAoBhB,EAAYG,QAAS,CAChEc,UAAW,UACX,oBAAqB,IACrB,kBAAmB,qCAClBD,EAAAA,cAAoBhB,EAAYK,GAAI,CACrCa,GAAI,qCACHF,EAAAA,cAAoBhB,EAAYM,EAAG,CACpCa,KAAM,sCACL,sCAAuC,KAAMH,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,wFAAyFS,EAAAA,cAAoBhB,EAAYW,OAAQ,KAAM,kBAAmB,oCAAqC,KAAMK,EAAAA,cAAoBhB,EAAYQ,GAAI,KAAM,KAAMQ,EAAAA,cAAoBhB,EAAYS,GAAI,KAAM,KAAMO,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,gBAAiBS,EAAAA,cAAoBhB,EAAYY,GAAI,KAAMI,EAAAA,cAAoBhB,EAAYW,OAAQ,KAAM,mBAAoB,wDAAyD,KAAMK,EAAAA,cAAoBhB,EAAYU,IAAK,CACtoBU,IAAK,wDACLC,IAAK,KACH,KAAML,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,oFAAqF,KAAMS,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,wHAAyH,KAAMS,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,yPAA0P,KAAMS,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,uIAAwI,KAAMS,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,+DAAgES,EAAAA,cAAoBhB,EAAYY,GAAI,KAAM,iBAAkB,sUAAuU,KAAMI,EAAAA,cAAoBhB,EAAYU,IAAK,CAC3yCU,IAAK,gDACLC,IAAK,KACH,MAAO,MAAO,MAAOL,EAAAA,cAAoBhB,EAAYG,QAAS,CAChEc,UAAW,UACX,oBAAqB,IACrB,kBAAmB,aAClBD,EAAAA,cAAoBhB,EAAYK,GAAI,CACrCa,GAAI,aACHF,EAAAA,cAAoBhB,EAAYM,EAAG,CACpCa,KAAM,cACL,cAAe,KAAMH,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,qLAAsLS,EAAAA,cAAoBhB,EAAYY,GAAI,KAAM,uBAAwB,KAAM,KAAMI,EAAAA,cAAoBhB,EAAYU,IAAK,CACxWU,IAAK,iDACLC,IAAK,KACH,KAAML,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,yPAA0P,KAAMS,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,kMAAmM,MAAOS,EAAAA,cAAoBhB,EAAYG,QAAS,CAC7kBc,UAAW,UACX,oBAAqB,IACrB,kBAAmB,gBAClBD,EAAAA,cAAoBhB,EAAYK,GAAI,CACrCa,GAAI,gBACHF,EAAAA,cAAoBhB,EAAYM,EAAG,CACpCa,KAAM,iBACL,iBAAkB,KAAMH,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,8GAA+G,KAAMS,EAAAA,cAAoBhB,EAAYQ,GAAI,KAAM,KAAMQ,EAAAA,cAAoBhB,EAAYS,GAAI,KAAM,KAAMO,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,wGAAyG,MAAO,KAAMS,EAAAA,cAAoBhB,EAAYS,GAAI,KAAM,KAAMO,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,2CAA4C,KAAMS,EAAAA,cAAoBhB,EAAYQ,GAAI,KAAM,KAAMQ,EAAAA,cAAoBhB,EAAYS,GAAI,KAAM,KAAMO,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,YAAa,MAAO,KAAMS,EAAAA,cAAoBhB,EAAYS,GAAI,KAAM,KAAMO,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,aAAc,MAAO,KAAMS,EAAAA,cAAoBhB,EAAYS,GAAI,KAAM,KAAMO,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,0DAA2D,MAAO,MAAO,MAAO,KAAMS,EAAAA,cAAoBhB,EAAYS,GAAI,KAAM,KAAMO,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,2IAA4I,KAAMS,EAAAA,cAAoBhB,EAAYU,IAAK,CACvxCU,IAAK,kDACLC,IAAK,KACH,KAAML,EAAAA,cAAoBhB,EAAYO,EAAG,KAAMS,EAAAA,cAAoBhB,EAAYY,GAAI,KAAMI,EAAAA,cAAoBhB,EAAYW,OAAQ,KAAM,QAAS,iJAAkJ,KAAMK,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,qGAAsGS,EAAAA,cAAoBhB,EAAYY,GAAI,KAAM,yBAA0B,mTAAoTI,EAAAA,cAAoBhB,EAAYa,KAAM,KAAM,oCAAqC,MAAO,MAAO,MAAOG,EAAAA,cAAoBhB,EAAYG,QAAS,CACh8Bc,UAAW,UACX,oBAAqB,IACrB,kBAAmB,iBAClBD,EAAAA,cAAoBhB,EAAYK,GAAI,CACrCa,GAAI,iBACHF,EAAAA,cAAoBhB,EAAYM,EAAG,CACpCa,KAAM,kBACL,mBAAoB,KAAMH,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,wDAAyD,KAAMS,EAAAA,cAAoBhB,EAAYQ,GAAI,KAAM,KAAMQ,EAAAA,cAAoBhB,EAAYS,GAAI,KAAM,KAAMO,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,+CAAkD,MAAO,KAAMS,EAAAA,cAAoBhB,EAAYS,GAAI,KAAM,KAAMO,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,uCAAwCS,EAAAA,cAAoBhB,EAAYY,GAAI,KAAM,QAAS,8FAAiG,MAAO,KAAMI,EAAAA,cAAoBhB,EAAYS,GAAI,KAAM,KAAMO,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,kBAAmBS,EAAAA,cAAoBhB,EAAYY,GAAI,KAAM,qBAAsB,gFAAoFI,EAAAA,cAAoBhB,EAAYY,GAAI,KAAM,OAAQ,0KAA8K,MAAO,KAAMI,EAAAA,cAAoBhB,EAAYS,GAAI,KAAM,KAAMO,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,iJAAkJ,MAAO,KAAMS,EAAAA,cAAoBhB,EAAYS,GAAI,KAAM,KAAMO,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,6GAA+GS,EAAAA,cAAoBhB,EAAYY,GAAI,KAAM,MAAO,mHAAqHI,EAAAA,cAAoBhB,EAAYa,KAAM,KAAM,OAAQ,KAAMG,EAAAA,cAAoBhB,EAAYU,IAAK,CAC/xDU,IAAK,gDACLC,IAAK,KACH,KAAML,EAAAA,cAAoBhB,EAAYO,EAAG,KAAMS,EAAAA,cAAoBhB,EAAYY,GAAI,KAAMI,EAAAA,cAAoBhB,EAAYW,OAAQ,KAAM,QAAS,oJAAqJK,EAAAA,cAAoBhB,EAAYM,EAAG,CAC1Ua,KAAM,mGACL,gBAAiB,MAAO,KAAMH,EAAAA,cAAoBhB,EAAYS,GAAI,KAAM,KAAMO,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,8DAA+DS,EAAAA,cAAoBhB,EAAYY,GAAI,KAAM,KAAM,sCAAuC,MAAO,MAAO,MAAOI,EAAAA,cAAoBhB,EAAYG,QAAS,CAC5Uc,UAAW,UACX,oBAAqB,IACrB,kBAAmB,oBAClBD,EAAAA,cAAoBhB,EAAYK,GAAI,CACrCa,GAAI,oBACHF,EAAAA,cAAoBhB,EAAYM,EAAG,CACpCa,KAAM,qBACL,qBAAsB,KAAMH,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,gKAAiK,KAAMS,EAAAA,cAAoBhB,EAAYQ,GAAI,KAAM,KAAMQ,EAAAA,cAAoBhB,EAAYS,GAAI,KAAM,KAAMO,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,+EAAgF,KAAMS,EAAAA,cAAoBhB,EAAYU,IAAK,CACjfU,IAAK,mDACLC,IAAK,KACH,MAAO,KAAML,EAAAA,cAAoBhB,EAAYS,GAAI,KAAM,KAAMO,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,mBAAoBS,EAAAA,cAAoBhB,EAAYa,KAAM,KAAM,4BAA6B,0IAA2IG,EAAAA,cAAoBhB,EAAYa,KAAM,KAAM,gBAAiB,QAAS,KAAMG,EAAAA,cAAoBhB,EAAYU,IAAK,CACjcU,IAAK,mDACLC,IAAK,KACH,MAAO,KAAML,EAAAA,cAAoBhB,EAAYS,GAAI,KAAM,KAAMO,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,+NAAgO,KAAMS,EAAAA,cAAoBhB,EAAYU,IAAK,CACnXU,IAAK,kDACLC,IAAK,KACH,MAAO,KAAML,EAAAA,cAAoBhB,EAAYS,GAAI,KAAM,KAAMO,EAAAA,cAAoBhB,EAAYO,EAAG,KAAM,iNAAkN,KAAMS,EAAAA,cAAoBhB,EAAYU,IAAK,CACrWU,IAAK,wDACLC,IAAK,KACH,MAAO,OACb,CAKA,MAJA,SAAoBtB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOuB,QAASC,GAAatB,OAAOC,OAAO,CAAC,GAAGY,EAAAA,EAAAA,MAAsBf,EAAMgB,YAC3E,OAAOQ,EAAYP,EAAAA,cAAoBO,EAAWxB,EAAOiB,EAAAA,cAAoBlB,EAAmBC,IAAUD,EAAkBC,EAC9H,E,+EChHA,MAAMyB,EAAUzB,IACd,MAAO0B,MAAOC,KAAMC,iBAAkBC,MAAOC,GAAWC,aAAa,IAACC,GAAM,EAAI,MAAEC,EAAK,eAAEC,EAAc,QAAEC,KAAU,SAAEC,GAAYpC,EAC3HqC,GAAaC,EAAAA,EAAAA,QAAO,OACnB,EAAGC,IAAeC,EAAAA,EAAAA,UAAS,IAC5BC,GAAmB,OAART,GAAsBA,IAAQF,EAC/C,OAAOb,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoByB,EAAAA,EAAY,CAC/ER,iBACAC,WACCL,EAAS,GAAGG,OAASA,GAAS,IAAKhB,EAAAA,cAAoB0B,EAAAA,EAAgB,CACxEzB,UAAW0B,EAAAA,IACV3B,EAAAA,cAAoB,UAAW,CAChCC,UAAW2B,IAAGD,EAAAA,IAAiBH,GAAWG,EAAAA,IAC1CE,IAAKT,GACJpB,EAAAA,cAAoB8B,EAAAA,EAAY,CACjC/B,WAAY,CACVX,GAAIA,IAAM,OAEX+B,IAAYK,GAAWxB,EAAAA,cAAoB+B,EAAAA,EAAiB,CAC7DC,UAAWnB,EACXoB,SAAU,EACVX,YAAaA,KACX,EAGOY,EAAOnD,IAClB,MAAOoD,UAAU,SAACC,GAAW3B,MAAOC,KAAMI,aAAa,MAACE,GAAQL,iBAAiB,MAACC,MAAY7B,EAC9F,OAAOiB,EAAAA,cAAoBqC,EAAAA,EAAK,CAC9BD,WACApB,MAAOA,GAASJ,EAAM,GAAGI,YAASsB,GAClC,EAGW,SAASC,EAAiBxD,GACvC,OAAOiB,EAAAA,cAAoBQ,EAASzB,EAAOiB,EAAAA,cAAoBwC,EAAqBzD,GACtF,C,wFCzBA,MAAM0D,EAA0C,CAC9CC,MAAOC,EAAAA,GACPrD,EAAGsD,EAAAA,GACHC,WAAYC,EAAAA,GACZC,UAAWA,EAAAA,GACXrD,IAAKsD,EAAAA,GACLnD,KAAMoD,EAAAA,GACNC,UAAWA,EAAAA,IAeb,ICtCA,GD0BmBC,EAAAA,EAAAA,OAAK,SAAmBC,GAAkD,IAAjD,SAAEjC,EAAQ,WAAEpB,EAAa,CAAC,GAAoBqD,EACxF,OACEpD,EAAAA,cAACqD,EAAAA,GAAW,CACVtD,WAAY,IACP0C,KACA1C,IAEJoB,EAGP,G,yDEaA,IAxCapC,IACX,MAAM,MAAEiC,EAAK,YAAEsC,EAAW,SAAElB,EAAQ,SAAEjB,GAAapC,GAC3CuE,YAAaC,EAAgBvC,MAAOwC,EAAQ,OAAEC,IAAWC,EAAAA,EAAAA,MAE/DC,MAAM,SAAEC,KACNC,EAAAA,EAAAA,MAEEC,EAAM,CACV9C,MAAOA,GAASwC,EAChBF,YAAaA,GAAeC,EAC5BQ,IAAI,GAAIN,GAASrB,GAAY,KAG/B,OACEpC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,QAAMgE,KAAMJ,IACZ5D,EAAAA,cAAA,QACEiE,IAAI,OACJ9D,KAAK,oIAEPH,EAAAA,cAAA,aAAQ8D,EAAI9C,OACZhB,EAAAA,cAAA,QAAMiE,IAAI,YAAY9D,KAAM2D,EAAIC,MAChC/D,EAAAA,cAAA,QAAMkE,KAAK,cAAcC,QAASL,EAAIR,cAEtCtD,EAAAA,cAAA,QAAMoE,SAAS,WAAWD,QAASL,EAAI9C,QACvChB,EAAAA,cAAA,QAAMoE,SAAS,SAASD,QAASL,EAAIC,MACrC/D,EAAAA,cAAA,QAAMoE,SAAS,UAAUD,QAAQ,YACjCnE,EAAAA,cAAA,QAAMoE,SAAS,iBAAiBD,QAASL,EAAIR,cAE7CtD,EAAAA,cAAA,QAAMkE,KAAK,eAAeC,QAAQ,YAClCnE,EAAAA,cAAA,QAAMkE,KAAK,gBAAgBC,QAASL,EAAI9C,QACxChB,EAAAA,cAAA,QAAMkE,KAAK,cAAcC,QAASL,EAAIC,MACtC/D,EAAAA,cAAA,QAAMkE,KAAK,sBAAsBC,QAASL,EAAIR,cAC9CtD,EAAAA,cAAA,QAAMkE,KAAK,eAAeC,QAAS,wBACnCnE,EAAAA,cAAA,QAAMkE,KAAK,kBAAkBC,QAAS,SACrChD,EACA,C,4GCzBP,MAAMkD,EAAa,SAACtD,EAAgBuD,EAA8BC,GAYhE,YAZyD,IAAvBD,IAAAA,EAA0B,SAAS,IAALC,IAAAA,EAAQ,GACxExD,EAAIyD,SAASC,IACX,MAAM,MAAEzD,EAAK,IAAE+C,EAAG,MAAEnD,GAAU6D,EAC9BH,EAASI,OAAOJ,EAASK,OAAQ,EAAG,CAClCJ,QACAvD,QACA+C,QAGEnD,GAASA,EAAM+D,OAAS,GAAGN,EAAWzD,EAAO0D,EAAUC,EAAQ,EAAE,IAGhED,CACT,EAsCA,ICvEA,EDmCyBvF,IACvB,MAAM,UAAEiD,GAAcjD,EAEhB6F,GAAUC,EAAAA,EAAAA,UAAQ,IAAMR,EAAWrC,EAAU,GAAGpB,OAAS,KAAK,CAACoB,IAE/D8C,GAAiBC,EAAAA,EAAAA,GAAkB,gBAAiB,CACxDC,UAAW,CAAC,EAAG,GACfC,WAAW,uBAGb,OAAIL,EAAQD,OAAS,EAAU,KAG7B3E,EAAAA,cAAA,OAAKC,UE9CQ,sCF+CXD,EAAAA,cAAA,OAAKC,UE7CW,2CF8CdD,EAAAA,cAAA,MAAIC,UE/CW,4CFgDbD,EAAAA,cAACkF,EAAAA,GAAU,CAACC,GAAG,IAAIC,SAAO,GAAC,iBAK5BR,EAAQS,KAAI,CAAAjC,EAAiBkC,KAAW,IAA3B,MAAEtE,EAAK,IAAE+C,GAAKX,EAC1B,OACEpD,EAAAA,cAAA,KACEC,UAAW2B,IE1DP,sCF0DuBkD,IAAmBf,EAAIwB,UAAU,IE5DlD,6CF6DVC,IAAKF,EACLnF,KAAM4D,GACL/C,EACC,KAIN,C,wGGpEH,IAAIyE,EAAU,4CACVC,EAAQ,0CACRpF,EAAU,2C,8FC8Bd,MAAMqF,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiB7F,GAC/B,MAAM8F,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAf5F,EACFA,EAAW8F,GAGb,IAAIA,KAAsB9F,IAChC,CAAC8F,EAAmB9F,GACzB,CAGA,MAAM+F,EAAc,CAAC,EAQd,SAASzC,GAAY,WAACtD,EAAU,SAAEoB,EAAQ,qBAAE4E,IAEjD,IAAIC,EAWJ,OAREA,EADED,EAEsB,mBAAfhG,EACHA,EAAW,CAAC,GACZA,GAAc+F,EAEJF,EAAiB7F,GAG5B,gBACL4F,EAAWM,SACX,CAACC,MAAOF,GACR7E,EAEJ,C","sources":["webpack://vad-var-site/./content/Instana/101.md","webpack://vad-var-site/./src/pages/{mdx.fields__slug}.tsx","webpack://vad-var-site/./src/components/MDXWrapper/MDXWrapper.tsx","webpack://vad-var-site/./src/components/MDXWrapper/index.ts","webpack://vad-var-site/./src/components/SEO.tsx","webpack://vad-var-site/./src/components/TableOfContents/TableOfContents.tsx","webpack://vad-var-site/./src/components/TableOfContents/index.ts","webpack://vad-var-site/./src/components/TableOfContents/TableOfContents.module.scss","webpack://vad-var-site/./src/styles/pages/{mdx.fields__slug}.module.scss","webpack://vad-var-site/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    section: \"section\",\n    h1: \"h1\",\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    ol: \"ol\",\n    li: \"li\",\n    img: \"img\",\n    strong: \"strong\",\n    em: \"em\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"1\",\n    \"aria-labelledby\": \"101-instana-ui\"\n  }, React.createElement(_components.h1, {\n    id: \"101-instana-ui\"\n  }, \"101: Instana UI\"), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"goal\"\n  }, React.createElement(_components.h2, {\n    id: \"goal\"\n  }, React.createElement(_components.a, {\n    href: \"#goal\"\n  }, \"Goal\")), \"\\n\", React.createElement(_components.p, null, \"The goal of this lab is to help explore / familiarize yourself with some key capabilities available in through the Instana UI, specifically monitoring of Kubernetes and services.\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"logging-into-the-ui\"\n  }, React.createElement(_components.h2, {\n    id: \"logging-into-the-ui\"\n  }, React.createElement(_components.a, {\n    href: \"#logging-into-the-ui\"\n  }, \"Logging into the UI\")), \"\\n\", React.createElement(_components.p, null, \"For lab consistency, we will all make use of a shared read-only environment located at: \", React.createElement(_components.a, {\n    href: \"https://play-with.instana.io\"\n  }, \"https://play-with.instana.io\")), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"You will be requested to provide an email in order to gain access to the sandbox, type in your work email or any email you are comfortable with sharing\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684692563268.3564862437/image-001-signup.png\",\n    alt: \"\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Once complete, you should see the default view for the Play-With-Instana sandbox dashboard\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684692563272.3564862438/image-002-dashboard.png\",\n    alt: \"\"\n  }), \"\\n\"), \"\\n\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"exploring-the-infrastructure-view\"\n  }, React.createElement(_components.h2, {\n    id: \"exploring-the-infrastructure-view\"\n  }, React.createElement(_components.a, {\n    href: \"#exploring-the-infrastructure-view\"\n  }, \"Exploring the Infrastructure View\")), \"\\n\", React.createElement(_components.p, null, \"Now that you have logged into the sandbox, we will spend a bit of time examining the \", React.createElement(_components.strong, null, \"Infrastructure\"), \" View using the following steps:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Click on the \", React.createElement(_components.em, null, React.createElement(_components.strong, null, \"Infrastructure\")), \" icon on the left hand side of the navigation panel.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684692563276.3564862440/image-004-explore-infra.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Notice the 3D visualization of the different components for your infrastructure.\"), \"\\n\", React.createElement(_components.p, null, \"This view provides an overview of all the monitored systems, grouped into zones of 3D (three-dimensional) rectangles\"), \"\\n\", React.createElement(_components.p, null, \"From the birds-eye view, each zone consists of pillars, and each pillar represents an Instana agent running on a respective system.\\nIn the example image above and in your sandbox, the pillars represent worker nodes for a GKE Kubernetes cluster.\"), \"\\n\", React.createElement(_components.p, null, \"Instana is able to visualize all of this information thanks to the Dynamic Graph and its support for over 250+ sensor technologies.\"), \"\\n\", React.createElement(_components.p, null, \"As you zoom in to the pillar, you can see the smaller boxes \", React.createElement(_components.em, null, \"(pizza boxes)\"), \" that make up the larger overall pillar. Each one of these smaller boxes represent an entity, or a sensor technology that Instana has discovered and is monitoring; Instana not only monitors each entity, but also provides associated information, represented as a small stack, such as the technology used for a given entity.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684692563292.3567862444/image-008-stack.png\",\n    alt: \"\"\n  }), \"\\n\"), \"\\n\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"filtering\"\n  }, React.createElement(_components.h2, {\n    id: \"filtering\"\n  }, React.createElement(_components.a, {\n    href: \"#filtering\"\n  }, \"Filtering\")), \"\\n\", React.createElement(_components.p, null, \"In large environments, it can be difficult to find the server or zone that you are looking for. Fortunately, there are a number of ways that you can search for things within the \", React.createElement(_components.em, null, \"Infrastructure view\"), \".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684692563276.3564862441/image-005-filter.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Imagine you are monitoring hundreds of services, servers, and endpoints. While Instana, would be able to easily provide observability for all of them, it would be overwhelming if you are only looking for services or servers with high CPU cycles.\"), \"\\n\", React.createElement(_components.p, null, \"The answer to this problem is to change the view using the icons for Tag View, Aggregate Metric View, Metric View & 3D, and Table toggle. In this case, we will be exploring the Metrics view.\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"metrics-view\"\n  }, React.createElement(_components.h2, {\n    id: \"metrics-view\"\n  }, React.createElement(_components.a, {\n    href: \"#metrics-view\"\n  }, \"Metrics View\")), \"\\n\", React.createElement(_components.p, null, \"These metrics view allow for one to easily view useful metrics as part of the broader infrastructure view.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"From the bottom right-hand corner try changing the default view to show the aggregate CPU cycle time\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Cycle through all the different metrics\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"CPU Load\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"CPU Usage\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Free Memory or Memory Used (depending on what you see)\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Reset the metric view and return to the default component view by clicking the metrics icon and select reset in the lower right corner.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684692563288.3567862442/image-006-metrics.gif\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, React.createElement(_components.strong, null, \"Note\"), \": While in the metrics view, the metrics icon itself will be highlighted as long as a metric is selected to remind you that it is turned on.\")), \"\\n\", React.createElement(_components.p, null, \"In addition to the options provided in the lower right-hand legend, Instana also makes use of the \", React.createElement(_components.em, null, \"lucene query language\"), \" in the filter/search bar at the top of the page while in the Infrastructure view. We can make use of this search bar to filter entities and drill down to specific services or endpoints. Before beginning the search, hover on one of the towers and identify the hostname of one of the servers. For example \", React.createElement(_components.code, null, \"geke.<fully qualified hostname>\")), \"\\n\"), \"\\n\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"query--search\"\n  }, React.createElement(_components.h2, {\n    id: \"query--search\"\n  }, React.createElement(_components.a, {\n    href: \"#query--search\"\n  }, \"Query / Search\")), \"\\n\", React.createElement(_components.p, null, \"Let's try out a query by looking for a specific host\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Click in the filter bar and select \\\"Entity\\\"\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"From the dropdown-list start typing \", React.createElement(_components.em, null, \"host\"), \" and you will see the list filtered to \\\"host\\\". Once you see the single entry, select host.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"You should see \", React.createElement(_components.em, null, \"entity.host.name:\"), \". After the \\\":\\\", you can do a wildcard search. For example \\\"entity.host.name:\", React.createElement(_components.em, null, \"abc\"), \"\\\". Type in a wildcard string that matches the beginning of the hostname you want to look for. We will specify \\\"entity.host.name:*gke*\\\" to filter only the GKE servers.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"One you have specified the filter, you'll see that the infrastructure view is filtered to just a set of GKE servers that matches your search.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Next we will type out another query to filter out entities within a specific zone. Type out \\\"entity.zone:*\", React.createElement(_components.em, null, \"eu\"), \"*\\\" as the query search and notice we no longer see the GKE servers, but only a single AWS entity located in the \", React.createElement(_components.code, null, \"eu\")), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684692563288.3567862443/image-007-query.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, React.createElement(_components.strong, null, \"Note\"), \": the search filter engine supports many different queries, including AND, OR, and NOT conditions. More info on the lucene query language can be \", React.createElement(_components.a, {\n    href: \"https://www.ibm.com/docs/en/instana-observability/current?topic=instana-filtering-dynamic-focus\"\n  }, \"found here\"))), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Clear the filter at the top of the page by clicking on the \", React.createElement(_components.em, null, \"x\"), \" before moving onto the next step.\"), \"\\n\"), \"\\n\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"dependency-graph\"\n  }, React.createElement(_components.h2, {\n    id: \"dependency-graph\"\n  }, React.createElement(_components.a, {\n    href: \"#dependency-graph\"\n  }, \"Dependency Graph\")), \"\\n\", React.createElement(_components.p, null, \"Now lets take a look at another key Instana feature, automated discovery of dependencies thanks in part to the Dynamic Graph feature that is part of Instana\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Start by selecting the Applications icon from the left hand navigation menu\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684692563292.3567862447/image-011-app-menu.png\",\n    alt: \"\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Next select the \", React.createElement(_components.code, null, \"robot-shop with frontend\"), \" from the list of available applications, once complete you should have a default application view like the one below. Then select the \", React.createElement(_components.code, null, \"Dependencies\"), \" tab\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684692563296.3567862448/image-012-dep-menu.png\",\n    alt: \"\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"View the robot-shop application dependencies as discovered by Instana. Calls between services and endpoints are represented via lines, and the live traffic is visually represented as moving dots along the connection. 🟢\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684692563296.3567862449/image-013-dep-tab.png\",\n    alt: \"\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"When viewing a specifc service for your application, note that the connections to other services are dimmed, allowing you to focus on the service or connections that you are interested in investigating. 🟢\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684692563300.3567862450/image-014-dep-highlight.png\",\n    alt: \"\"\n  }), \"\\n\"), \"\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/VAD-VAR-Workshop/VAD-VAR-Workshop/content/Instana/101.md\";\nimport React, {useRef, useState} from 'react';\nimport cx from 'classnames';\nimport SEO from '@components/SEO';\nimport PageHeader from '@components/PageHeader';\nimport MDXWrapper from '@components/MDXWrapper';\nimport ContentWrapper from '@components/ContentWrapper';\nimport TableOfContents from '@components/TableOfContents';\nimport * as styles from '@styles/pages/{mdx.fields__slug}.module.scss';\nconst Content = props => {\n  const {data: {mdx: {tableOfContents: {items: tocItems}, frontmatter: {toc = true, title, timeToComplete, updated}}}, children} = props;\n  const articleRef = useRef(null);\n  const {0: currSection} = useState('');\n  const showToc = (toc === null ? true : toc) && tocItems;\n  return React.createElement(React.Fragment, null, React.createElement(PageHeader, {\n    timeToComplete,\n    updated\n  }, tocItems[0].title || title || ''), React.createElement(ContentWrapper, {\n    className: styles.wrapper\n  }, React.createElement(\"article\", {\n    className: cx(styles.article, !showToc && styles.noToc),\n    ref: articleRef\n  }, React.createElement(MDXWrapper, {\n    components: {\n      h1: () => null\n    }\n  }, children)), showToc && React.createElement(TableOfContents, {\n    itemsList: tocItems,\n    maxDepth: 2,\n    currSection: currSection\n  })));\n};\nconst pageQuery = \"3587680389\";\nexport const Head = props => {\n  const {location: {pathname}, data: {mdx: {frontmatter: {title}, tableOfContents: {items}}}} = props;\n  return React.createElement(SEO, {\n    pathname,\n    title: title || items[0].title || undefined\n  });\n};\nContent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Content, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React, { memo } from 'react';\nimport { MDXProvider } from '@mdx-js/react';\nimport { Props } from '@mdx-js/react/lib';\nimport {\n  BlockQuote,\n  CodeBlock,\n  ImageWrapper,\n  QuizAlert,\n  SmartLink,\n  SubHeader,\n  TableWrapper\n} from '../replacements';\n\ninterface MDXWrapperProps {\n  children: React.ReactNode;\n  components?: Props['components'];\n}\n\nconst standardComponents: Props['components'] = {\n  table: TableWrapper,\n  a: SmartLink,\n  blockquote: BlockQuote,\n  SubHeader: SubHeader,\n  img: ImageWrapper,\n  code: CodeBlock,\n  QuizAlert: QuizAlert\n};\n\nconst MDXWrapper = memo(function MDXWrapper({ children, components = {} }: MDXWrapperProps) {\n  return (\n    <MDXProvider\n      components={{\n        ...standardComponents,\n        ...components\n      }}>\n      {children}\n    </MDXProvider>\n  );\n});\n\nexport default MDXWrapper;\n","import MDXWrapper from './MDXWrapper';\n\nexport default MDXWrapper;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useSiteMetadata from '@hooks/useSiteMetaData';\n\ninterface SEOProps {\n  title?: string;\n  description?: string;\n  pathname?: string;\n  children?: React.ReactNode;\n}\n\nconst SEO = (props: SEOProps) => {\n  const { title, description, pathname, children } = props;\n  const { description: defDescription, title: defTitle, origin } = useSiteMetadata();\n  const {\n    i18n: { language }\n  } = useTranslation();\n\n  const seo = {\n    title: title || defTitle,\n    description: description || defDescription,\n    url: `${origin}${pathname || ''}`\n  };\n\n  return (\n    <>\n      <html lang={language} />\n      <link\n        rel='icon'\n        href=\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='0.9em' font-size='90'>🦺</text></svg>\"\n      />\n      <title>{seo.title}</title>\n      <link rel='canonical' href={seo.url} />\n      <meta name='description' content={seo.description} />\n\n      <meta property='og:title' content={seo.title} />\n      <meta property='og:url' content={seo.url} />\n      <meta property='og:type' content='website' />\n      <meta property='og:description' content={seo.description} />\n\n      <meta name='twitter:card' content='summary' />\n      <meta name='twitter:title' content={seo.title} />\n      <meta name='twitter:url' content={seo.url} />\n      <meta name='twitter:description' content={seo.description} />\n      <meta name='twitter:site' content={'https://www.ibm.com'} />\n      <meta name='twitter:creator' content={'@IBM'} />\n      {children}\n    </>\n  );\n};\n\nexport default SEO;\n","import React, { useMemo } from 'react';\nimport { Link as GatsbyLink } from 'gatsby';\nimport cx from 'classnames';\nimport useCurrentHeading from '@hooks/useCurrentHeading';\nimport * as styles from './TableOfContents.module.scss';\n\ninterface TableOfContentsProps {\n  itemsList: TOCItem[];\n  currSection: string | undefined;\n  maxDepth?: number;\n}\n\ninterface TOCItem {\n  title: string;\n  url: string;\n  items?: TOCItem[];\n}\n\ninterface FlatTOCItem extends Omit<TOCItem, 'items'> {\n  depth: number;\n}\n\nconst flattenTOC = (toc: TOCItem[], flatList: FlatTOCItem[] = [], depth = 0): FlatTOCItem[] => {\n  toc.forEach((item) => {\n    const { title, url, items } = item;\n    flatList.splice(flatList.length, 0, {\n      depth,\n      title,\n      url\n    });\n\n    if (items && items.length > 0) flattenTOC(items, flatList, depth + 1);\n  });\n\n  return flatList;\n};\n\nconst TableOfContents = (props: TableOfContentsProps) => {\n  const { itemsList } = props;\n\n  const flatTOC = useMemo(() => flattenTOC(itemsList[0].items || []), [itemsList]);\n\n  const currentSection = useCurrentHeading('h1[id],h2[id]', {\n    threshold: [0, 1],\n    rootMargin: `-${styles.headerHeight} 0px -90% 0px`\n  });\n\n  if (flatTOC.length < 1) return null;\n\n  return (\n    <nav className={styles.toc}>\n      <div className={styles.tocStack}>\n        <h6 className={styles.tocHeader}>\n          <GatsbyLink to='#' replace>\n            On this page\n          </GatsbyLink>\n        </h6>\n\n        {flatTOC.map(({ title, url }, index) => {\n          return (\n            <a\n              className={cx(styles.link, currentSection === url.substring(1) && styles.activeItem)}\n              key={index}\n              href={url}>\n              {title}\n            </a>\n          );\n        })}\n      </div>\n    </nav>\n  );\n};\n\nexport default TableOfContents;\n","import TableOfContents from './TableOfContents';\n\nexport default TableOfContents;\n","// extracted by mini-css-extract-plugin\nexport var activeItem = \"TableOfContents-module--activeItem--3869f\";\nexport var headerHeight = \"48px\";\nexport var link = \"TableOfContents-module--link--b292b\";\nexport var toc = \"TableOfContents-module--toc--54d35\";\nexport var tocHeader = \"TableOfContents-module--tocHeader--05956\";\nexport var tocStack = \"TableOfContents-module--tocStack--90609\";","// extracted by mini-css-extract-plugin\nexport var article = \"{mdx-fields__slug}-module--article--e3d5a\";\nexport var noToc = \"{mdx-fields__slug}-module--noToc--82387\";\nexport var wrapper = \"{mdx-fields__slug}-module--wrapper--58e72\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","section","h1","h2","a","p","ol","li","img","strong","em","code","_provideComponents","components","React","className","id","href","src","alt","wrapper","MDXLayout","Content","data","mdx","tableOfContents","items","tocItems","frontmatter","toc","title","timeToComplete","updated","children","articleRef","useRef","currSection","useState","showToc","PageHeader","ContentWrapper","styles","cx","ref","MDXWrapper","TableOfContents","itemsList","maxDepth","Head","location","pathname","SEO","undefined","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","standardComponents","table","TableWrapper","SmartLink","blockquote","BlockQuote","SubHeader","ImageWrapper","CodeBlock","QuizAlert","memo","_ref","MDXProvider","description","defDescription","defTitle","origin","useSiteMetadata","i18n","language","useTranslation","seo","url","lang","rel","name","content","property","flattenTOC","flatList","depth","forEach","item","splice","length","flatTOC","useMemo","currentSection","useCurrentHeading","threshold","rootMargin","GatsbyLink","to","replace","map","index","substring","key","article","noToc","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}