{"version":3,"file":"component---src-pages-mdx-fields-slug-tsx-content-file-path-content-instana-104-espanol-md-15acf379106273710707.js","mappings":"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","sources":["webpack://vad-var-site/./content/Instana/104-Espanol.md","webpack://vad-var-site/./src/pages/{mdx.fields__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    em: \"em\",\n    strong: \"strong\",\n    ol: \"ol\",\n    li: \"li\",\n    code: \"code\",\n    img: \"img\"\n  }, _provideComponents(), props.components), {SubHeader} = _components;\n  if (!SubHeader) _missingMdxReference(\"SubHeader\", true);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, {\n    id: \"104-alerta-y-sintéticos\"\n  }, \"104: Alerta y sintéticos\"), \"\\n\", React.createElement(SubHeader, {\n    timeToComplete: props.pageContext.frontmatter.timeToComplete,\n    updated: props.pageContext.frontmatter.updated\n  }), \"\\n\", React.createElement(_components.h2, {\n    id: \"alertas\"\n  }, React.createElement(_components.a, {\n    href: \"#alertas\"\n  }, \"Alertas\")), \"\\n\", React.createElement(_components.p, null, \"Instana es compatible con 13 tecnologías para \", React.createElement(_components.a, {\n    href: \"https://www.ibm.com/docs/en/instana-observability/current?topic=apis-alerting#alerting-integrations\"\n  }, \"canales de alerta\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Canales de alerta compatibles con Instana](./images/104/supported-channels.png)\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"añadir-slack-como-canal-de-alerta\"\n  }, React.createElement(_components.a, {\n    href: \"#añadir-slack-como-canal-de-alerta\"\n  }, \"Añadir \", React.createElement(_components.em, null, \"Slack\"), \" como canal de alerta\")), \"\\n\", React.createElement(_components.p, null, \"Para crear alertas, primero necesitamos crear un canal de alertas. Este es un proceso sencillo que consiste en añadir un webhook entrante a \", React.createElement(_components.em, null, \"Slack\"), \" para un canal \", React.createElement(_components.em, null, \"Slack\"), \" específico. Para evitar que cada persona cree un nuevo canal, utilizaremos uno existente para este laboratorio.\"), \"\\n\", React.createElement(_components.p, null, \"Todos, por favor, uníos al canal \", React.createElement(_components.strong, null, \"#alert-lab\"), \" en \", React.createElement(_components.em, null, \"Slack\"), \".\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"enviando-eventos-específicos-al-canal\"\n  }, React.createElement(_components.a, {\n    href: \"#enviando-eventos-específicos-al-canal\"\n  }, \"Enviando eventos específicos al canal\")), \"\\n\", React.createElement(_components.p, null, \"Ahora que el canal ha sido creado, podemos proceder a decidir qué alertas queremos enviar a \", React.createElement(_components.em, null, \"Slack\"), \". Para esta demo enviaremos todos los avisos de la tienda del robot directamente al canal \", React.createElement(_components.em, null, \"Slack\"), \".\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"En la barra lateral de navegación de la izquierda, haga clic en la sección \", React.createElement(_components.strong, null, \"Settings\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"En la página \", React.createElement(_components.strong, null, \"Settings\"), \", en la barra lateral de navegación de la izquierda, haga clic en la sección \", React.createElement(_components.em, null, \"Alerts\"), \" que se encuentra justo encima de los Canales de alerta. A continuación, haga clic en el botón \", React.createElement(_components.strong, null, \"New Alert\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Para el nombre utiliza este pattern, \", React.createElement(_components.code, null, \"<tu-nombre>-slack\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"En \", React.createElement(_components.strong, null, \"Events\"), \", elija la opción \", React.createElement(_components.strong, null, \"Alert on Event Type(s)\"), \", y luego active todas las opciones. Esto nos permitirá mostrar cómo se muestran los diferentes eventos en \", React.createElement(_components.em, null, \"Slack\"), \".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1682717381584.58031589072/create-alert.png\",\n    alt: \"Crear alerta Slack\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"En \", React.createElement(_components.strong, null, \"Scope\"), \", elija la opción \", React.createElement(_components.strong, null, \"Application Perspective\"), \" y, a continuación, seleccione la opción \", React.createElement(_components.strong, null, \"Add Application Perspectives\"), \". A continuación, \", React.createElement(_components.strong, null, \"Select All\"), \" las opciones.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Observación: Si utiliza Instana para observar varias aplicaciones, puede añadir alertas de varias aplicaciones diferentes a la vez, o puede crear varias alertas, una para cada perspectiva.\")), \"\\n\", React.createElement(_components.img, {\n    src: \"/1682717381580.58031589071/app-perspective.png\",\n    alt: \"Perspectiva de la aplicación\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"6\"\n  }, \"\\n\", React.createElement(_components.li, null, \"En Canales de alerta, seleccione \", React.createElement(_components.strong, null, \"lab-4\"), \" y, a continuación, haga clic en \", React.createElement(_components.strong, null, \"Create\"), \". Este canal permitirá a Instana enviar mensajes al canal \", React.createElement(_components.em, null, \"Slack\"), \" de \", React.createElement(_components.strong, null, \"#alert-lab\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Ya está. Ahora, a medida que se generen eventos desde Instana, se enviarán al canal \", React.createElement(_components.em, null, \"Slack\"), \". Este método de alerta potente y flexible permite alertas específicas, como el uso de diferentes canales \", React.createElement(_components.em, null, \"Slack\"), \" para alertas de diferente gravedad o incluso enviar mensajes a los desarrolladores desde PagerDuty para problemas críticos.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"sintéticos\"\n  }, React.createElement(_components.a, {\n    href: \"#sintéticos\"\n  }, \"Sintéticos\")), \"\\n\", React.createElement(_components.p, null, \"Los sintéticos son una novedad en Instana. Permiten simular experiencias de usuario en su aplicación y monitorizar varias características de rendimiento.\"), \"\\n\", React.createElement(_components.p, null, \"Aviso: Synthetics sólo está disponible en una instancia SaaS, no on-prem.\"), \"\\n\", React.createElement(_components.p, null, \"En esta sección crearemos pruebas sintéticas para monitorizar nuestra aplicación. Para crear una prueba sintética, primero debe tener un Punto de Presencia (PoP) instalado y en funcionamiento. Múltiples PoPs pueden ser desplegados en clusters en varias regiones geográficas para simular la experiencia del usuario en esas regiones. Las instrucciones para instalar PoPs se pueden encontrar \", React.createElement(_components.a, {\n    href: \"https://www.ibm.com/docs/en/instana-observability/current?topic=beta-pop-deployment\"\n  }, \"aquí.\"), \" Esto está fuera del alcance de este laboratorio, y utilizaremos un PoP existente ya registrado en el panel de Instana.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"En la instancia de Instana SaaS (\", React.createElement(_components.a, {\n    href: \"https://mintgreen-edge0vfurg.instana.io/#/home\"\n  }, \"https://mintgreen-edge0vfurg.instana.io/#/home\"), \"), vaya a \", React.createElement(_components.strong, null, \"Synthetic Monitoring\"), \" en el menú de navegación de la izquierda y haga clic en \", React.createElement(_components.strong, null, \"Create New Test\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1682717381592.58031589077/synthetic-create.png\",\n    alt: \"Crear sintético\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Para familiarizarnos con la funcionalidad, crearemos un sintético de ping.\"), \"\\n\", React.createElement(_components.p, null, \"En \", React.createElement(_components.strong, null, \"Step 2: Request Details\"), \" añada \", React.createElement(_components.a, {\n    href: \"https://web-np-robot-shop.apps.ocp-50ackdta3c-eaxi.cloud.techzone.ibm.com/\"\n  }, \"https://web-np-robot-shop.apps.ocp-50ackdta3c-eaxi.cloud.techzone.ibm.com/\"), \" para la URL y elija \", React.createElement(_components.strong, null, \"synthetic-dc\"), \" como Punto de Presencia. Haga clic en Next.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1682717381584.58031589073/dc-pop.png\",\n    alt: \"Añadir PoP DC\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Para la Frecuencia elija 1 Minuto, y haga clic en Siguiente.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1682717381592.58031589076/syn-timing.png\",\n    alt: \"Temporización sintética\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Nombre su sintético utilizando este modelo \", React.createElement(_components.code, null, \"<su nombre>-synthetic\"), \", y escriba una descripción opcional. Marque \", React.createElement(_components.strong, null, \"All Services\"), \" y haga clic en el botón \", React.createElement(_components.strong, null, \"Create\"), \".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1682717381588.58031589074/karsten-synthetic.png\",\n    alt: \"crear prueba sintética de ping\"\n  }), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Ahora puede ver los análisis y métricas de su prueba sintética en la lista \", React.createElement(_components.strong, null, \"Tests\"), \".\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/VAD-VAR-Workshop/VAD-VAR-Workshop/content/Instana/104-Espanol.md\";\nimport * as styles from '../styles/pages/{mdx.fields__slug}.module.scss';\nimport {MDXProvider} from '@mdx-js/react';\nimport React, {useEffect, useRef, useState} from 'react';\nimport TableOfContents from '../components/TableOfContents';\nimport {BlockQuote, CodeBlock, ImageWrapper, QuizAlert, SmartLink, SubHeader, TableWrapper} from '../components/replacements';\nimport SEO from '../components/SEO';\nimport cx from 'classnames';\nconst components = {\n  table: TableWrapper,\n  a: SmartLink,\n  blockquote: BlockQuote,\n  SubHeader,\n  img: ImageWrapper,\n  code: CodeBlock,\n  QuizAlert: QuizAlert\n};\nconst MDXWrapper = React.memo(function MDXWrapper(_ref) {\n  let {children} = _ref;\n  return React.createElement(MDXProvider, {\n    components: {\n      ...components\n    }\n  }, children);\n});\nconst ContentTemplate = props => {\n  const {data: {mdx: {tableOfContents: {items: tocItems}, frontmatter: {toc = true}}}, children} = props;\n  const articleRef = useRef(null);\n  const {0: currSection, 1: setCurrSection} = useState('');\n  useEffect(() => {\n    if (!articleRef.current) return;\n    const headingElements = articleRef.current.querySelectorAll('h2,h3,h4,h5');\n    const cb = entries => {\n      entries.forEach(e => {\n        if (e.isIntersecting) setCurrSection(e.target.id);\n      });\n    };\n    const observer = new IntersectionObserver(cb, {\n      rootMargin: '0px 0px -95% 0px',\n      threshold: 0\n    });\n    headingElements.forEach(el => {\n      observer.observe(el);\n    });\n    return () => observer.disconnect();\n  }, []);\n  const showToc = (toc === null ? true : toc) && tocItems;\n  return React.createElement(React.Fragment, null, React.createElement(\"article\", {\n    className: cx(styles.article, !showToc && styles.noToc),\n    ref: articleRef\n  }, React.createElement(MDXWrapper, null, children)), showToc && React.createElement(TableOfContents, {\n    itemsList: tocItems,\n    maxDepth: 1,\n    currSection: currSection\n  }));\n};\nconst pageQuery = \"2937823819\";\nexport const Head = props => {\n  const {location: {pathname}, data: {mdx: {frontmatter: {title}, tableOfContents: {items}}}} = props;\n  return React.createElement(SEO, {\n    pathname,\n    title: title || items[0].title || undefined\n  });\n};\nContentTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ContentTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","h2","a","p","em","strong","ol","li","code","img","_provideComponents","components","SubHeader","id","component","Error","_missingMdxReference","React","timeToComplete","pageContext","frontmatter","updated","href","src","alt","start","wrapper","MDXLayout","table","TableWrapper","SmartLink","blockquote","BlockQuote","ImageWrapper","CodeBlock","QuizAlert","MDXWrapper","_ref","children","MDXProvider","ContentTemplate","data","mdx","tableOfContents","items","tocItems","toc","articleRef","useRef","currSection","setCurrSection","useState","useEffect","current","headingElements","querySelectorAll","observer","IntersectionObserver","entries","forEach","e","isIntersecting","target","rootMargin","threshold","el","observe","disconnect","showToc","className","cx","styles","ref","TableOfContents","itemsList","maxDepth","Head","location","pathname","title","SEO","undefined","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}