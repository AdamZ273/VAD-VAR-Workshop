{"version":3,"file":"component---src-pages-mdx-fields-slug-tsx-content-file-path-content-maximo-visual-inspection-md-9a37af1f52ef551df95e.js","mappings":"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","sources":["webpack://vad-var-site/./content/Maximo/VISUAL-INSPECTION.md","webpack://vad-var-site/./src/pages/{mdx.fields__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    h3: \"h3\",\n    strong: \"strong\",\n    ol: \"ol\",\n    li: \"li\",\n    img: \"img\",\n    em: \"em\",\n    ul: \"ul\"\n  }, _provideComponents(), props.components), {SubHeader} = _components;\n  if (!SubHeader) _missingMdxReference(\"SubHeader\", true);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, {\n    id: \"maximo-visual-inspection-mvi---part-1\"\n  }, \"Maximo Visual Inspection (MVI) - Part 1\"), \"\\n\", React.createElement(SubHeader, {\n    timeToComplete: props.pageContext.frontmatter.timeToComplete,\n    updated: props.pageContext.frontmatter.updated\n  }), \"\\n\", React.createElement(_components.p, null, \"In this lab you will first see the connection between Maximo Monitor and MVI.\"), \"\\n\", React.createElement(_components.p, null, \"Then you will create your own data set, label, and augment using an MVI instance.\"), \"\\n\", React.createElement(_components.p, null, \"HEADS UP! L3 Quiz Content denoted with 🟢\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"maximo-monitor-and-mvi\"\n  }, React.createElement(_components.a, {\n    href: \"#maximo-monitor-and-mvi\"\n  }, \"Maximo Monitor and MVI\")), \"\\n\", React.createElement(_components.h3, {\n    id: \"step-1-log-in-to-maximo-application-suite-navigator\"\n  }, React.createElement(_components.a, {\n    href: \"#step-1-log-in-to-maximo-application-suite-navigator\"\n  }, \"Step 1: Log in to Maximo Application Suite Navigator\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Actions:\")), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Click on this \", React.createElement(_components.a, {\n    href: \"https://wwdemo.home.wwdemomas8.gtm-pat.com/\"\n  }, React.createElement(_components.strong, null, \"Maximo Application Suite Demo Environment\")), \" URL link to launch IBM Maximo Application Suite and bring up the log-in page.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996340.0464862675/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.002.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"IBM Maximo Application Suite\"), \" log in page opens.\"), \"\\n\", React.createElement(_components.li, null, \"Enter MVI \", React.createElement(_components.strong, null, \"Username (A)\"), \" and click \", React.createElement(_components.strong, null, \"Continue (B)\")), \"\\n\", React.createElement(_components.li, null, \"Enter MVI \", React.createElement(_components.strong, null, \"Password\"), \" and click \", React.createElement(_components.strong, null, \"Log in\"), \" (figure not shown for this step)\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996340.0464862676/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.003.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Sample Dialogue:\"), \" Once the login credentials are accepted, the MAS Application \", React.createElement(_components.strong, null, \"Suite navigator\"), \" window opens. Several applications that make up the Maximo Application Suite are displayed. In this demo, the focus will be on the Maximo Visual Inspection application; however, Part One of this demo, briefly looks at MVI AI model inspection results in the MAS Monitor application.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Spanish Helper\"), \" Una vez que se aceptan las credenciales de inicio de sesión, se abre la ventana \", React.createElement(_components.strong, null, \"Navegador de suite\"), \" de la aplicación MAS. Se muestran varias aplicaciones que componen Maximo Application Suite. En esta demostración, el enfoque estará en la aplicación Maximo Visual Inspection; sin embargo, la primera parte de esta demostración analiza brevemente los resultados de la inspección del modelo AI de MVI en la aplicación MAS Monitor.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996340.0464862677/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.004.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.h3, {\n    id: \"step-2-viewing-mvi-ai-model-inspection-results-in-monitor-dashboard\"\n  }, React.createElement(_components.a, {\n    href: \"#step-2-viewing-mvi-ai-model-inspection-results-in-monitor-dashboard\"\n  }, \"Step 2: Viewing MVI AI Model Inspection Results in Monitor Dashboard\")), \"\\n\", React.createElement(_components.p, null, \"Assume that the analyst’s AI solution is set up so that cameras constantly monitor every tank in the facility. The feed from the cameras is analyzed every hour by Maximo Visual Inspection’s AI model and uploaded as IoT (Internet of Things) events. Maximo Monitor then maps and plots these details on a set of dashboards. Rules are also triggered to generate alerts on the dashboard. As a result, plant engineers and operational managers can view the condition of all tanks from a single screen and act on assets that need attention.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Spanish Helper\"), \" Suponga que la solución de IA del analista está configurada para que las cámaras monitoreen constantemente cada tanque en la instalación. El modelo de IA de Maximo Visual Inspection analiza la transmisión de las cámaras cada hora y la carga como eventos de IoT (Internet de las cosas). Luego, Maximo Monitor mapea y traza estos detalles en un conjunto de tableros. Las reglas también se activan para generar alertas en el tablero. Como resultado, los ingenieros de planta y los gerentes operativos pueden ver la condición de todos los tanques desde una sola pantalla y actuar sobre los activos que necesitan atención.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Actions:\")), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Click the \", React.createElement(_components.strong, null, \"Monitor\"), \" tile on the MAS application \", React.createElement(_components.strong, null, \"Suite navigator\"), \" home screen.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996340.0464862681/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.008.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Click the \", React.createElement(_components.strong, null, \"Monitor\"), \" tile on the \", React.createElement(_components.strong, null, \"Welcome\"), \" screen that opens.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996340.0464862682/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.009.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"3\"\n  }, \"\\n\", React.createElement(_components.li, null, \"On the left sidebar, click the \", React.createElement(_components.strong, null, \"right arrow\"), \" icon \", React.createElement(_components.strong, null, \"(A)\"), \" to view more options in the Ribbon menu. Click the \", React.createElement(_components.strong, null, \"Devices\"), \" tab \", React.createElement(_components.strong, null, \"(B)\"), \" from the menu to view the list of device types in this WRA.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996340.0464862683/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.010.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Sample Dialogue:\"), \" In the Monitor application, you can see a list of device types for this Water Resource Authority. Clicking on any device type can show further details about any active analysis or data inflow for the device type, as you will see in the next step.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Spanish Helper\"), \" En la aplicación Monitor, puede ver una lista de tipos de dispositivos para esta Water Resource Authority. Al hacer clic en cualquier tipo de dispositivo, se pueden mostrar más detalles sobre cualquier análisis activo o entrada de datos para el tipo de dispositivo, como verá en el siguiente paso.\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"4\"\n  }, \"\\n\", React.createElement(_components.li, null, \"In the search area, type \", React.createElement(_components.strong, null, \"“Sedimentation” (A)\"), \" to filter the displayed device type’s list and click on the filtered result \", React.createElement(_components.strong, null, \"SedimentationTanks_LI (B)\"), \" to view the sedimentation tanks dashboard on the right. 🟢\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996340.0464862684/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.011.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"5\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Click on the \", React.createElement(_components.strong, null, \"Left sidebar\"), \" icon to hide the sidebar and view the dashboard in full-screen mode.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996340.0464862685/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.012.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996344.0466862686/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.013.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Sample Dialogue:\"), \" One common challenge with manual inspections carried out by multiple inspectors across multiple teams in this scenario is to get an aggregated high-level status of all the tanks. Even more difficult is to get this information in a timely manner. Using Maximo Application Suite, this challenge becomes almost trivial to solve.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Spanish Helper:\"), \" Un desafío común con las inspecciones manuales realizadas por varios inspectores en varios equipos en este escenario es obtener un estado agregado de alto nivel de todos los tanques. Aún más difícil es obtener esta información de manera oportuna. Con Maximo Application Suite, este desafío se vuelve casi trivial de resolver.\"), \"\\n\", React.createElement(_components.p, null, \"The \", React.createElement(_components.strong, null, \"Tank Alerts\"), \" card (top right) shows the alert history for the Sedimentation Tanks is this group. The Plant Manager see’s there is an alert for \", React.createElement(_components.strong, null, \"Tank2\"), \" 🟢\"), \"\\n\", React.createElement(_components.p, null, \"The \", React.createElement(_components.strong, null, \"Inspection Results\"), \" table card (bottom right) is currently empty, but this is where the Plant Manager can view the company’s automated MVI inspection results.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"creating-labeling-and-augmenting-a-data-set\"\n  }, React.createElement(_components.a, {\n    href: \"#creating-labeling-and-augmenting-a-data-set\"\n  }, \"Creating, labeling and augmenting a data set\")), \"\\n\", React.createElement(_components.h3, {\n    id: \"step-1-launch-maximo-visual-inspection\"\n  }, React.createElement(_components.a, {\n    href: \"#step-1-launch-maximo-visual-inspection\"\n  }, \"Step 1: Launch Maximo Visual Inspection\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Actions:\")), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Click on the \", React.createElement(_components.strong, null, \"IBM Maximo Application Suite\"), \" label at the top left of the screen. You are returned to the MAS Suite Navigator screen.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996344.0466862687/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.014.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"On the MAS Suite navigator screen, click on the \", React.createElement(_components.strong, null, \"Visual Inspection\"), \" tile.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996344.0466862688/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.015.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"3\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Click \", React.createElement(_components.strong, null, \"Continue.\")), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996344.0466862689/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.016.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"step-2-create-a-dataset-for-model-training-in-maximo-visual-inspection\"\n  }, React.createElement(_components.a, {\n    href: \"#step-2-create-a-dataset-for-model-training-in-maximo-visual-inspection\"\n  }, \"Step 2: Create a Dataset for Model Training in Maximo Visual Inspection\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Sample Dialogue: What is an MVI dataset, and why do you need to create one?\")), \"\\n\", React.createElement(_components.p, null, \"As a first step towards building your AI inspection model, you must create a dataset in MVI containing images of clean and dirty tanks to teach the model what each class looks like.\"), \"\\n\", React.createElement(_components.p, null, \"Data is at the heart of machine learning (ML). In the case of vision-based models, this data takes the form of images or videos. Built-in MVI ML models intelligently detect and learn patterns in the uploaded dataset and analyze this data repeatedly until it can discern distinctions and ultimately recognizes objects of interest in the images. For example, to train a computer to recognize automobile tires, you need to feed it with vast quantities of tire images and tire-related items to learn the differences and identify a tire, especially one with defects.\"), \"\\n\", React.createElement(_components.p, null, \"For this use case model, you will create a dataset with a limited number of clean and dirty tank images for brevity; however, in real world scenarios, a computer vision model would require many more images and processing time than this demonstration offers.\"), \"\\n\", React.createElement(_components.p, null, \"In this demo, you manually upload saved tank images from your local machine to the MVI application dashboard, however, built-in image capture modes in MVI Mobile and MVI Edge applications (parts of the MVI solution) can also be used to collect and copy images automatically into the MVI application. Now it's time to start creating a dataset.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Spanish Helper\"), \": Como primer paso para construir su modelo de inspección de IA, debe crear un conjunto de datos en MVI que contenga imágenes de tanques limpios y sucios para enseñarle al modelo cómo se ve cada clase.\"), \"\\n\", React.createElement(_components.p, null, \"Los datos están en el corazón del aprendizaje automático (ML). En el caso de modelos basados en visión, estos datos toman la forma de imágenes o videos. Los modelos MVI ML incorporados detectan y aprenden de manera inteligente patrones en el conjunto de datos cargado y analizan estos datos repetidamente hasta que pueden discernir distinciones y, en última instancia, reconocer objetos de interés en las imágenes. Por ejemplo, para entrenar a una computadora para que reconozca llantas de automóviles, debe alimentarla con una gran cantidad de imágenes de llantas y elementos relacionados con llantas para aprender las diferencias e identificar una llanta, especialmente una con defectos.\"), \"\\n\", React.createElement(_components.p, null, \"Para este modelo de caso de uso, creará un conjunto de datos con un número limitado de imágenes de tanques limpios y sucios por motivos de brevedad; sin embargo, en escenarios del mundo real, un modelo de visión por computadora requeriría muchas más imágenes y tiempo de procesamiento de lo que ofrece esta demostración.\"), \"\\n\", React.createElement(_components.p, null, \"En esta demostración, usted carga manualmente imágenes de tanques guardadas desde su máquina local al tablero de la aplicación MVI; sin embargo, los modos de captura de imágenes integrados en las aplicaciones MVI Mobile y MVI Edge (partes de la solución MVI) también se pueden usar para recopilar y copiar imágenes automáticamente en la aplicación MVI. Ahora es el momento de comenzar a crear un conjunto de datos.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Action:\")), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Click \", React.createElement(_components.strong, null, \"Get started\"), \" on the \", React.createElement(_components.strong, null, \"MVI Welcome to IBM Maximo Visual Inspection\"), \" screen.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996344.0466862690/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.017.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"The Data sets window opens.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996344.0466862691/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.018.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"On the MVI \", React.createElement(_components.strong, null, \"Data sets\"), \" screen, Click the \", React.createElement(_components.strong, null, \"blue +\"), \" icon just under \", React.createElement(_components.strong, null, \"Create data set\"), \" label on the left.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996344.0466862692/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.019.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"3\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Enter “Sedimentation Tanks \", React.createElement(_components.em, null, React.createElement(_components.strong, null, \"<YOUR INITIALS>\")), \"” for the \", React.createElement(_components.strong, null, \"Data set name\"), \" field in the \", React.createElement(_components.strong, null, \"Create data set\"), \" window (since you are sharing the Maximo Visual Inspection demo environment with other people a unique identifier is required to avoid name conflicts) \", React.createElement(_components.strong, null, \"(A).\")), \"\\n\", React.createElement(_components.li, null, \"Click \", React.createElement(_components.strong, null, \"Create (B)\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996344.0466862693/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.020.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Important:\"), \" This demo script does not address dataset names with any unique identifier. Hence to follow along as an example, if you are instructed to click on the \", React.createElement(_components.strong, null, React.createElement(_components.em, null, \"Sedimentation Tanks\")), \" dataset, you would instead click on \", React.createElement(_components.strong, null, React.createElement(_components.em, null, \"Sedimentation Tanks <YOUR INITIALS>\")), \" dataset, i.e., the dataset you named along with your unique identifier.\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"5\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Click on the lower half of the newly created \", React.createElement(_components.strong, null, \"Sedimentation Tanks\"), \" tile (where a light grey image icon is shown).\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996344.0466862695/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.022.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Sample Dialogue:\"), \" Once you click on this tile, a window opens for the data set you just created. As shown in the upcoming steps, you can perform several key operations on this page, such as uploading images, labeling objects, augmenting data, and training your model.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Spanish Helper:\"), \" Una vez que hace clic en este mosaico, se abre una ventana para el conjunto de datos que acaba de crear. Como se muestra en los próximos pasos, puede realizar varias operaciones clave en esta página, como cargar imágenes, etiquetar objetos, aumentar datos y entrenar su modelo.\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"6\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Navigate to the directory location where you unzipped the “Images of Sedimentation Tanks for training” folder, downloaded and extracted in the\", React.createElement(_components.a, {\n    href: \"#_page0_x57.00_y410.00\"\n  }, \" Pre-work Step 2.\")), \"\\n\", React.createElement(_components.li, null, \"Click \", React.createElement(_components.strong, null, \"Import Files\"), \" to import the model training tank images from the directory where you unzipped the sample files.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996344.0466862696/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.023.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"8\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Select all the tank images from the folder and click \", React.createElement(_components.strong, null, \"Open\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996344.0466862697/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.024.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Sample Dialogue:\"), \" After a few seconds, the images are uploaded to your newly created dataset. This dataset includes several photos of clean and dirty sedimentation tanks. You are now ready to label these images.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Spanish Helper:\"), \" Después de unos segundos, las imágenes se cargan en su conjunto de datos recién creado. Este conjunto de datos incluye varias fotos de tanques de sedimentación limpios y sucios. Ahora está listo para etiquetar estas imágenes.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"step-3-label-the-dataset\"\n  }, React.createElement(_components.a, {\n    href: \"#step-3-label-the-dataset\"\n  }, \"Step 3: Label the Dataset\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Sample Dialogue:\"), \" In this step, you will label the tank images. Labeling is tagging the input images with information about its content. In object detection, this would involve highlighting occurrences of items of interest. In the case of this demo, you will go through each of the uploaded tank images and highlight the portion of the image that represents a clean or a dirty tank. During the training phase, these labelled images will allow your model to learn which part of the image represents a tank and next whether that image portion contains a clean or a dirty tank.\"), \"\\n\", React.createElement(_components.p, null, \"As you can imagine, labeling the images correctly is critical to the accuracy of the model you are creating because it directly impacts the overall quality of the trained model. Quite simply, when it comes to identifying objects or classifying images, you want a use case domain expert – the person with the relevant subject matter expertise (SME) – to be labeling these images. This will ensure the highest quality of input into the model training. Traditionally, data scientists have been the focal point of AI initiatives and have wasted their precious time labelling data (despite not even being a domain expert; for example, would a data scientist be able to better label a dirty tank than the on-site inspection engineer?). With MVI, a domain expert – with no data science expertise– can label the images and then subsequently build a model based on those images.\"), \"\\n\", React.createElement(_components.p, null, \"This approach lowers the barrier to entry and empowers domain experts with limited to no AI training the ability to create and deploy working AI models in a matter of hours, not days or weeks.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Spanish Helper:\"), \" En este paso, etiquetará las imágenes del tanque. Etiquetar es etiquetar las imágenes de entrada con información sobre su contenido. En la detección de objetos, esto implicaría resaltar las ocurrencias de elementos de interés. En el caso de esta demostración, revisará cada una de las imágenes de tanque cargadas y resaltará la parte de la imagen que representa un tanque limpio o sucio. Durante la fase de entrenamiento, estas imágenes etiquetadas permitirán que su modelo aprenda qué parte de la imagen representa un tanque y luego si esa parte de la imagen contiene un tanque limpio o sucio.\"), \"\\n\", React.createElement(_components.p, null, \"Como puede imaginar, etiquetar las imágenes correctamente es fundamental para la precisión del modelo que está creando porque afecta directamente la calidad general del modelo entrenado. En pocas palabras, cuando se trata de identificar objetos o clasificar imágenes, desea que un experto en el dominio de casos de uso, la persona con la experiencia en la materia (SME) relevante, etiquete estas imágenes. Esto asegurará la más alta calidad de entrada en el entrenamiento del modelo. Tradicionalmente, los científicos de datos han sido el punto focal de las iniciativas de IA y han desperdiciado su precioso tiempo etiquetando datos (a pesar de no ser ni siquiera un experto en el dominio; por ejemplo, ¿podría un científico de datos etiquetar mejor un tanque sucio que la inspección en el sitio? ¿ingeniero?). Con MVI, un experto en el dominio, sin experiencia en ciencia de datos, puede etiquetar las imágenes y luego construir un modelo basado en esas imágenes.\"), \"\\n\", React.createElement(_components.p, null, \"Este enfoque reduce la barrera de entrada y permite a los expertos de dominio con capacitación limitada o nula en IA la capacidad de crear e implementar modelos de IA que funcionen en cuestión de horas, no de días o semanas.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Actions:\")), \"\\n\", React.createElement(_components.p, null, \"Once all the pictures are uploaded in MVI perform the following steps:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Click the \", React.createElement(_components.strong, null, \"Select\"), \" checkbox to automatically select all the dataset images \", React.createElement(_components.strong, null, \"(A)\"), \".\"), \"\\n\", React.createElement(_components.li, null, \"Click \", React.createElement(_components.strong, null, \"Label objects (B)\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996348.0469862698/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.025.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Sample Dialogue:\"), \" The \", React.createElement(_components.strong, null, \"Label objects / Sedimentation Tanks\"), \" page opens. This is where you create labels for clean and dirty tanks and assign them to the relevant portion of the images in the dataset. Various sections of the Label objects page user interface for layout reference are highlighted below.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Spanish Helper:\"), \" Se abre la página \", React.createElement(_components.strong, null, \"Etiquetar objetos/Tanques de sedimentación\"), \". Aquí es donde crea etiquetas para tanques limpios y sucios y las asigna a la parte relevante de las imágenes en el conjunto de datos. A continuación se destacan varias secciones de la interfaz de usuario de la página Objetos de etiqueta para referencia de diseño.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996348.0469862699/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.026.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"3\"\n  }, \"\\n\", React.createElement(_components.li, null, \"To start the labeling process, you must define the labels (clean and dirty). Click \", React.createElement(_components.strong, null, \"+ Add label\"), \" in the \", React.createElement(_components.strong, null, \"Objects\"), \" window on the far right.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996348.0469862700/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.027.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"4\"\n  }, \"\\n\", React.createElement(_components.li, null, \"In the \", React.createElement(_components.strong, null, \"Add objects\"), \" window that opens, type “clean” in the \", React.createElement(_components.strong, null, \"Create object\"), \" field \", React.createElement(_components.strong, null, \"(A)\"), \" and then click the \", React.createElement(_components.strong, null, \"Add\"), \" button \", React.createElement(_components.strong, null, \"(B).\")), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996348.0469862701/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.028.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"5\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Now, type “dirty” in the \", React.createElement(_components.strong, null, \"Add objects\"), \" window and click \", React.createElement(_components.strong, null, \"Add\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996348.0469862702/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.029.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"6\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Click \", React.createElement(_components.strong, null, \"Ok\"), \" to complete the Add label process.\"), \"\\n\", React.createElement(_components.li, null, \"Once the labels are defined, you can start the process of labelling the tank objects appropriately. Make sure the first tank image is selected in the Image Navigator (you will see a dark blue box around the selected image in the Image Navigator on the left). Select the \", React.createElement(_components.strong, null, \"clean\"), \" label name from the \", React.createElement(_components.strong, null, \"Objects\"), \" window on the right \", React.createElement(_components.strong, null, \"(A).\")), \"\\n\", React.createElement(_components.li, null, \"Click the \", React.createElement(_components.strong, null, \"Box\"), \" icon from the selection menu \", React.createElement(_components.strong, null, \"(B)\"), \" and draw a box around a portion of the image that denotes the clean or dirty tank \", React.createElement(_components.strong, null, \"(C)\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996348.0469862703/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.030.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Due to potential random image sorting, it may be possible that the first image you will see in the image navigator may be of a dirty tank. In this case, choose the \", React.createElement(_components.strong, null, \"dirty\"), \" label instead of \", React.createElement(_components.strong, null, \"clean\"), \" and label the first image in step 7 of this section appropriately.\"), \"\\n\", React.createElement(_components.p, null, \"In case you make a mistake drawing the box, select the erroneous box and click the \", React.createElement(_components.strong, null, \"trashcan\"), \" icon right next to the label. You can also press \", React.createElement(_components.strong, null, \"CTRL + Z\"), \" or \", React.createElement(_components.strong, null, \"Command + Z\"), \" on your Windows and Mac keyboard, respectively, to undo the last action.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Spanish Helper:\"), \" Debido a la posible clasificación aleatoria de imágenes, es posible que la primera imagen que vea en el navegador de imágenes sea la de un tanque sucio. En este caso, elija la etiqueta \", React.createElement(_components.strong, null, \"sucio\"), \" en lugar de \", React.createElement(_components.strong, null, \"limpio\"), \" y etiquete la primera imagen en el paso 7 de esta sección de manera adecuada.\"), \"\\n\", React.createElement(_components.p, null, \"En caso de que cometa un error al dibujar el cuadro, seleccione el cuadro erróneo y haga clic en el ícono \", React.createElement(_components.strong, null, \"papelera\"), \" justo al lado de la etiqueta. También puede presionar \", React.createElement(_components.strong, null, \"CTRL + Z\"), \" o \", React.createElement(_components.strong, null, \"Comando + Z\"), \" en su teclado de Windows y Mac, respectivamente, para deshacer la última acción.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996348.0469862705/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.032.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"9\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Label all the pictures in the Image Navigator using the instructions in the previous steps. You can click the \", React.createElement(_components.strong, null, \"blue downward arrow\"), \" button to scroll through and select the images in sequence for labeling.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996348.0469862706/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.033.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Image Labelling Tips:\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"MVI remembers your previous label selection, so you do not need to click on the \", React.createElement(_components.strong, null, \"clean\"), \" or \", React.createElement(_components.strong, null, \"dirty\"), \" labels every time to label each new image. Just select the appropriate label the first time you start object labeling and continue to use it till it is required to switch to another object label, for example, switching from labeling a clean tank image to a dirty tank image and vice versa.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Spanish Helper:\"), \" MVI recuerda su selección de etiquetas anterior, por lo que no necesita hacer clic en las etiquetas \", React.createElement(_components.strong, null, \"limpias\"), \" o \", React.createElement(_components.strong, null, \"sucias\"), \" cada vez para etiquetar cada nueva imagen. Simplemente seleccione la etiqueta adecuada la primera vez que inicie el etiquetado de objetos y continúe usándola hasta que sea necesario cambiar a otra etiqueta de objeto, por ejemplo, cambiar de etiquetar una imagen de tanque limpio a una imagen de tanque sucio y viceversa.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"For your convenience, a light blue bar highlights the label that is currently in selection, as shown in the screenshot below.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996352.0469862708/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.035.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Tanks with blue water are clean.\"), \"\\n\", React.createElement(_components.li, null, \"If there is more than one tank (or portion of tanks) in an image, please draw separate label boxes around each tank, as shown in the screenshot below.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996352.0469862710/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.037.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"10\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Once all tank images in the Image Navigator are appropriately labelled, click the \", React.createElement(_components.strong, null, \"Back\"), \" icon (not your browser’s back button) to navigate back to the \", React.createElement(_components.strong, null, \"Data set / Sedimentation Tanks\"), \" page.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996352.0469862711/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.038.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.h3, {\n    id: \"step-4-data-augmentation\"\n  }, React.createElement(_components.a, {\n    href: \"#step-4-data-augmentation\"\n  }, \"Step 4: Data Augmentation\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Sample Dialogue:\"), \" MVI offers an easy and cost-effective way to augment data sets. At this point, you have labelled all the tank images in the uploaded data set.\"), \"\\n\", React.createElement(_components.p, null, \"When building out a deep learning computer vision model, the more images added to the data set, the more accurate the model will generally be. However, there may be times when you do not have a dataset as varied or large enough to create an accurate and generalized model, and the cost of acquiring new data is too high.\"), \"\\n\", React.createElement(_components.p, null, \"To address this pain point, MVI provides image augmentation capabilities, where filters can be applied to perform operations such as flip, blur, sharpen, and crop, to create additional images, thus increasing model performance and decreasing the cost to acquire more data. This augmentation process multiplies the original number of images by several folds. And the good news is that any labeling that has been done in the original images is maintained in the new augmented images to avoid rework.\"), \"\\n\", React.createElement(_components.p, null, \"For this demo, it is fair to assume that a posted field camera is unlikely to take pictures of the tanks under the same conditions every time. The lighting will vary depending on weather and time of day. If the camera is rotatable, then it’s orientation to the tank and image focus can also be inconsistent. Rather than trying to provide images for all possible scenarios, image augmentation can help simulate these different conditions. This is how, data augmentation helps add additional data to your dataset to improve model performance (accuracy). You will use a few of the available MVI data augmentation options to add volume and variety to your tank images data set.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Spanish Helper:\"), \" MVI ofrece una manera fácil y rentable de aumentar los conjuntos de datos. En este punto, ha etiquetado todas las imágenes de tanques en el conjunto de datos cargado.\"), \"\\n\", React.createElement(_components.p, null, \"Al crear un modelo de visión por computadora de aprendizaje profundo, cuantas más imágenes se agreguen al conjunto de datos, más preciso será el modelo en general. Sin embargo, puede haber ocasiones en las que no tenga un conjunto de datos tan variado o lo suficientemente grande como para crear un modelo preciso y generalizado, y el costo de adquirir nuevos datos sea demasiado alto.\"), \"\\n\", React.createElement(_components.p, null, \"Para abordar este problema, MVI proporciona capacidades de aumento de imágenes, donde se pueden aplicar filtros para realizar operaciones como voltear, desenfocar, enfocar y recortar, para crear imágenes adicionales, lo que aumenta el rendimiento del modelo y reduce el costo de adquirir más datos. Este proceso de aumento multiplica el número original de imágenes por varios pliegues. Y la buena noticia es que cualquier etiquetado que se haya hecho en las imágenes originales se mantiene en las nuevas imágenes aumentadas para evitar reelaboraciones.\"), \"\\n\", React.createElement(_components.p, null, \"Para esta demostración, es justo suponer que es poco probable que una cámara de campo publicada tome fotografías de los tanques en las mismas condiciones cada vez. La iluminación variará dependiendo del clima y la hora del día. Si la cámara es giratoria, entonces su orientación hacia el tanque y el enfoque de la imagen también pueden ser inconsistentes. En lugar de tratar de proporcionar imágenes para todos los escenarios posibles, el aumento de imágenes puede ayudar a simular estas diferentes condiciones. Así es como, el aumento de datos ayuda a agregar datos adicionales a su conjunto de datos para mejorar el rendimiento del modelo (precisión). Utilizará algunas de las opciones de aumento de datos MVI disponibles para agregar volumen y variedad a su conjunto de datos de imágenes de tanques.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Actions:\")), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Click \", React.createElement(_components.strong, null, \"Augment data\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996352.0469862712/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.039.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"The \", React.createElement(_components.strong, null, \"Augment data\"), \" window opens and displays all of MVI’s available data augmentation filters. Select filters \", React.createElement(_components.strong, null, \"Sharpen\"), \", \", React.createElement(_components.strong, null, \"Crop\"), \", \", React.createElement(_components.strong, null, \"Rotate\"), \", \", React.createElement(_components.strong, null, \"Vertical flip\"), \" and \", React.createElement(_components.strong, null, \"Horizontal flip\"), \" to generate additional images \", React.createElement(_components.strong, null, \"(A)\"), \". Notice the number of images under \", React.createElement(_components.strong, null, \"New creations\"), \" and \", React.createElement(_components.strong, null, \"New total\"), \" labels increases as more filters are selected.\"), \"\\n\", React.createElement(_components.li, null, \"Click \", React.createElement(_components.strong, null, \"Continue (B).\")), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996352.0469862713/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.040.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"4\"\n  }, \"\\n\", React.createElement(_components.li, null, \"The \", React.createElement(_components.strong, null, \"Augment data\"), \" window opens**.** Name the new dataset by typing “Augmented Sedimentation Tank \", React.createElement(_components.em, null, React.createElement(_components.strong, null, \"<YOUR INITIALS>\")), \"” \", React.createElement(_components.strong, null, \"(A)\")), \"\\n\", React.createElement(_components.li, null, \"Click \", React.createElement(_components.strong, null, \"Create data set\"), \" to create your new augmented data set \", React.createElement(_components.strong, null, \"(B)\")), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"/1684186996352.0469862714/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.041.jpeg\",\n    alt: \"\"\n  }), \"\\nOnce you click \", React.createElement(_components.strong, null, \"Create data set\"), \", you can track the progress of the data augmentation process in a small window that appears at the top right of the screen.\"), \"\\n\", React.createElement(_components.p, null, \"In this window;\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"A blue progress bar denotes the data augmentation is in progress.\"), \"\\n\", React.createElement(_components.li, null, \"A completion confirmation message and a green check mark indicate the completed process.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996352.0469862716/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.043.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"6\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Click the \", React.createElement(_components.strong, null, \"Back\"), \" icon (not your browser’s back button) to return to the main \", React.createElement(_components.strong, null, \"Data sets\"), \" page, where you can see your newly created augmented dataset.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996352.0469862717/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.044.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"7\"\n  }, \"\\n\", React.createElement(_components.li, null, \"The main \", React.createElement(_components.strong, null, \"Data sets\"), \" page opens and displays both the original and augmented dataset. Notice the increased number of images in the augmented dataset compared to the original dataset (the number of images in each dataset is shown right under its name in the tile). Click on the lower half (the water tank picture) of your newly created \", React.createElement(_components.strong, null, \"Augmented Sedimentation Tanks\"), \" tile.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996352.0469862718/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.045.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"8\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Once your augmented dataset page opens, notice how all the MVI generated augmented images have a small black (“magic”) icon at the bottom right of the image. Also, how image labels are automatically transferred from the original images to their corresponding augmented images.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684186996356.047862719/mvi.1a40bb6d-e87f-4b74-929f-11f16746fc40.046.jpeg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Congratulations, you have created a new augmented dataset from the original that is ready to be trained. Now it’s time to create the object detection model using this augmented dataset.\"), \"\\n\", React.createElement(_components.p, null, \"Part 2 of the MVI lab is available \", React.createElement(_components.a, {\n    href: \"VISUAL-INSPECTION2.md\"\n  }, \"here\"), \".\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/VAD-VAR-Workshop/VAD-VAR-Workshop/content/Maximo/VISUAL-INSPECTION.md\";\nimport * as styles from '../styles/pages/{mdx.fields__slug}.module.scss';\nimport {MDXProvider} from '@mdx-js/react';\nimport React, {useEffect, useRef, useState} from 'react';\nimport TableOfContents from '../components/TableOfContents';\nimport {BlockQuote, CodeBlock, ImageWrapper, QuizAlert, SmartLink, SubHeader, TableWrapper} from '../components/replacements';\nimport SEO from '../components/SEO';\nimport cx from 'classnames';\nconst components = {\n  table: TableWrapper,\n  a: SmartLink,\n  blockquote: BlockQuote,\n  SubHeader,\n  img: ImageWrapper,\n  code: CodeBlock,\n  QuizAlert: QuizAlert\n};\nconst MDXWrapper = React.memo(function MDXWrapper(_ref) {\n  let {children} = _ref;\n  return React.createElement(MDXProvider, {\n    components: {\n      ...components\n    }\n  }, children);\n});\nconst ContentTemplate = props => {\n  const {data: {mdx: {tableOfContents: {items: tocItems}, frontmatter: {toc = true}}}, children} = props;\n  const articleRef = useRef(null);\n  const {0: currSection, 1: setCurrSection} = useState('');\n  useEffect(() => {\n    if (!articleRef.current) return;\n    const headingElements = articleRef.current.querySelectorAll('h2,h3,h4,h5');\n    const cb = entries => {\n      entries.forEach(e => {\n        if (e.isIntersecting) setCurrSection(e.target.id);\n      });\n    };\n    const observer = new IntersectionObserver(cb, {\n      rootMargin: '0px 0px -95% 0px',\n      threshold: 0\n    });\n    headingElements.forEach(el => {\n      observer.observe(el);\n    });\n    return () => observer.disconnect();\n  }, []);\n  const showToc = (toc === null ? true : toc) && tocItems;\n  return React.createElement(React.Fragment, null, React.createElement(\"article\", {\n    className: cx(styles.article, !showToc && styles.noToc),\n    ref: articleRef\n  }, React.createElement(MDXWrapper, null, children)), showToc && React.createElement(TableOfContents, {\n    itemsList: tocItems,\n    maxDepth: 1,\n    currSection: currSection\n  }));\n};\nconst pageQuery = \"2937823819\";\nexport const Head = props => {\n  const {location: {pathname}, data: {mdx: {frontmatter: {title}, tableOfContents: {items}}}} = props;\n  return React.createElement(SEO, {\n    pathname,\n    title: title || items[0].title || undefined\n  });\n};\nContentTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ContentTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","h2","a","h3","strong","ol","li","img","em","ul","_provideComponents","components","SubHeader","id","component","Error","_missingMdxReference","React","timeToComplete","pageContext","frontmatter","updated","href","src","alt","start","wrapper","MDXLayout","table","TableWrapper","SmartLink","blockquote","BlockQuote","ImageWrapper","code","CodeBlock","QuizAlert","MDXWrapper","_ref","children","MDXProvider","ContentTemplate","data","mdx","tableOfContents","items","tocItems","toc","articleRef","useRef","currSection","setCurrSection","useState","useEffect","current","headingElements","querySelectorAll","observer","IntersectionObserver","entries","forEach","e","isIntersecting","target","rootMargin","threshold","el","observe","disconnect","showToc","className","cx","styles","ref","TableOfContents","itemsList","maxDepth","Head","location","pathname","title","SEO","undefined","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}