{"version":3,"file":"component---src-pages-mdx-fields-slug-tsx-content-file-path-content-databand-102-es-md-dff4a0b9cf91d90c1fa6.js","mappings":"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","sources":["webpack://vad-var-site/./content/Databand/102.es.md","webpack://vad-var-site/./src/pages/{mdx.fields__slug}.tsx","webpack://vad-var-site/./src/components/MDXWrapper/MDXWrapper.tsx","webpack://vad-var-site/./src/components/MDXWrapper/index.ts","webpack://vad-var-site/./src/components/SEO.tsx","webpack://vad-var-site/./src/components/TableOfContents/TableOfContents.tsx","webpack://vad-var-site/./src/components/TableOfContents/index.ts","webpack://vad-var-site/./src/components/TableOfContents/TableOfContents.module.scss","webpack://vad-var-site/./src/styles/pages/{mdx.fields__slug}.module.scss","webpack://vad-var-site/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    section: \"section\",\n    h1: \"h1\",\n    h2: \"h2\",\n    a: \"a\",\n    ol: \"ol\",\n    li: \"li\",\n    p: \"p\",\n    strong: \"strong\",\n    img: \"img\",\n    ul: \"ul\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"1\",\n    \"aria-labelledby\": \"102-observación-de-trabajos-configuración-de-alertas-y-notificaciones-externas\"\n  }, React.createElement(_components.h1, {\n    id: \"102-observación-de-trabajos-configuración-de-alertas-y-notificaciones-externas\"\n  }, \"102: Observación de trabajos, configuración de alertas y notificaciones externas\"), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"observar-un-trabajo-en-databand\"\n  }, React.createElement(_components.h2, {\n    id: \"observar-un-trabajo-en-databand\"\n  }, React.createElement(_components.a, {\n    href: \"#observar-un-trabajo-en-databand\"\n  }, \"Observar un trabajo en Databand\")), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Vuelva a la pestaña del navegador con CP4DaaS. Abra el flujo de Integración de Datos Multicloud (si no está allí), y haga clic en el botón \", React.createElement(_components.strong, null, \"Ejecutar\"), \" en la parte superior.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"/1684825880155.4712862130/run-job.png\",\n    alt: \"run job\"\n  }), \" La tarea puede tardar unos minutos en ejecutarse. Una vez completado, verá un banner verde \", React.createElement(_components.strong, null, \"Ejecutar correctamente con advertencias\"), \" en la parte superior. Cuando lo vea, vuelva a la pestaña Databand.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"En el menú de la izquierda, seleccione la pestaña \", React.createElement(_components.strong, null, \"Pipelines\"), \". Usted puede identificar su trabajo específico de DataStage / ETL (extraer, transformar, cargar) pipeline mirando la columna \", React.createElement(_components.strong, null, \"Proyecto\"), \" en esta página, que muestra el nombre del proyecto de su entorno DataStage.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Haga clic en la columna \", React.createElement(_components.strong, null, \"Nombre\"), \" de su proyecto específico (por ejemplo, \", React.createElement(_components.strong, null, \"Databand_mk\"), \")\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"/1684825880175.4717862137/select-job.png\",\n    alt: \"select job\"\n  }), \" \", React.createElement(_components.strong, null, \"CONSEJO RÁPIDO:\"), \" Puede buscar rápidamente su trabajo DataStage específico haciendo clic en el menú desplegable \", React.createElement(_components.strong, null, \"Proyecto\"), \" y escribiendo el nombre de su proyecto CP4DaaS en la barra de búsqueda. Vea la siguiente captura de pantalla para un ejemplo de esta función de búsqueda.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684825880147.4712862127/project-search.png\",\n    alt: \"project search\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"La nueva pantalla que aparecerá será la Lista de ejecuciones de cada una de las ejecuciones del pipeline ETL (trabajo DataStage). Esta página muestra la lista secuencial de ejecuciones del trabajo de DataStage, el estado de esas ejecuciones, la hora de inicio y fin, las alertas, los errores, el número de tareas correctas/incorrectas y la duración de esas tareas.\"), \"\\n\", React.createElement(_components.p, null, \"Sólo ha ejecutado este trabajo de DataStage una vez, por lo que sólo se mostrará una ejecución. Sin embargo, a medida que continúe ejecutando trabajos a lo largo de este laboratorio, verá que esta página se llena con cada ejecución secuencial.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"En esta misma pantalla, haga clic en el \", React.createElement(_components.strong, null, \"nombre de ejecución\"), \" para esta ejecución de trabajo específica.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684825880111.4705862118/click-run-name.png\",\n    alt: \"click run name\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Cambie el tamaño del panel de la ventana que muestra la tubería para que pueda ver todo el flujo arrastrando la flecha que apunta hacia la izquierda a la parte izquierda de la pantalla.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"/1684825880155.4712862129/resize-dag.png\",\n    alt: \"resize dag\"\n  }), \" La pantalla se parecerá a la captura de pantalla siguiente. Puede que tenga que arrastrar y ampliar la pantalla para centrar el trabajo.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"/1684825880139.471862125/job-flow.png\",\n    alt: \"job flow\"\n  }), \" \", React.createElement(_components.strong, null, \"NOTA:\"), \" Para trabajos grandes y complejos puede utilizar una ventana de navegación en la parte inferior derecha para desplazarse por el trabajo. Se trata del icono \", React.createElement(_components.strong, null, \"Alternar minimapa\"), \" de la derecha.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684825880199.472862144/toggle-minimap.png\",\n    alt: \"toggle-minimap\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Databand muestra una representación gráfica del trabajo DataStage. Observe que cada etapa es de color verde, lo que significa que se ha ejecutado correctamente. Cada etapa individual contiene el nombre de esa etapa, y una marca de tiempo de cuánto tiempo tardó cada etapa en ejecutarse. Además, la parte superior de esta vista muestra el tiempo total que tardó en ejecutarse este trabajo.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"NOTA:\"), \" Estas etapas pueden ejecutarse en paralelo y, por lo tanto, la suma total del tiempo de cada etapa individual mostrada es probablemente mucho mayor que el tiempo total de ejecución del trabajo.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"A continuación, haga clic en la etapa \", React.createElement(_components.strong, null, \"MORTGAGE_APPLICANTS\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Seleccione la pestaña \", React.createElement(_components.strong, null, \"Registros\"), \" en el menú superior. Cambia el tamaño de la vista como hiciste antes para ver más del registro de la etapa seleccionada.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684825880195.472862143/stage-logs.png\",\n    alt: \"stage logs\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Esta vista nos mostrará los registros asociados a esa etapa específica. No dude en hacer clic en otras etapas para ver esos registros también.\"), \"\\n\", React.createElement(_components.p, null, \"En este punto, usted ha visto algunas de las funcionalidades \\\"paso a paso\\\" que Databand aporta a la observación de nuestros trabajos DataStage. Vuelva a la pestaña del navegador que aloja su entorno DataStage y ejecute el trabajo \", React.createElement(_components.strong, null, \"4 veces más\"), \" para generar más métricas y establecer algunas líneas de base para nuestro entorno Databand. Esto tendrá sentido a medida que continuemos nuestro laboratorio y simulemos cómo sería un entorno de cliente donde un trabajo se ejecutaría muchas veces.\"), \"\\n\"), \"\\n\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"alertas-de-empleo-de-pruebas-en-databand\"\n  }, React.createElement(_components.h2, {\n    id: \"alertas-de-empleo-de-pruebas-en-databand\"\n  }, React.createElement(_components.a, {\n    href: \"#alertas-de-empleo-de-pruebas-en-databand\"\n  }, \"Alertas de empleo de Pruebas en Databand\")), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Después de ejecutar el trabajo de Integración de Datos Multicloud cuatro veces más (ahora ha ejecutado este trabajo un total de cinco veces), vuelva a su entorno Databand. Selecciona la pestaña \", React.createElement(_components.strong, null, \"Pipelines\"), \" del menú de la izquierda, busca tu pipeline, profundiza en él y fíjate en la pestaña \", React.createElement(_components.strong, null, \"Run list\"), \" del menú superior.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684825880159.4714862131/run-list.png\",\n    alt: \"run list\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Seleccione la pestaña \", React.createElement(_components.strong, null, \"Métricas\"), \" en el menú superior. La métrica mostrada por defecto es la \", React.createElement(_components.strong, null, \"Duración\"), \" de cada ejecución.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"/1684825880163.4714862132/run-metrics.png\",\n    alt: \"run metrics\"\n  }), \" \", React.createElement(_components.strong, null, \"NOTA:\"), \" También puede observar otras métricas del trabajo DataStage; por ejemplo, las filas que se escriben y se leen en cada etapa. Esto está fuera del alcance de este laboratorio.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Ahora es el momento de crear tu primera alerta. Haz clic en el botón morado \", React.createElement(_components.strong, null, \"Añadir alerta\"), \" en la esquina superior derecha de la pantalla.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"/1684825880099.4705862115/add-alert.png\",\n    alt: \"add alert\"\n  }), \" El primer paso para crear una alerta Databand es crear la \\\"Definición de la alerta\\\". Esta es la lógica detrás de su alerta. Observe todas las posibilidades de alerta que puede crear en Databand. Puede crear una alerta basada en las métricas de ejecución de su trabajo de DataStage, tales como éxito o fracaso, duración de la ejecución, duración de tareas específicas, operaciones de datos faltantes y cambios de esquema.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Dado que estos trabajos tardan unos 2 ó 3 minutos en ejecutarse, se creará una alerta si el trabajo tarda más de 4 minutos. Para crear esta alerta, haga clic en el botón \", React.createElement(_components.strong, null, \"Configurar\"), \" del mosaico \", React.createElement(_components.strong, null, \"Duración de la canalización\"), \".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684825880143.4712862126/pipeline-duration.png\",\n    alt: \"pipeline duration\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Haga clic en el desplegable \", React.createElement(_components.strong, null, \"Operador\"), \" y seleccione la opción \", React.createElement(_components.strong, null, \"mayor que\"), \". Fíjese en los demás operadores que aparecen aquí, como \", React.createElement(_components.strong, null, \"Desviación porcentual\"), \" y \", React.createElement(_components.strong, null, \"Anomalía\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Introduzca \", React.createElement(_components.strong, null, \"240\"), \" en la casilla \", React.createElement(_components.strong, null, \"Duración\"), \", que acepta segundos como entrada, para designar el tiempo de 4 minutos.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684825880135.471862124/gt-4mins.png\",\n    alt: \"gt 4mins\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Desplácese hacia abajo hasta la sección \", React.createElement(_components.strong, null, \"Configuración adicional\"), \" y haga clic en la casilla \", React.createElement(_components.strong, null, \"Baja\"), \" que aparece bajo la sección \", React.createElement(_components.strong, null, \"Gravedad de la\"), \" alerta. Esto alertará al grupo individual asignado sobre la importancia de esta alerta específica. Dado que esta alerta se activará si un trabajo se ejecuta ligeramente más lento de lo normal, márquela como gravedad baja.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Asigne a esta alerta un nombre titulado Trabajo de ejecución lenta \", React.createElement(_components.strong, null, \"<SUS_INICIALES>\"), \" (por ejemplo, Trabajo de ejecución lenta AB).\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Asegúrese de que la lógica de su definición de alerta coincide con las capturas de pantalla anteriores y, a continuación, haga clic en \", React.createElement(_components.strong, null, \"Guardar alerta\"), \".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684825880163.4714862133/save-duration-alert.png\",\n    alt: \"save duration alert\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"La siguiente pantalla le permite asignar esta alerta a un receptor, que es un usuario o grupo de usuarios que serán notificados de esta alerta a través de Slack, correo electrónico o PagerDuty (esta parte se cubre en la siguiente parte del laboratorio.) Por ahora, mantenga la alerta dentro de Databand. Haga clic en el botón \", React.createElement(_components.strong, null, \"Hecho\"), \".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684825880119.4707862120/confirm-duration-alert.png\",\n    alt: \"confirm duration alert\"\n  }), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Tenga en cuenta lo útiles que pueden ser estas alertas para controlar el éxito, el fracaso y el rendimiento general de nuestros trabajos de DataStage.\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"alertas-basadas-en-interacciones-de-datos\"\n  }, React.createElement(_components.h2, {\n    id: \"alertas-basadas-en-interacciones-de-datos\"\n  }, React.createElement(_components.a, {\n    href: \"#alertas-basadas-en-interacciones-de-datos\"\n  }, \"Alertas basadas en interacciones de datos\")), \"\\n\", React.createElement(_components.p, null, \"Para la parte final de este laboratorio, verá las interacciones de datos de su trabajo y creará una alerta basada en dichas interacciones. Este es uno de los principales valores añadidos de la integración de Databand con su entorno DataStage, ya que ahora puede alertar a los usuarios casi en tiempo real sobre muchos fallos personalizados, cambios de trabajo, retrasos y mucho más.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Si aún no se encuentra en la página Lista de ejecuciones, vuelva a la pestaña Lista de ejecuciones seleccionando Lista de ejecuciones en la barra de menú superior.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Haga clic en el primer nombre de ejecución.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684825880179.4717862138/select-run.png\",\n    alt: \"select run\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Seleccione la pestaña \", React.createElement(_components.strong, null, \"Interacciones de datos\"), \" en el menú superior. Utilice el reescalador para centrarse en la parte izquierda de la pantalla.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"/1684825880123.4707862121/data-interactions.png\",\n    alt: \"data interactions\"\n  }), \" Puede ver las entradas y salidas (lecturas/escrituras) de los registros y columnas en cada etapa respectiva. Puede ver el tipo de fuente, los conjuntos de datos asociados, cualquier problema que haya podido surgir, información sobre el esquema y los registros, y la etapa asociada. El total de estos registros se representa en el gráfico de la parte superior de la pantalla. El gráfico de la parte superior titulado \", React.createElement(_components.strong, null, \"Historial de registros de ejecución (todas las tareas)\"), \", así como la columna titulada \", React.createElement(_components.strong, null, \"Tendencia del historial\"), \", ofrecen al usuario una visión del rendimiento histórico de la tarea.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"/1684825880151.4712862128/record-history.png\",\n    alt: \"record history\"\n  }), \" \", React.createElement(_components.strong, null, \"NOTA:\"), \" También puede utilizar la pestaña \", React.createElement(_components.strong, null, \"Interacciones de datos\"), \" para cada etapa individual, como en la captura de pantalla siguiente. Al hacer clic en la transformación específica, puede ver información como el esquema, el recuento de filas y la tendencia histórica de ese recuento de filas.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684825880127.4707862123/filterstate-task.png\",\n    alt: \"filterstate task\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Ahora creará una alerta en torno a un cambio de esquema. Seleccione la pestaña \", React.createElement(_components.strong, null, \"Alertas\"), \" en el menú de la izquierda. Aquí es donde se muestran todas las alertas de Databand. Tómese un momento para echar un vistazo a esta página y entender qué información se muestra al usuario.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Haga clic en el botón púrpura \", React.createElement(_components.strong, null, \"Añadir alerta\"), \" en la esquina superior derecha. Aquí puedes ver (de nuevo) que puedes crear una alerta en un pipeline (trabajo de DataStage), múltiples pipelines, calidad de datos y más.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684825880103.4705862116/add-alert2.png\",\n    alt: \"add alert2\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Va a crear una alerta para monitorizar un cambio de esquema y establecer que el receptor sea Slack. Haga clic en \", React.createElement(_components.strong, null, \"Configurar\"), \" en el mosaico \", React.createElement(_components.strong, null, \"Cambio de\"), \" esquema.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684825880171.4714862136/schema-change.png\",\n    alt: \"schema change\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"En primer lugar, debe especificar su canalización desde el proyecto y crear su definición de alerta. Seleccione el tipo de activo \", React.createElement(_components.strong, null, \"Proyecto\"), \". Haga clic en el desplegable \", React.createElement(_components.strong, null, \"Proyecto\"), \", escriba el nombre del proyecto que ha creado o parte del nombre y seleccione el nombre de su proyecto con el flujo DataStage.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684825880187.4717862142/source-project.png\",\n    alt: \"source project\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Después de seleccionar su proyecto, seleccione \", React.createElement(_components.strong, null, \"Alta\"), \" como gravedad en la sección \", React.createElement(_components.strong, null, \"Gravedad de la alerta\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Haga clic en \", React.createElement(_components.strong, null, \"Guardar alerta\"), \".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684825880167.4714862134/save-schema-alert.png\",\n    alt: \"save schema alert\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Para esta alerta, establecerá que el receptor de la alerta sea Slack.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"En la página siguiente, amplíe la lista de \", React.createElement(_components.strong, null, \"Recibidores\"), \" pulsando en \", React.createElement(_components.strong, null, \"Mostrar\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"En la lista de búsqueda escriba \", React.createElement(_components.strong, null, \"vest\"), \" para filtrar los receptores Slack preconfigurados del taller. Seleccione el receptor cuyo nombre coincida con el día y el mes del taller\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Haga clic en \", React.createElement(_components.strong, null, \"Hecho\"), \".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684825880183.4717862140/slack-receiver.png\",\n    alt: \"slack receiver\"\n  }), \"\\n\"), \"\\n\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"detección-de-cambios-en-el-esquema-de-datastage\"\n  }, React.createElement(_components.h2, {\n    id: \"detección-de-cambios-en-el-esquema-de-datastage\"\n  }, React.createElement(_components.a, {\n    href: \"#detección-de-cambios-en-el-esquema-de-datastage\"\n  }, \"Detección de cambios en el esquema de DataStage\")), \"\\n\", React.createElement(_components.p, null, \"Ahora, vuelva a su entorno Cloud Pak for Data DataStage donde introducirá a propósito un cambio de esquema. Este cambio de esquema activará la alerta de esquema que acabamos de crear en Databand.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Haga doble clic en la etapa Transformer para abrir su configuración.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684825880115.4707862119/click-transformer.png\",\n    alt: \"click transformer\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Seleccione la pestaña \", React.createElement(_components.strong, null, \"Salida\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Haga clic en el botón \", React.createElement(_components.strong, null, \"Añadir columna\"), \" de la derecha.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Nombre su nueva columna \", React.createElement(_components.strong, null, \"RELIABILITY_SCORE\"), \". Añadirá la nueva columna al final del campo \", React.createElement(_components.strong, null, \"Nombre de columna\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"A continuación, haga clic en el icono del \", React.createElement(_components.strong, null, \"lápiz\"), \" de la columna \", React.createElement(_components.strong, null, \"Derivación\"), \" y, a continuación, haga clic en el icono \", React.createElement(_components.strong, null, \"Calculadora\"), \" para editar la expresión. En este campo, utilice la suma de la columna \", React.createElement(_components.strong, null, \"YRS_AT_CURRENT_ADDRESS\"), \" y la columna \", React.createElement(_components.strong, null, \"YRS_WITH_CURRENT_EMPLOYER\"), \".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684825880127.4707862122/edit-derivation.png\",\n    alt: \"edit derivation\"\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Para crear esta expresión, localice las dos columnas bajo el twistee \", React.createElement(_components.strong, null, \"Columnas de entrada\"), \". Haga doble clic en \", React.createElement(_components.strong, null, \"YRS_AT_CURRENT_ADDRESS\"), \", inserte un símbolo más (+) y luego haga doble clic en \", React.createElement(_components.strong, null, \"YRS_WITH_CURRENT_EMPLOYER\"), \". Observe como la expresión se rellena en la ventana \", React.createElement(_components.strong, null, \"del Constructor de Expresiones\"), \" a la derecha. Su expresión debería parecerse a la captura de pantalla.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Haga clic en \", React.createElement(_components.strong, null, \"Aplicar y volver\"), \" y, a continuación, en \", React.createElement(_components.strong, null, \"Guardar y volver\"), \" para guardar los cambios que acaba de realizar.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684825880107.4705862117/apply-derivation.png\",\n    alt: \"apply derivation\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Ejecute el trabajo (haga clic en el icono de ejecución de la parte superior) y espere unos minutos hasta que el trabajo se complete y se active la alerta. Cuando se active la alerta, verá un mensaje en el canal de Slack \", React.createElement(_components.strong, null, \"#databand-alerts\"), \" en el espacio de nombres del taller similar a la captura de pantalla siguiente.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Haga clic en el enlace \", React.createElement(_components.strong, null, \"Schema changes in pipeline 'Multicloud Data Integration.DataStage.job'\"), \" en el mensaje de Slack. Esta descripción de alerta sigue al icono de \", React.createElement(_components.strong, null, \"círculo naranja\"), \" de gravedad alta. Se abrirá la siguiente pantalla:\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684825880183.4717862139/slack-alert.png\",\n    alt: \"slack alert\"\n  }), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Al hacer clic en el enlace, accederá a Databand, donde podrá ver el análisis del impacto de esta alerta. En concreto, puede ver qué cambios de esquema se produjeron en el trabajo de Datastage, qué conjuntos de datos se vieron afectados y los pipelines (trabajos de DataStage) que se vieron afectados. También puede ver toda esta información gráficamente en la pestaña \", React.createElement(_components.strong, null, \"Lineage\"), \".\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/1684825880167.4714862135/schema-alert.png\",\n    alt: \"schema alert\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Esta alerta se generó casi en tiempo real mientras se ejecutaba el oleoducto. Esta es otra ventaja importante de utilizar Databand para la observabilidad. Ser capaz de identificar problemas a medida que se ejecuta el pipeline ayuda a mejorar la calidad de los datos más rápidamente, en lugar de inspecciones retroactivas y problemas potencialmente perdidos durante días, semanas e incluso meses.\"), \"\\n\"), React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"resumen\"\n  }, React.createElement(_components.h2, {\n    id: \"resumen\"\n  }, React.createElement(_components.a, {\n    href: \"#resumen\"\n  }, \"Resumen\")), \"\\n\", React.createElement(_components.p, null, \"Enhorabuena por haber completado este laboratorio. Ha adquirido experiencia práctica en las siguientes áreas de integración:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Sincronización de DataStage/CP4DaaS con Databand\"), \"\\n\", React.createElement(_components.li, null, \"Observación de la representación gráfica del trabajo DataStage dentro de Databand y la información relevante en torno a este\"), \"\\n\", React.createElement(_components.li, null, \"Visualización de métricas de conjuntos de datos y tendencias históricas\"), \"\\n\", React.createElement(_components.li, null, \"Edición de entradas y salidas de trabajos DataStage\"), \"\\n\", React.createElement(_components.li, null, \"Creación y configuración de alertas para trabajos de DataStage en Databand\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Con esto concluye el laboratorio práctico de DataStage y Databand. Por favor, póngase en contacto con el equipo de VEST o con su Partner de IBM para cualquier pregunta, comentario, duda o situación con la que se encuentre.\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/VAD-VAR-Workshop/VAD-VAR-Workshop/content/Databand/102.es.md\";\nimport React, {useRef, useState} from 'react';\nimport cx from 'classnames';\nimport SEO from '@components/SEO';\nimport PageHeader from '@components/PageHeader';\nimport MDXWrapper from '@components/MDXWrapper';\nimport ContentWrapper from '@components/ContentWrapper';\nimport TableOfContents from '@components/TableOfContents';\nimport * as styles from '@styles/pages/{mdx.fields__slug}.module.scss';\nconst Content = props => {\n  const {data: {mdx: {tableOfContents: {items: tocItems}, frontmatter: {toc = true, title, timeToComplete, updated}}}, children} = props;\n  const articleRef = useRef(null);\n  const {0: currSection} = useState('');\n  const showToc = (toc === null ? true : toc) && tocItems;\n  return React.createElement(React.Fragment, null, React.createElement(PageHeader, {\n    timeToComplete,\n    updated\n  }, tocItems[0].title || title || ''), React.createElement(ContentWrapper, {\n    className: styles.wrapper\n  }, React.createElement(\"article\", {\n    className: cx(styles.article, !showToc && styles.noToc),\n    ref: articleRef\n  }, React.createElement(MDXWrapper, {\n    components: {\n      h1: () => null\n    }\n  }, children)), showToc && React.createElement(TableOfContents, {\n    itemsList: tocItems,\n    maxDepth: 2,\n    currSection: currSection\n  })));\n};\nconst pageQuery = \"3587680389\";\nexport const Head = props => {\n  const {location: {pathname}, data: {mdx: {frontmatter: {title}, tableOfContents: {items}}}} = props;\n  return React.createElement(SEO, {\n    pathname,\n    title: title || items[0].title || undefined\n  });\n};\nContent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Content, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React, { memo } from 'react';\nimport { MDXProvider } from '@mdx-js/react';\nimport { Props } from '@mdx-js/react/lib';\nimport {\n  BlockQuote,\n  CodeBlock,\n  ImageWrapper,\n  QuizAlert,\n  SmartLink,\n  SubHeader,\n  TableWrapper\n} from '../replacements';\n\ninterface MDXWrapperProps {\n  children: React.ReactNode;\n  components?: Props['components'];\n}\n\nconst standardComponents: Props['components'] = {\n  table: TableWrapper,\n  a: SmartLink,\n  blockquote: BlockQuote,\n  SubHeader: SubHeader,\n  img: ImageWrapper,\n  code: CodeBlock,\n  QuizAlert: QuizAlert\n};\n\nconst MDXWrapper = memo(function MDXWrapper({ children, components = {} }: MDXWrapperProps) {\n  return (\n    <MDXProvider\n      components={{\n        ...standardComponents,\n        ...components\n      }}>\n      {children}\n    </MDXProvider>\n  );\n});\n\nexport default MDXWrapper;\n","import MDXWrapper from './MDXWrapper';\n\nexport default MDXWrapper;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useSiteMetadata from '@hooks/useSiteMetaData';\n\ninterface SEOProps {\n  title?: string;\n  description?: string;\n  pathname?: string;\n  children?: React.ReactNode;\n}\n\nconst SEO = (props: SEOProps) => {\n  const { title, description, pathname, children } = props;\n  const { description: defDescription, title: defTitle, origin } = useSiteMetadata();\n  const {\n    i18n: { language }\n  } = useTranslation();\n\n  const seo = {\n    title: title || defTitle,\n    description: description || defDescription,\n    url: `${origin}${pathname || ''}`\n  };\n\n  return (\n    <>\n      <html lang={language} />\n      <link\n        rel='icon'\n        href=\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='0.9em' font-size='90'>🦺</text></svg>\"\n      />\n      <title>{seo.title}</title>\n      <link rel='canonical' href={seo.url} />\n      <meta name='description' content={seo.description} />\n\n      <meta property='og:title' content={seo.title} />\n      <meta property='og:url' content={seo.url} />\n      <meta property='og:type' content='website' />\n      <meta property='og:description' content={seo.description} />\n\n      <meta name='twitter:card' content='summary' />\n      <meta name='twitter:title' content={seo.title} />\n      <meta name='twitter:url' content={seo.url} />\n      <meta name='twitter:description' content={seo.description} />\n      <meta name='twitter:site' content={'https://www.ibm.com'} />\n      <meta name='twitter:creator' content={'@IBM'} />\n      {children}\n    </>\n  );\n};\n\nexport default SEO;\n","import React, { useMemo } from 'react';\nimport { Link as GatsbyLink } from 'gatsby';\nimport cx from 'classnames';\nimport useCurrentHeading from '@hooks/useCurrentHeading';\nimport * as styles from './TableOfContents.module.scss';\n\ninterface TableOfContentsProps {\n  itemsList: TOCItem[];\n  currSection: string | undefined;\n  maxDepth?: number;\n}\n\ninterface TOCItem {\n  title: string;\n  url: string;\n  items?: TOCItem[];\n}\n\ninterface FlatTOCItem extends Omit<TOCItem, 'items'> {\n  depth: number;\n}\n\nconst flattenTOC = (toc: TOCItem[], flatList: FlatTOCItem[] = [], depth = 0): FlatTOCItem[] => {\n  toc.forEach((item) => {\n    const { title, url, items } = item;\n    flatList.splice(flatList.length, 0, {\n      depth,\n      title,\n      url\n    });\n\n    if (items && items.length > 0) flattenTOC(items, flatList, depth + 1);\n  });\n\n  return flatList;\n};\n\nconst TableOfContents = (props: TableOfContentsProps) => {\n  const { itemsList } = props;\n\n  const flatTOC = useMemo(() => flattenTOC(itemsList[0].items || []), [itemsList]);\n\n  const currentSection = useCurrentHeading('h1[id],h2[id]', {\n    threshold: [0, 1],\n    rootMargin: `-${styles.headerHeight} 0px -90% 0px`\n  });\n\n  if (flatTOC.length < 1) return null;\n\n  return (\n    <nav className={styles.toc}>\n      <div className={styles.tocStack}>\n        <h6 className={styles.tocHeader}>\n          <GatsbyLink to='#' replace>\n            On this page\n          </GatsbyLink>\n        </h6>\n\n        {flatTOC.map(({ title, url }, index) => {\n          return (\n            <a\n              className={cx(styles.link, currentSection === url.substring(1) && styles.activeItem)}\n              key={index}\n              href={url}>\n              {title}\n            </a>\n          );\n        })}\n      </div>\n    </nav>\n  );\n};\n\nexport default TableOfContents;\n","import TableOfContents from './TableOfContents';\n\nexport default TableOfContents;\n","// extracted by mini-css-extract-plugin\nexport var activeItem = \"TableOfContents-module--activeItem--3869f\";\nexport var headerHeight = \"48px\";\nexport var link = \"TableOfContents-module--link--b292b\";\nexport var toc = \"TableOfContents-module--toc--54d35\";\nexport var tocHeader = \"TableOfContents-module--tocHeader--05956\";\nexport var tocStack = \"TableOfContents-module--tocStack--90609\";","// extracted by mini-css-extract-plugin\nexport var article = \"{mdx-fields__slug}-module--article--e3d5a\";\nexport var noToc = \"{mdx-fields__slug}-module--noToc--82387\";\nexport var wrapper = \"{mdx-fields__slug}-module--wrapper--58e72\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","section","h1","h2","a","ol","li","p","strong","img","ul","_provideComponents","components","React","className","id","href","src","alt","wrapper","MDXLayout","Content","data","mdx","tableOfContents","items","tocItems","frontmatter","toc","title","timeToComplete","updated","children","articleRef","useRef","currSection","useState","showToc","PageHeader","ContentWrapper","styles","cx","ref","MDXWrapper","TableOfContents","itemsList","maxDepth","Head","location","pathname","SEO","undefined","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","standardComponents","table","TableWrapper","SmartLink","blockquote","BlockQuote","SubHeader","ImageWrapper","code","CodeBlock","QuizAlert","memo","_ref","MDXProvider","description","defDescription","defTitle","origin","useSiteMetadata","i18n","language","useTranslation","seo","url","lang","rel","name","content","property","flattenTOC","flatList","depth","forEach","item","splice","length","flatTOC","useMemo","currentSection","useCurrentHeading","threshold","rootMargin","GatsbyLink","to","replace","map","index","substring","key","article","noToc","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}