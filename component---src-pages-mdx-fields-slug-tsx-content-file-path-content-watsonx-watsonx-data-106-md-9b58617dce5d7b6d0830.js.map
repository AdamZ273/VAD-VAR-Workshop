{"version":3,"file":"component---src-pages-mdx-fields-slug-tsx-content-file-path-content-watsonx-watsonx-data-106-md-9b58617dce5d7b6d0830.js","mappings":"iNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,QAAS,UACTC,GAAI,KACJC,EAAG,IACHC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,OAAQ,SACRC,IAAK,MACLC,GAAI,KACJC,GAAI,KACJC,IAAK,MACLC,KAAM,OACNC,KAAM,OACNC,WAAY,aACZC,GAAI,OACHC,EAAAA,EAAAA,MAAsBnB,EAAMoB,aAAa,UAACC,GAAapB,EAE1D,OADKoB,GAiJP,SAA8BC,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,CAnJkBG,CAAqB,aAAa,GAC3CC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBL,EAAW,CAC9EM,KAAM,uDACJ,KAAMD,EAAAA,cAAoBzB,EAAYG,QAAS,CACjDwB,UAAW,UACX,oBAAqB,IACrB,kBAAmB,qBAClBF,EAAAA,cAAoBzB,EAAYI,GAAI,CACrCiB,GAAI,qBACHI,EAAAA,cAAoBzB,EAAYK,EAAG,CACpCuB,KAAM,sBACL,sBAAuB,KAAMH,EAAAA,cAAoBzB,EAAYM,EAAG,KAAM,iVAAkV,KAAMmB,EAAAA,cAAoBzB,EAAYM,EAAG,KAAM,mUAAoU,KAAMmB,EAAAA,cAAoBzB,EAAYM,EAAG,KAAM,2FAA4FmB,EAAAA,cAAoBzB,EAAYK,EAAG,CAC17BuB,KAAM,4FACL,QAAS,2DAA4D,KAAMH,EAAAA,cAAoBzB,EAAYM,EAAG,KAAM,yQAA0Q,KAAMmB,EAAAA,cAAoBzB,EAAYO,GAAI,KAAM,KAAMkB,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAM,KAAMiB,EAAAA,cAAoBzB,EAAYM,EAAG,KAAM,cAAemB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,0BAA2B,kCAAmC,MAAO,KAAMgB,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAM,KAAMiB,EAAAA,cAAoBzB,EAAYM,EAAG,KAAM,aAAcmB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,iBAAkB,0DAA2DgB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,gBAAiB,KAAM,MAAO,MAAO,KAAMgB,EAAAA,cAAoBL,EAAW,CACh/BM,KAAM,4DACJ,KAAMD,EAAAA,cAAoBzB,EAAYU,IAAK,CAC7CmB,IAAK,iIACLC,IAAK,KACH,KAAML,EAAAA,cAAoBzB,EAAYO,GAAI,CAC5CwB,MAAO,KACN,KAAMN,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAM,UAAWiB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,gBAAiB,2EAA4EgB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,0BAA2B,aAAc,MAAO,KAAMgB,EAAAA,cAAoBzB,EAAYW,GAAI,KAAM,KAAMc,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAMiB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,iBAAkB,gBAAiB,KAAMgB,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAMiB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,iBAAkB,gBAAiB,KAAMgB,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAMiB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,gBAAiB,eAAgB,KAAMgB,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAMiB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,YAAa,2BAA4B,KAAMgB,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAMiB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,QAAS,uBAAwB,KAAMgB,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAMiB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,YAAa,sBAAuB,KAAMgB,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAMiB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,YAAa,sBAAuB,KAAMgB,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAMiB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,kBAAmB,OAAQgB,EAAAA,cAAoBzB,EAAYY,GAAI,KAAMa,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,aAAc,MAAO,KAAMgB,EAAAA,cAAoBzB,EAAYU,IAAK,CACj/CmB,IAAK,uIACLC,IAAK,KACH,KAAML,EAAAA,cAAoBzB,EAAYM,EAAG,KAAM,6FAA8F,KAAMmB,EAAAA,cAAoBzB,EAAYO,GAAI,CACzLwB,MAAO,KACN,KAAMN,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAM,0BAA2BiB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,oCAAqC,WAAYgB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,cAAe,YAAagB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,gBAAiB,iBAAkBgB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,OAAQ,KAAM,MAAO,KAAMgB,EAAAA,cAAoBzB,EAAYU,IAAK,CACpbmB,IAAK,uIACLC,IAAK,KACH,KAAML,EAAAA,cAAoBzB,EAAYM,EAAG,KAAM,OAAQmB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,SAAU,iBAAkBgB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,cAAe,yHAA0H,KAAMgB,EAAAA,cAAoBzB,EAAYU,IAAK,CACrWmB,IAAK,wIACLC,IAAK,KACH,KAAML,EAAAA,cAAoBzB,EAAYM,EAAG,KAAM,OAAQmB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,cAAe,iDAAkDgB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,SAAU,mEAAoEgB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,cAAe,6CAA8CgB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,aAAc,YAAa,KAAMgB,EAAAA,cAAoBzB,EAAYO,GAAI,CAClgBwB,MAAO,KACN,KAAMN,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAM,qCAAsCiB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,cAAe,yBAA0BgB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,uBAAwB,gCAAiCgB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,uBAAwB,UAAW,MAAO,KAAMgB,EAAAA,cAAoBzB,EAAYU,IAAK,CACxZmB,IAAK,uIACLC,IAAK,KACH,KAAML,EAAAA,cAAoBzB,EAAYO,GAAI,CAC5CwB,MAAO,KACN,KAAMN,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAM,UAAWiB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,uBAAwB,+CAAgDgB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,aAAc,0BAA2BgB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,2BAA4B,KAAM,MAAO,KAAMgB,EAAAA,cAAoBzB,EAAYU,IAAK,CAC3YmB,IAAK,4IACLC,IAAK,KACH,KAAML,EAAAA,cAAoBzB,EAAYM,EAAG,KAAM,uBAAwBmB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,aAAc,SAAUgB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,cAAe,yCAA0C,KAAMgB,EAAAA,cAAoBzB,EAAYU,IAAK,CACjSmB,IAAK,+IACLC,IAAK,KACH,KAAML,EAAAA,cAAoBzB,EAAYM,EAAG,KAAM,6KAA8K,KAAMmB,EAAAA,cAAoBzB,EAAYO,GAAI,CACzQwB,MAAO,KACN,KAAMN,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAM,KAAMiB,EAAAA,cAAoBzB,EAAYM,EAAG,KAAM,+EAAgF,MAAO,KAAMmB,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAM,KAAMiB,EAAAA,cAAoBzB,EAAYM,EAAG,KAAM,0DAA2DmB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,SAAU,0DAA2DgB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,YAAa,gEAAiE,MAAO,MAAO,KAAMgB,EAAAA,cAAoBzB,EAAYa,IAAK,KAAMY,EAAAA,cAAoBzB,EAAYc,KAAM,CACrqBa,UAAW,sBACV,UAAWF,EAAAA,cAAoBzB,EAAYe,KAAM,CAClDY,UAAW,iBACV,QAAS,oBAAqBF,EAAAA,cAAoBzB,EAAYe,KAAM,CACrEY,UAAW,iBACV,YAAa,mCAAoCF,EAAAA,cAAoBzB,EAAYe,KAAM,CACxFY,UAAW,eACV,aAAc,OAAQ,KAAMF,EAAAA,cAAoBzB,EAAYO,GAAI,CACjEwB,MAAO,KACN,KAAMN,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAM,8GAA+G,MAAO,KAAMiB,EAAAA,cAAoBzB,EAAYW,GAAI,KAAM,KAAMc,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAMiB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,iBAAkB,0DAA2D,KAAMgB,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAMiB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,iBAAkB,gBAAiB,KAAMgB,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAMiB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,gBAAiB,sBAAuB,KAAMgB,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAMiB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,YAAa,2BAA4B,KAAMgB,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAMiB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,QAAS,sBAAuB,KAAMgB,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAMiB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,YAAa,mBAAoB,KAAMgB,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAMiB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,YAAa,aAAcgB,EAAAA,cAAoBzB,EAAYY,GAAI,KAAMa,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,iDAAkD,KAAMgB,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAMiB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,gBAAiB,mBAAoB,MAAO,KAAMgB,EAAAA,cAAoBzB,EAAYM,EAAG,KAAM,oGAAqG,KAAMmB,EAAAA,cAAoBzB,EAAYU,IAAK,CACzlDmB,IAAK,2IACLC,IAAK,KACH,KAAML,EAAAA,cAAoBzB,EAAYO,GAAI,CAC5CwB,MAAO,MACN,KAAMN,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAM,KAAMiB,EAAAA,cAAoBzB,EAAYM,EAAG,KAAM,cAAemB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,gBAAiB,kCAAmC,MAAO,KAAMgB,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAM,KAAMiB,EAAAA,cAAoBzB,EAAYM,EAAG,KAAM,sDAAuD,MAAO,MAAO,KAAMmB,EAAAA,cAAoBzB,EAAYU,IAAK,CACvamB,IAAK,sIACLC,IAAK,KACH,KAAML,EAAAA,cAAoBzB,EAAYM,EAAG,KAAM,iGAAkGmB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,aAAc,8KAA+KgB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,aAAc,aAAc,KAAMgB,EAAAA,cAAoBzB,EAAYM,EAAG,KAAM,4HAA6H,KAAMmB,EAAAA,cAAoBzB,EAAYU,IAAK,CAC/pBmB,IAAK,yIACLC,IAAK,KACH,KAAML,EAAAA,cAAoBzB,EAAYgB,WAAY,KAAM,KAAMS,EAAAA,cAAoBzB,EAAYM,EAAG,KAAMmB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,SAAU,4HAA6HgB,EAAAA,cAAoBzB,EAAYY,GAAI,KAAMa,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,8DAA+D,kMAAmM,MAAO,KAAMgB,EAAAA,cAAoBzB,EAAYU,IAAK,CAC1qBmB,IAAK,oJACLC,IAAK,KACH,KAAML,EAAAA,cAAoBzB,EAAYM,EAAG,KAAM,0ZAA2Z,KAAMmB,EAAAA,cAAoBzB,EAAYM,EAAG,KAAM,+GAAgH,KAAMmB,EAAAA,cAAoBzB,EAAYO,GAAI,CACrpBwB,MAAO,MACN,KAAMN,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAM,KAAMiB,EAAAA,cAAoBzB,EAAYM,EAAG,KAAM,cAAemB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,mBAAoB,kCAAmC,MAAO,KAAMgB,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAM,KAAMiB,EAAAA,cAAoBzB,EAAYM,EAAG,KAAM,2CAA4CmB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,iBAAkB,WAAYgB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,oBAAqB,KAAM,MAAO,MAAO,KAAMgB,EAAAA,cAAoBzB,EAAYM,EAAG,KAAM,sQAAuQ,KAAMmB,EAAAA,cAAoBzB,EAAYa,IAAK,KAAMY,EAAAA,cAAoBzB,EAAYc,KAAM,CACt5Ba,UAAW,sBACVF,EAAAA,cAAoBzB,EAAYe,KAAM,CACvCY,UAAW,gBACV,UAAW,yEAA0EF,EAAAA,cAAoBzB,EAAYe,KAAM,CAC5HY,UAAW,iBACV,OAAQ,kTAAmTF,EAAAA,cAAoBzB,EAAYe,KAAM,CAClWY,UAAW,iBACV,SAAU,sSAAuS,KAAMF,EAAAA,cAAoBzB,EAAYgB,WAAY,KAAM,KAAMS,EAAAA,cAAoBzB,EAAYM,EAAG,KAAMmB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,SAAU,8GAA+GgB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,oBAAqB,UAAW,MAAO,KAAMgB,EAAAA,cAAoBzB,EAAYU,IAAK,CAChsBmB,IAAK,iIACLC,IAAK,KACH,KAAML,EAAAA,cAAoBzB,EAAYM,EAAG,KAAM,OAAQmB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,cAAe,wDAAyD,KAAMgB,EAAAA,cAAoBzB,EAAYU,IAAK,CAC1NmB,IAAK,iIACLC,IAAK,KACH,KAAML,EAAAA,cAAoBzB,EAAYO,GAAI,CAC5CwB,MAAO,MACN,KAAMN,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAM,aAAciB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,WAAY,6CAA8C,MAAO,KAAMgB,EAAAA,cAAoBzB,EAAYU,IAAK,CACzNmB,IAAK,yIACLC,IAAK,KACH,KAAML,EAAAA,cAAoBzB,EAAYM,EAAG,KAAM,sKAAuKmB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,eAAgB,4EAA6E,KAAMgB,EAAAA,cAAoBzB,EAAYU,IAAK,CAC9YmB,IAAK,wIACLC,IAAK,KACH,KAAML,EAAAA,cAAoBzB,EAAYO,GAAI,CAC5CwB,MAAO,MACN,KAAMN,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAM,aAAciB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,KAAM,qCAAsCgB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,WAAY,wBAAyB,MAAO,KAAMgB,EAAAA,cAAoBzB,EAAYM,EAAG,KAAMmB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,mBAAoB,gHAAiH,KAAMgB,EAAAA,cAAoBzB,EAAYO,GAAI,KAAM,KAAMkB,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAM,uMAAwM,MAAO,KAAMiB,EAAAA,cAAoBzB,EAAYa,IAAK,KAAMY,EAAAA,cAAoBzB,EAAYc,KAAM,CAC31Ba,UAAW,sBACVF,EAAAA,cAAoBzB,EAAYe,KAAM,CACvCY,UAAW,gBACV,UAAW,qTAAsTF,EAAAA,cAAoBzB,EAAYe,KAAM,CACxWY,UAAW,iBACV,SAAU,qCAAsCF,EAAAA,cAAoBzB,EAAYe,KAAM,CACvFY,UAAW,gBACV,MAAO,KAAMF,EAAAA,cAAoBzB,EAAYe,KAAM,CACpDY,UAAW,eACV,YAAa,KAAMF,EAAAA,cAAoBzB,EAAYe,KAAM,CAC1DY,UAAW,eACV,YAAa,iLAAkL,KAAMF,EAAAA,cAAoBzB,EAAYO,GAAI,CAC1OwB,MAAO,KACN,KAAMN,EAAAA,cAAoBzB,EAAYQ,GAAI,KAAM,gXAAiX,MAAO,KAAMiB,EAAAA,cAAoBzB,EAAYa,IAAK,KAAMY,EAAAA,cAAoBzB,EAAYc,KAAM,CAChgBa,UAAW,sBACVF,EAAAA,cAAoBzB,EAAYe,KAAM,CACvCY,UAAW,gBACV,UAAW,ufAAwfF,EAAAA,cAAoBzB,EAAYe,KAAM,CAC1iBY,UAAW,iBACV,QAAS,0DAA2DF,EAAAA,cAAoBzB,EAAYe,KAAM,CAC3GY,UAAW,iBACV,QAAS,iSAAkSF,EAAAA,cAAoBzB,EAAYe,KAAM,CAClVY,UAAW,iBACV,QAAS,sFAAuFF,EAAAA,cAAoBzB,EAAYe,KAAM,CACvIY,UAAW,iBACV,QAAS,+OAAgPF,EAAAA,cAAoBzB,EAAYe,KAAM,CAChSY,UAAW,iBACV,SAAU,8DAA+DF,EAAAA,cAAoBzB,EAAYe,KAAM,CAChHY,UAAW,eACV,UAAW,QAASF,EAAAA,cAAoBzB,EAAYe,KAAM,CAC3DY,UAAW,eACV,UAAW,4BAA6B,KAAMF,EAAAA,cAAoBzB,EAAYgB,WAAY,KAAM,KAAMS,EAAAA,cAAoBzB,EAAYM,EAAG,KAAMmB,EAAAA,cAAoBzB,EAAYS,OAAQ,KAAM,SAAU,+JAAgK,MAAO,KAAMgB,EAAAA,cAAoBzB,EAAYG,QAAS,CAC9ZwB,UAAW,UACX,oBAAqB,IACrB,kBAAmB,oDAClBF,EAAAA,cAAoBzB,EAAYiB,GAAI,CACrCI,GAAI,oDACHI,EAAAA,cAAoBzB,EAAYK,EAAG,CACpCuB,KAAM,qDACL,wDAAyD,KAAMH,EAAAA,cAAoBzB,EAAYM,EAAG,KAAM,UAAWmB,EAAAA,cAAoBzB,EAAYK,EAAG,CACvJuB,KAAM,4BACL,WAAY,yBACjB,CAKA,MAJA,SAAoB7B,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOiC,QAASC,GAAahC,OAAOC,OAAO,CAAC,GAAGgB,EAAAA,EAAAA,MAAsBnB,EAAMoB,YAC3E,OAAOc,EAAYR,EAAAA,cAAoBQ,EAAWlC,EAAO0B,EAAAA,cAAoB3B,EAAmBC,IAAUD,EAAkBC,EAC9H,E,mFC3JA,MAAMmC,EAAUnC,IACd,MAAOoC,MAAOC,KAAMC,iBAAkBC,MAAOC,GAAWC,aAAa,IAACC,GAAM,EAAI,MAAEC,EAAK,eAAEC,EAAc,QAAEC,KAAU,SAAEC,GAAY9C,EAC3H+C,GAAaC,EAAAA,EAAAA,QAAO,OACnB,EAAGC,IAAeC,EAAAA,EAAAA,UAAS,IAC5BC,GAAmB,OAART,GAAsBA,IAAQF,EAC/C,OAAOd,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoB0B,EAAAA,EAAY,CAC/ER,iBACAC,WACCL,EAAS,GAAGG,OAASA,GAAS,IAAKjB,EAAAA,cAAoB2B,EAAAA,EAAgB,CACxEzB,UAAW0B,EAAAA,IACV5B,EAAAA,cAAoB,UAAW,CAChCE,UAAW2B,IAAGD,EAAAA,IAAiBH,GAAWG,EAAAA,IAC1CE,IAAKT,GACJrB,EAAAA,cAAoB+B,EAAAA,EAAY,CACjCrC,WAAY,CACVsC,GAAIA,IAAM,OAEXZ,IAAYK,GAAWzB,EAAAA,cAAoBiC,EAAAA,EAAiB,CAC7DC,UAAWpB,EACXqB,SAAU,EACVZ,YAAaA,KACX,EAGOa,EAAO9D,IAClB,MAAO+D,UAAU,SAACC,GAAW5B,MAAOC,KAAMI,aAAa,MAACE,GAAQL,iBAAiB,MAACC,MAAYvC,EAC9F,OAAO0B,EAAAA,cAAoBuC,EAAAA,EAAK,CAC9BD,WACArB,MAAOA,GAASJ,EAAM,GAAGI,YAASuB,GAClC,EAGW,SAASC,EAAiBnE,GACvC,OAAO0B,EAAAA,cAAoBS,EAASnC,EAAO0B,EAAAA,cAAoB0C,EAAqBpE,GACtF,C,yFCtBA,MAAMqE,EAA0C,CAC9CC,MAAOC,EAAAA,GACPjE,EAAGkE,EAAAA,GACHvD,WAAYwD,EAAAA,GACZC,UAAWA,EAAAA,GACX/D,IAAKgE,EAAAA,GACL5D,KAAM6D,EAAAA,GACNvD,UAAS,KACTwD,OAAM,KACNC,QAAO,KACPC,SAAUA,EAAAA,IAeZ,IC5CA,GDgCmBC,EAAAA,EAAAA,OAAK,SAAmBC,GAAkD,IAAjD,SAAEnC,EAAQ,WAAE1B,EAAa,CAAC,GAAoB6D,EACxF,OACEvD,EAAAA,cAACwD,EAAAA,GAAW,CACV9D,WAAY,IACPiD,KACAjD,IAEJ0B,EAGP,G,4GEtBA,MAAMqC,EAAa,SAACzC,EAAgB0C,EAA8BC,GAYhE,YAZyD,IAAvBD,IAAAA,EAA0B,SAAS,IAALC,IAAAA,EAAQ,GACxE3C,EAAI4C,SAASC,IACX,MAAM,MAAE5C,EAAK,IAAE6C,EAAG,MAAEjD,GAAUgD,EAC9BH,EAASK,OAAOL,EAASM,OAAQ,EAAG,CAClCL,QACA1C,QACA6C,QAGEjD,GAASA,EAAMmD,OAAS,GAAGP,EAAW5C,EAAO6C,EAAUC,EAAQ,EAAE,IAGhED,CACT,EAsCA,ICvEA,EDmCyBpF,IACvB,MAAM,UAAE4D,GAAc5D,EAEhB2F,GAAUC,EAAAA,EAAAA,UAAQ,IAAMT,EAAWvB,EAAU,GAAGrB,OAAS,KAAK,CAACqB,IAE/DiC,GAAiBC,EAAAA,EAAAA,GAAkB,gBAAiB,CACxDC,UAAW,CAAC,EAAG,GACfC,WAAW,uBAGb,OAAIL,EAAQD,OAAS,EAAU,KAG7BhE,EAAAA,cAAA,OAAKE,UE9CQ,sCF+CXF,EAAAA,cAAA,OAAKE,UE7CW,2CF8CdF,EAAAA,cAAA,MAAIE,UE/CW,4CFgDbF,EAAAA,cAACuE,EAAAA,GAAU,CAACC,GAAG,IAAIC,SAAO,GAAC,iBAK5BR,EAAQS,KAAI,CAAAnB,EAAiBoB,KAAW,IAA3B,MAAE1D,EAAK,IAAE6C,GAAKP,EAC1B,OACEvD,EAAAA,cAAA,KACEE,UAAW2B,IE1DP,sCF0DuBsC,IAAmBL,EAAIc,UAAU,IE5DlD,6CF6DVC,IAAKF,EACLxE,KAAM2D,GACL7C,EACC,KAIN,C,wGGpEH,IAAI6D,EAAU,4CACVC,EAAQ,0CACRxE,EAAU,2C,8FC8Bd,MAAMyE,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBvF,GAC/B,MAAMwF,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAftF,EACFA,EAAWwF,GAGb,IAAIA,KAAsBxF,IAChC,CAACwF,EAAmBxF,GACzB,CAGA,MAAMyF,EAAc,CAAC,EAQd,SAAS3B,GAAY,WAAC9D,EAAU,SAAE0B,EAAQ,qBAAEgE,IAEjD,IAAIC,EAWJ,OAREA,EADED,EAEsB,mBAAf1F,EACHA,EAAW,CAAC,GACZA,GAAcyF,EAEJF,EAAiBvF,GAG5B,gBACLsF,EAAWM,SACX,CAACC,MAAOF,GACRjE,EAEJ,C","sources":["webpack://vad-var-site/./content/Watsonx/WatsonxData/106.md","webpack://vad-var-site/./src/pages/{mdx.fields__slug}.tsx","webpack://vad-var-site/./src/components/MDXWrapper/MDXWrapper.tsx","webpack://vad-var-site/./src/components/MDXWrapper/index.ts","webpack://vad-var-site/./src/components/TableOfContents/TableOfContents.tsx","webpack://vad-var-site/./src/components/TableOfContents/index.ts","webpack://vad-var-site/./src/components/TableOfContents/TableOfContents.module.scss","webpack://vad-var-site/./src/styles/pages/{mdx.fields__slug}.module.scss","webpack://vad-var-site/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    section: \"section\",\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    ol: \"ol\",\n    li: \"li\",\n    strong: \"strong\",\n    img: \"img\",\n    ul: \"ul\",\n    em: \"em\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    blockquote: \"blockquote\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components), {QuizAlert} = _components;\n  if (!QuizAlert) _missingMdxReference(\"QuizAlert\", true);\n  return React.createElement(React.Fragment, null, React.createElement(QuizAlert, {\n    text: \"Heads Up! Quiz material will be flagged like this!\"\n  }), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"2\",\n    \"aria-labelledby\": \"federated-queries\"\n  }, React.createElement(_components.h2, {\n    id: \"federated-queries\"\n  }, React.createElement(_components.a, {\n    href: \"#federated-queries\"\n  }, \"Federated Queries\")), \"\\n\", React.createElement(_components.p, null, \"Unlike traditional database systems, Presto doesn’t have its own native database storage. Instead, Presto supports separation of compute and storage, with dozens of connectors that let Presto access data where it lives – which could be in relational databases, NoSQL databases, data warehouses, data lakes, data lakehouses, and more.\"), \"\\n\", React.createElement(_components.p, null, \"Although Presto supports a wide range of connectors, watsonx.data officially only supports a subset of them. This is because IBM wants to ensure quality, performance, and security of connectors before adding support (which may require updating connector source code to do this). More connectors will be added over time.\"), \"\\n\", React.createElement(_components.p, null, \"The most current list of connectors and the types SQL statements supported can be found \", React.createElement(_components.a, {\n    href: \"https://www.ibm.com/docs/en/watsonxdata/1.0.x?topic=watsonxdata-supported-sql-statements\"\n  }, \"here\"), \". The list of supported connectors will grow over time.\"), \"\\n\", React.createElement(_components.p, null, \"In this section you will combine data from watsonx.data’s object storage with data in Db2 and PostgreSQL databases. To avoid you having to provision these databases yourself, they’ve been installed in the same VM as watsonx.data and are pre-populated with data.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Select the \", React.createElement(_components.strong, null, \"Infrastructure manager\"), \" icon from the left-side menu.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Click the \", React.createElement(_components.strong, null, \"Add component\"), \" dropdown menu at the right-side of the screen. Select \", React.createElement(_components.strong, null, \"Add Database\"), \".\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(QuizAlert, {\n    text: \"Quiz material: pay attention to the Add components menu\"\n  }), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/106/add-database.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"3\"\n  }, \"\\n\", React.createElement(_components.li, null, \"In the \", React.createElement(_components.strong, null, \"Add database\"), \" pop-up window, select/enter the following pieces of information in the \", React.createElement(_components.strong, null, \"1. Database definition\"), \" section:\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Database type\"), \":    IBM Db2\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Database name\"), \":    GOSALES\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Display name\"), \":     Db2DW\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Hostname\"), \":         192.168.252.2\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Port\"), \":             50000\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Username\"), \":         db2inst1\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Password\"), \":         db2inst1\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"SSL connection\"), \":   \", React.createElement(_components.em, null, React.createElement(_components.strong, null, \"Uncheck\"))), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/106/add-database-form1.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"When a new bucket or database is added to watsonx.data, a new catalog is created as well.\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"4\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Scroll down to section \", React.createElement(_components.strong, null, \"2. Associated catalog definition\"), \". Enter \", React.createElement(_components.strong, null, \"db2catalog\"), \" for the \", React.createElement(_components.strong, null, \"Catalog name\"), \". Then, click \", React.createElement(_components.strong, null, \"Add\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/106/add-database-form2.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"The \", React.createElement(_components.strong, null, \"Db2DW\"), \" database and \", React.createElement(_components.strong, null, \"db2catalog\"), \" catalog have been added to watsonx.data and are now reflected in the topology view of the infrastructure components.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/106/add-database-output.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"The \", React.createElement(_components.strong, null, \"db2catalog\"), \" catalog is automatically associated with the \", React.createElement(_components.strong, null, \"Db2DW\"), \" database, but to be able to query data from this database, the \", React.createElement(_components.strong, null, \"db2catalog\"), \" catalog must also be associated with the \", React.createElement(_components.strong, null, \"presto-01\"), \" engine.\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"5\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Hover your mouse pointer over the \", React.createElement(_components.strong, null, \"db2catalog\"), \" catalog tile and the \", React.createElement(_components.strong, null, \"Manage associations\"), \" icon will appear. Click the \", React.createElement(_components.strong, null, \"Manage associations\"), \" icon.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/106/manage-association.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"6\"\n  }, \"\\n\", React.createElement(_components.li, null, \"In the \", React.createElement(_components.strong, null, \"Manage associations\"), \" pop-up window, select the checkbox for the \", React.createElement(_components.strong, null, \"presto-01\"), \" engine and then click \", React.createElement(_components.strong, null, \"Save and restart engine\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/106/manage-association-save.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"A line now connects \", React.createElement(_components.strong, null, \"presto-01\"), \" with \", React.createElement(_components.strong, null, \"db2catalog\"), \", indicating that they’re associated.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/106/manage-association-connect.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Next you will add the PostgreSQL database. The password for the PostgreSQL admin account is specific to your environment and the following steps will extract it for you.\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"7\"\n  }, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Open a terminal command window to the watsonx.data server as the root user.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"The administrative user for the PostgreSQL database is \", React.createElement(_components.strong, null, \"admin\"), \". Run the following command to extract and display the \", React.createElement(_components.strong, null, \"password\"), \". Copy the value shown to a location you can refer to later.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, \"docker \", React.createElement(_components.span, {\n    className: \"hljs-built_in\"\n  }, \"exec\"), \" ibm-lh-postgres \", React.createElement(_components.span, {\n    className: \"hljs-built_in\"\n  }, \"printenv\"), \" | grep POSTGRES_PASSWORD | sed \", React.createElement(_components.span, {\n    className: \"hljs-string\"\n  }, \"'s/.*=//'\"), \"\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"9\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Repeat Steps 2-6 from above to add the PostgreSQL database to watsonx.data. Use the following information:\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Database type\"), \":    PostgreSQL(it can be found under Other Databases)\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Database name\"), \":    gosales\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Display name\"), \":     PostgreSQLDB\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Hostname\"), \":         192.168.252.2\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Port\"), \":             5432\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Username\"), \":         admin\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Password\"), \":         \", React.createElement(_components.em, null, React.createElement(_components.strong, null, \"The password generated in the previous step\"))), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Catalog name\"), \":     pgcatalog\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"With both the Db2 and PostgreSQL databases added, the topology should look like the image below.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/106/add-database-output-pg.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"10\"\n  }, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Select the \", React.createElement(_components.strong, null, \"Data manager\"), \" icon from the left-side menu.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Expand both the db2catalog and pgcatalog catalogs.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/106/data-manager-view.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Schema and table information are shown for both of these databases. Both include an identical \", React.createElement(_components.strong, null, \"gosalesdw\"), \" schema with tables containing sales data for the fictional Great Outdoors company. Remember that there is also a copy of this same data in object storage, managed by the \", React.createElement(_components.strong, null, \"hive_data\"), \" catalog.\"), \"\\n\", React.createElement(_components.p, null, \"If you do not see any tables associated with the gosalesdw schema in either of the catalogs, you can refresh the schema.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/106/data-manager-refresh.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Note:\"), \" If for some reason the list of tables does not refresh, or if you see a message appear in the upper-right corner saying \", React.createElement(_components.em, null, React.createElement(_components.strong, null, \"“An error occurred while loading the tables in gosalesdw”\")), \", similar to the image below, you can still proceed. The table information is in the catalog and queries that reference these tables will still work. Please proceed with the rest of the lab.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/106/data-manager-view-refresh-error.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"You now have copies of the Great Outdoors company sales tables in object storage (hive_data), Db2 (db2catalog), and PostgreSQL (pgcatalog). This isn’t something you’d have in a real-world scenario (after all, the benefit of being able to federate access to multiple data sources is to avoid data duplication). However, it’s being done here for the purposes of highlighting Presto’s federation capabilities.\"), \"\\n\", React.createElement(_components.p, null, \"You will now see how you can run a federated query that combines data from all three of these data sources.\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"12\"\n  }, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Select the \", React.createElement(_components.strong, null, \"Query workspace\"), \" icon from the left-side menu.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Copy and paste the query below into the \", React.createElement(_components.strong, null, \"SQL worksheet\"), \". Click \", React.createElement(_components.strong, null, \"Run on presto-01\"), \".\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"This sample query could be used by the fictional business to determine which purchasing method is associated with the largest orders. The query accesses five tables, one of which is in PostgreSQL, two are in Db2, and two are in watsonx.data’s object storage.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, React.createElement(_components.span, {\n    className: \"hljs-keyword\"\n  }, \"select\"), \"  pll.product_line_en as product, md.order_method_en as order_method, \", React.createElement(_components.span, {\n    className: \"hljs-built_in\"\n  }, \"sum\"), \"(sf.quantity) as total \\n  from \\n    pgcatalog.gosalesdw.sls_order_method_dim as md, \\n    db2catalog.gosalesdw.sls_product_dim as pd, \\n    db2catalog.gosalesdw.sls_product_line_lookup as pll,\\n    hive_data.gosalesdw.sls_product_brand_lookup as pbl,\\n    hive_data.gosalesdw.sls_sales_fact as sf \\n  \", React.createElement(_components.span, {\n    className: \"hljs-built_in\"\n  }, \"where\"), \"\\n    pd.product_key = sf.product_key\\n    and md.order_method_key = sf.order_method_key\\n    and pll.product_line_code = pd.product_line_code \\n    and pbl.product_brand_code = pd.product_brand_code\\n  group by pll.product_line_en, md.order_method_en \\n  order by product, order_method;\\n\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Note:\"), \" If the SQL statement pastes into the worksheet as a single line, you can nicely format it by clicking the \", React.createElement(_components.strong, null, \"Format worksheet\"), \" icon.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/106/query-format.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"The \", React.createElement(_components.strong, null, \"Result set\"), \" for the query is found at the bottom of the screen.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/106/query-result.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"14\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Click the \", React.createElement(_components.strong, null, \"Explain\"), \" button in the menu bar of the worksheet.\"), \"\\n\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/106/query-result-explain.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"The visual explain output for this query looks a lot more interesting than the one shown earlier. If you scroll through the visual explain output, you’ll see five \", React.createElement(_components.strong, null, \"ScanProject\"), \" leaf nodes in the tree. These correspond to the five tables being read.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/ibm-build-lab/VAD-VAR-Workshop/main/content//Watsonx/WatsonxData/images/106/query-result-tables.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"15\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Click the \", React.createElement(_components.strong, null, \"X\"), \" in the upper-right corner of the \", React.createElement(_components.strong, null, \"Explain\"), \" window to close it.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Optional step :\"), \" Here are two other queries you can try running as well, which combine datafrom the same three data sources.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"The following query displays all Canadian and Mexican employees, along with their region and country. This is the kind of query that a reporting tool might generate, based on input from the user.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, React.createElement(_components.span, {\n    className: \"hljs-keyword\"\n  }, \"select\"), \" distinct branch_region_dim.region_en region, \\n  branch_region_dim.country_en country,\\n  emp_employee_dim.employee_name employee \\nfrom \\n  hive_data.gosalesdw.go_region_dim branch_region_dim,\\n  pgcatalog.gosalesdw.emp_employee_dim emp_employee_dim,\\n  db2catalog.gosalesdw.go_branch_dim go_branch_dim\\n\", React.createElement(_components.span, {\n    className: \"hljs-built_in\"\n  }, \"where\"), \" \\n  branch_region_dim.country_en \", React.createElement(_components.span, {\n    className: \"hljs-keyword\"\n  }, \"in\"), \" (\", React.createElement(_components.span, {\n    className: \"hljs-string\"\n  }, \"'Canada'\"), \", \", React.createElement(_components.span, {\n    className: \"hljs-string\"\n  }, \"'Mexico'\"), \") and\\n  branch_region_dim.country_code = go_branch_dim.country_code and\\n  emp_employee_dim.branch_code = go_branch_dim.branch_code \\norder by region, country, employee;\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"In many businesses, departments (or organizations, as they’re called in this dataset) are hierarchical, in that a department falls under another department, which in turn falls under another one. This query displays the two parent departments for a given set of departments. As in the previous query, this is the kind of query that a reporting tool might generate.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"hljs language-bash\"\n  }, React.createElement(_components.span, {\n    className: \"hljs-keyword\"\n  }, \"select\"), \" gosalesdw.go_org_dim.organization_key, \\n  go_org_dim_1.organization_parent as org_level1_code, \\n  go_org_name_lookup_1.organization_name_en as org_level1_name, \\n  gosalesdw.go_org_dim.organization_parent as org_level2_code, \\n  go_org_name_lookup_2.organization_name_en as org_level2_name, \\n  gosalesdw.go_org_dim.organization_code as org_code, \\n  gosalesdw.go_org_name_lookup.organization_name_en as org_name\\nfrom  pgcatalog.gosalesdw.go_org_name_lookup  go_org_name_lookup_2 \\n        inner \", React.createElement(_components.span, {\n    className: \"hljs-built_in\"\n  }, \"join\"), \"\\n      hive_data.gosalesdw.go_org_dim \\n        inner \", React.createElement(_components.span, {\n    className: \"hljs-built_in\"\n  }, \"join\"), \"\\n      pgcatalog.gosalesdw.go_org_name_lookup\\n        on hive_data.gosalesdw.go_org_dim.organization_code = pgcatalog.gosalesdw.go_org_name_lookup.organization_code\\n        on go_org_name_lookup_2.organization_code = hive_data.gosalesdw.go_org_dim.organization_parent\\n        inner \", React.createElement(_components.span, {\n    className: \"hljs-built_in\"\n  }, \"join\"), \"\\n      pgcatalog.gosalesdw.go_org_name_lookup go_org_name_lookup_1\\n        inner \", React.createElement(_components.span, {\n    className: \"hljs-built_in\"\n  }, \"join\"), \" \\n      hive_data.gosalesdw.go_org_dim go_org_dim_1\\n        on go_org_name_lookup_1.organization_code = go_org_dim_1.organization_parent\\n        on hive_data.gosalesdw.go_org_dim.organization_parent = go_org_dim_1.organization_code\\n\", React.createElement(_components.span, {\n    className: \"hljs-built_in\"\n  }, \"where\"), \" (hive_data.gosalesdw.go_org_dim.organization_code between \", React.createElement(_components.span, {\n    className: \"hljs-string\"\n  }, \"'1700'\"), \" and \", React.createElement(_components.span, {\n    className: \"hljs-string\"\n  }, \"'5730'\"), \")\\norder by org_code;\\n\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Note:\"), \" Try running the two queries above from within the Presto CLI as well. You should get the same results in the Presto CLI as you did in the Query workspace.\"), \"\\n\"), \"\\n\", React.createElement(_components.section, {\n    className: \"heading\",\n    \"data-heading-rank\": \"3\",\n    \"aria-labelledby\": \"congratulations-youve-reached-the-end-of-lab-106\"\n  }, React.createElement(_components.h3, {\n    id: \"congratulations-youve-reached-the-end-of-lab-106\"\n  }, React.createElement(_components.a, {\n    href: \"#congratulations-youve-reached-the-end-of-lab-106\"\n  }, \"Congratulations, you've reached the end of lab 106.\")), \"\\n\", React.createElement(_components.p, null, \"Click, \", React.createElement(_components.a, {\n    href: \"/watsonx/watsonxdata/107\"\n  }, \"lab 107\"), \" to start next lab.\"))));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/VAD-VAR-Workshop/VAD-VAR-Workshop/content/Watsonx/WatsonxData/106.md\";\nimport React, {useRef, useState} from 'react';\nimport cx from 'classnames';\nimport SEO from '@components/SEO';\nimport PageHeader from '@components/PageHeader';\nimport MDXWrapper from '@components/MDXWrapper';\nimport ContentWrapper from '@components/ContentWrapper';\nimport TableOfContents from '@components/TableOfContents';\nimport * as styles from '@styles/pages/{mdx.fields__slug}.module.scss';\nconst Content = props => {\n  const {data: {mdx: {tableOfContents: {items: tocItems}, frontmatter: {toc = true, title, timeToComplete, updated}}}, children} = props;\n  const articleRef = useRef(null);\n  const {0: currSection} = useState('');\n  const showToc = (toc === null ? true : toc) && tocItems;\n  return React.createElement(React.Fragment, null, React.createElement(PageHeader, {\n    timeToComplete,\n    updated\n  }, tocItems[0].title || title || ''), React.createElement(ContentWrapper, {\n    className: styles.wrapper\n  }, React.createElement(\"article\", {\n    className: cx(styles.article, !showToc && styles.noToc),\n    ref: articleRef\n  }, React.createElement(MDXWrapper, {\n    components: {\n      h1: () => null\n    }\n  }, children)), showToc && React.createElement(TableOfContents, {\n    itemsList: tocItems,\n    maxDepth: 2,\n    currSection: currSection\n  })));\n};\nconst pageQuery = \"3587680389\";\nexport const Head = props => {\n  const {location: {pathname}, data: {mdx: {frontmatter: {title}, tableOfContents: {items}}}} = props;\n  return React.createElement(SEO, {\n    pathname,\n    title: title || items[0].title || undefined\n  });\n};\nContent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Content, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React, { memo } from 'react';\nimport { MDXProvider } from '@mdx-js/react';\nimport { Props } from '@mdx-js/react/lib';\nimport {\n  BlockQuote,\n  CodeBlock,\n  CopyText,\n  Danger,\n  ImageWrapper,\n  QuizAlert,\n  SmartLink,\n  SubHeader,\n  TableWrapper,\n  Warning\n} from '../replacements';\n\ninterface MDXWrapperProps {\n  children: React.ReactNode;\n  components?: Props['components'];\n}\n\nconst standardComponents: Props['components'] = {\n  table: TableWrapper,\n  a: SmartLink,\n  blockquote: BlockQuote,\n  SubHeader: SubHeader,\n  img: ImageWrapper,\n  code: CodeBlock,\n  QuizAlert,\n  Danger,\n  Warning,\n  CopyText: CopyText\n};\n\nconst MDXWrapper = memo(function MDXWrapper({ children, components = {} }: MDXWrapperProps) {\n  return (\n    <MDXProvider\n      components={{\n        ...standardComponents,\n        ...components\n      }}>\n      {children}\n    </MDXProvider>\n  );\n});\n\nexport default MDXWrapper;\n","import MDXWrapper from './MDXWrapper';\n\nexport default MDXWrapper;\n","import React, { useMemo } from 'react';\nimport { Link as GatsbyLink } from 'gatsby';\nimport cx from 'classnames';\nimport useCurrentHeading from '@hooks/useCurrentHeading';\nimport * as styles from './TableOfContents.module.scss';\n\ninterface TableOfContentsProps {\n  itemsList: TOCItem[];\n  currSection: string | undefined;\n  maxDepth?: number;\n}\n\ninterface TOCItem {\n  title: string;\n  url: string;\n  items?: TOCItem[];\n}\n\ninterface FlatTOCItem extends Omit<TOCItem, 'items'> {\n  depth: number;\n}\n\nconst flattenTOC = (toc: TOCItem[], flatList: FlatTOCItem[] = [], depth = 0): FlatTOCItem[] => {\n  toc.forEach((item) => {\n    const { title, url, items } = item;\n    flatList.splice(flatList.length, 0, {\n      depth,\n      title,\n      url\n    });\n\n    if (items && items.length > 0) flattenTOC(items, flatList, depth + 1);\n  });\n\n  return flatList;\n};\n\nconst TableOfContents = (props: TableOfContentsProps) => {\n  const { itemsList } = props;\n\n  const flatTOC = useMemo(() => flattenTOC(itemsList[0].items || []), [itemsList]);\n\n  const currentSection = useCurrentHeading('h1[id],h2[id]', {\n    threshold: [0, 1],\n    rootMargin: `-${styles.headerHeight} 0px -90% 0px`\n  });\n\n  if (flatTOC.length < 1) return null;\n\n  return (\n    <nav className={styles.toc}>\n      <div className={styles.tocStack}>\n        <h6 className={styles.tocHeader}>\n          <GatsbyLink to='#' replace>\n            On this page\n          </GatsbyLink>\n        </h6>\n\n        {flatTOC.map(({ title, url }, index) => {\n          return (\n            <a\n              className={cx(styles.link, currentSection === url.substring(1) && styles.activeItem)}\n              key={index}\n              href={url}>\n              {title}\n            </a>\n          );\n        })}\n      </div>\n    </nav>\n  );\n};\n\nexport default TableOfContents;\n","import TableOfContents from './TableOfContents';\n\nexport default TableOfContents;\n","// extracted by mini-css-extract-plugin\nexport var activeItem = \"TableOfContents-module--activeItem--3869f\";\nexport var headerHeight = \"48px\";\nexport var link = \"TableOfContents-module--link--b292b\";\nexport var toc = \"TableOfContents-module--toc--54d35\";\nexport var tocHeader = \"TableOfContents-module--tocHeader--05956\";\nexport var tocStack = \"TableOfContents-module--tocStack--90609\";","// extracted by mini-css-extract-plugin\nexport var article = \"{mdx-fields__slug}-module--article--e3d5a\";\nexport var noToc = \"{mdx-fields__slug}-module--noToc--82387\";\nexport var wrapper = \"{mdx-fields__slug}-module--wrapper--58e72\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","section","h2","a","p","ol","li","strong","img","ul","em","pre","code","span","blockquote","h3","_provideComponents","components","QuizAlert","id","component","Error","_missingMdxReference","React","text","className","href","src","alt","start","wrapper","MDXLayout","Content","data","mdx","tableOfContents","items","tocItems","frontmatter","toc","title","timeToComplete","updated","children","articleRef","useRef","currSection","useState","showToc","PageHeader","ContentWrapper","styles","cx","ref","MDXWrapper","h1","TableOfContents","itemsList","maxDepth","Head","location","pathname","SEO","undefined","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","standardComponents","table","TableWrapper","SmartLink","BlockQuote","SubHeader","ImageWrapper","CodeBlock","Danger","Warning","CopyText","memo","_ref","MDXProvider","flattenTOC","flatList","depth","forEach","item","url","splice","length","flatTOC","useMemo","currentSection","useCurrentHeading","threshold","rootMargin","GatsbyLink","to","replace","map","index","substring","key","article","noToc","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}